{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, isUndefined, Browser, compile, isNullOrUndefined, SanitizeHtmlHelper, animationMode } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { rippleEffect, Animation, remove } from '@syncfusion/ej2-base';\nimport { Draggable, Droppable } from '@syncfusion/ej2-base';\nimport { getElement } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, closest, matches, detach, select, selectAll, isVisible, append } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined as isNOU, Touch, getValue, setValue, extend, merge, attributes } from '@syncfusion/ej2-base';\nimport { ListBase } from '@syncfusion/ej2-lists';\nimport { createCheckBox, rippleMouseHandler } from '@syncfusion/ej2-buttons';\nimport { Input } from '@syncfusion/ej2-inputs';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nvar ROOT = 'e-treeview';\nvar CONTROL = 'e-control';\nvar COLLAPSIBLE = 'e-icon-collapsible';\nvar EXPANDABLE = 'e-icon-expandable';\nvar LISTITEM = 'e-list-item';\nvar LISTTEXT = 'e-list-text';\nvar LISTWRAP = 'e-text-wrap';\nvar IELISTWRAP = 'e-ie-wrap';\nvar PARENTITEM = 'e-list-parent';\nvar HOVER = 'e-hover';\nvar ACTIVE = 'e-active';\nvar LOAD = 'e-icons-spinner';\nvar PROCESS = 'e-process';\nvar ICON = 'e-icons';\nvar TEXTWRAP = 'e-text-content';\nvar INPUT = 'e-input';\nvar INPUTGROUP = 'e-input-group';\nvar TREEINPUT = 'e-tree-input';\nvar EDITING = 'e-editing';\nvar RTL = 'e-rtl';\nvar INTERACTION = 'e-interaction';\nvar DRAGITEM = 'e-drag-item';\nvar DROPPABLE = 'e-droppable';\nvar DRAGGING = 'e-dragging';\nvar SIBLING = 'e-sibling';\nvar DROPIN = 'e-drop-in';\nvar DROPNEXT = 'e-drop-next';\nvar DROPOUT = 'e-drop-out';\nvar NODROP = 'e-no-drop';\nvar FULLROWWRAP = 'e-fullrow-wrap';\nvar FULLROW = 'e-fullrow';\nvar SELECTED = 'e-selected';\nvar EXPANDED = 'e-expanded';\nvar NODECOLLAPSED = 'e-node-collapsed';\nvar DISABLE = 'e-disable';\nvar DROPCOUNT = 'e-drop-count';\nvar CHECK = 'e-check';\nvar INDETERMINATE = 'e-stop';\nvar CHECKBOXWRAP = 'e-treeview-checkbox';\nvar CHECKBOXFRAME = 'e-frame';\nvar CHECKBOXRIPPLE = 'e-ripple-container';\nvar RIPPLE = 'e-ripple';\nvar RIPPLEELMENT = 'e-ripple-element';\nvar FOCUS = 'e-node-focus';\nvar IMAGE = 'e-list-img';\nvar BIGGER = 'e-bigger';\nvar SMALL = 'e-small';\nvar CHILD = 'e-has-child';\nvar ITEM_ANIMATION_ACTIVE = 'e-animation-active';\nvar DISABLED = 'e-disabled';\nvar PREVENTSELECT = 'e-prevent';\nvar treeAriaAttr = {\n  treeRole: 'group',\n  itemRole: 'treeitem',\n  listRole: 'group',\n  itemText: '',\n  wrapperRole: ''\n};\n/**\r\n * Configures the fields to bind to the properties of node in the TreeView component.\r\n */\nvar FieldsSettings = /** @class */function (_super) {\n  __extends(FieldsSettings, _super);\n  function FieldsSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('child')], FieldsSettings.prototype, \"child\", void 0);\n  __decorate([Property([])], FieldsSettings.prototype, \"dataSource\", void 0);\n  __decorate([Property('expanded')], FieldsSettings.prototype, \"expanded\", void 0);\n  __decorate([Property('hasChildren')], FieldsSettings.prototype, \"hasChildren\", void 0);\n  __decorate([Property('htmlAttributes')], FieldsSettings.prototype, \"htmlAttributes\", void 0);\n  __decorate([Property('iconCss')], FieldsSettings.prototype, \"iconCss\", void 0);\n  __decorate([Property('id')], FieldsSettings.prototype, \"id\", void 0);\n  __decorate([Property('imageUrl')], FieldsSettings.prototype, \"imageUrl\", void 0);\n  __decorate([Property('isChecked')], FieldsSettings.prototype, \"isChecked\", void 0);\n  __decorate([Property('parentID')], FieldsSettings.prototype, \"parentID\", void 0);\n  __decorate([Property(null)], FieldsSettings.prototype, \"query\", void 0);\n  __decorate([Property('selectable')], FieldsSettings.prototype, \"selectable\", void 0);\n  __decorate([Property('selected')], FieldsSettings.prototype, \"selected\", void 0);\n  __decorate([Property(null)], FieldsSettings.prototype, \"tableName\", void 0);\n  __decorate([Property('text')], FieldsSettings.prototype, \"text\", void 0);\n  __decorate([Property('tooltip')], FieldsSettings.prototype, \"tooltip\", void 0);\n  __decorate([Property('navigateUrl')], FieldsSettings.prototype, \"navigateUrl\", void 0);\n  return FieldsSettings;\n}(ChildProperty);\nexport { FieldsSettings };\n/**\r\n * Configures animation settings for the TreeView component.\r\n */\nvar ActionSettings = /** @class */function (_super) {\n  __extends(ActionSettings, _super);\n  function ActionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('SlideDown')], ActionSettings.prototype, \"effect\", void 0);\n  __decorate([Property(400)], ActionSettings.prototype, \"duration\", void 0);\n  __decorate([Property('linear')], ActionSettings.prototype, \"easing\", void 0);\n  return ActionSettings;\n}(ChildProperty);\nexport { ActionSettings };\n/**\r\n * Configures the animation settings for expanding and collapsing nodes in TreeView.\r\n */\nvar NodeAnimationSettings = /** @class */function (_super) {\n  __extends(NodeAnimationSettings, _super);\n  function NodeAnimationSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Complex({\n    effect: 'SlideUp',\n    duration: 400,\n    easing: 'linear'\n  }, ActionSettings)], NodeAnimationSettings.prototype, \"collapse\", void 0);\n  __decorate([Complex({\n    effect: 'SlideDown',\n    duration: 400,\n    easing: 'linear'\n  }, ActionSettings)], NodeAnimationSettings.prototype, \"expand\", void 0);\n  return NodeAnimationSettings;\n}(ChildProperty);\nexport { NodeAnimationSettings };\n/**\r\n * The TreeView component is used to represent hierarchical data in a tree like structure with advanced\r\n * functions to perform edit, drag and drop, selection with check-box, and more.\r\n * ```html\r\n * <div id=\"tree\"></div>\r\n * ```\r\n * ```typescript\r\n * let treeObj: TreeView = new TreeView();\r\n * treeObj.appendTo('#tree');\r\n * ```\r\n */\nvar TreeView = /** @class */function (_super) {\n  __extends(TreeView, _super);\n  function TreeView(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.isRefreshed = false;\n    _this.preventExpand = false;\n    _this.checkedElement = [];\n    _this.disableNode = [];\n    _this.validArr = [];\n    _this.validNodes = [];\n    _this.expandChildren = [];\n    _this.isFieldChange = false;\n    _this.changeDataSource = false;\n    _this.hasTemplate = false;\n    _this.isFirstRender = false;\n    // Specifies whether the node is dropped or not\n    _this.isNodeDropped = false;\n    _this.isInteracted = false;\n    _this.isRightClick = false;\n    _this.mouseDownStatus = false;\n    _this.isDropIn = false;\n    _this.OldCheckedData = [];\n    return _this;\n  }\n  TreeView_1 = TreeView;\n  /**\r\n   * Get component name.\r\n   *\r\n   * @returns {string} - returns module name.\r\n   * @private\r\n   */\n  TreeView.prototype.getModuleName = function () {\n    return 'treeview';\n  };\n  /**\r\n   * Initialize the event handler\r\n   *\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.preRender = function () {\n    var _this = this;\n    this.checkActionNodes = [];\n    this.parentNodeCheck = [];\n    this.dragStartAction = false;\n    this.isAnimate = false;\n    this.keyConfigs = {\n      escape: 'escape',\n      end: 'end',\n      enter: 'enter',\n      f2: 'f2',\n      home: 'home',\n      moveDown: 'downarrow',\n      moveLeft: 'leftarrow',\n      moveRight: 'rightarrow',\n      moveUp: 'uparrow',\n      ctrlDown: 'ctrl+downarrow',\n      ctrlUp: 'ctrl+uparrow',\n      ctrlEnter: 'ctrl+enter',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      ctrlA: 'ctrl+A',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftEnter: 'shift+enter',\n      shiftHome: 'shift+home',\n      shiftEnd: 'shift+end',\n      csDown: 'ctrl+shift+downarrow',\n      csUp: 'ctrl+shift+uparrow',\n      csEnter: 'ctrl+shift+enter',\n      csHome: 'ctrl+shift+home',\n      csEnd: 'ctrl+shift+end',\n      space: 'space',\n      shiftSpace: 'shift+space',\n      ctrlSpace: 'ctrl+space'\n    };\n    this.listBaseOption = {\n      expandCollapse: true,\n      showIcon: true,\n      expandIconClass: EXPANDABLE,\n      ariaAttributes: treeAriaAttr,\n      expandIconPosition: 'Left',\n      itemCreated: function (e) {\n        _this.beforeNodeCreate(e);\n      },\n      enableHtmlSanitizer: this.enableHtmlSanitizer,\n      itemNavigable: this.fullRowNavigable\n    };\n    this.updateListProp(this.fields);\n    this.aniObj = new Animation({});\n    this.treeList = [];\n    this.isLoaded = false;\n    this.isInitalExpand = false;\n    this.expandChildren = [];\n    this.index = 0;\n    this.setTouchClass();\n    this.DDTTreeData = JSON.parse(JSON.stringify(this.fields.dataSource));\n    if (isNOU(this.selectedNodes)) {\n      this.setProperties({\n        selectedNodes: []\n      }, true);\n    }\n    if (isNOU(this.checkedNodes)) {\n      this.setProperties({\n        checkedNodes: []\n      }, true);\n    }\n    if (isNOU(this.expandedNodes)) {\n      this.setProperties({\n        expandedNodes: []\n      }, true);\n    } else {\n      this.isInitalExpand = true;\n    }\n  };\n  /**\r\n   * Get the properties to be maintained in the persisted state.\r\n   *\r\n   * @returns {string} - returns the persisted data\r\n   * @hidden\r\n   */\n  TreeView.prototype.getPersistData = function () {\n    var keyEntity = ['selectedNodes', 'checkedNodes', 'expandedNodes'];\n    return this.addOnPersist(keyEntity);\n  };\n  /**\r\n   * To Initialize the control rendering\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.render = function () {\n    this.initialRender = true;\n    this.initialize();\n    this.setDataBinding(false);\n    this.setDisabledMode();\n    this.setExpandOnType();\n    if (!this.disabled) {\n      this.setRipple();\n    }\n    this.wireEditingEvents(this.allowEditing);\n    this.setDragAndDrop(this.allowDragAndDrop);\n    if (!this.disabled) {\n      this.wireEvents();\n    }\n    this.initialRender = false;\n    this.renderComplete();\n  };\n  TreeView.prototype.initialize = function () {\n    this.element.setAttribute('role', 'tree');\n    this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\n    this.setCssClass(null, this.cssClass);\n    this.setEnableRtl();\n    this.setFullRow(this.fullRowSelect);\n    this.setTextWrap();\n    this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\n  };\n  TreeView.prototype.setDisabledMode = function () {\n    if (this.disabled) {\n      this.element.classList.add(DISABLED);\n      this.element.setAttribute('aria-disabled', 'true');\n    } else {\n      this.element.classList.remove(DISABLED);\n      this.element.setAttribute('aria-disabled', 'false');\n    }\n  };\n  TreeView.prototype.setEnableRtl = function () {\n    (this.enableRtl ? addClass : removeClass)([this.element], RTL);\n  };\n  TreeView.prototype.setRipple = function () {\n    var tempStr = '.' + FULLROW + ',.' + TEXTWRAP;\n    var rippleModel = {\n      selector: tempStr,\n      ignore: '.' + TEXTWRAP + ' > .' + ICON + ',.' + INPUTGROUP + ',.' + INPUT + ', .' + CHECKBOXWRAP\n    };\n    this.rippleFn = rippleEffect(this.element, rippleModel);\n    var iconModel = {\n      selector: '.' + TEXTWRAP + ' > .' + ICON,\n      isCenterRipple: true\n    };\n    this.rippleIconFn = rippleEffect(this.element, iconModel);\n  };\n  TreeView.prototype.setFullRow = function (isEnabled) {\n    (isEnabled ? addClass : removeClass)([this.element], FULLROWWRAP);\n  };\n  TreeView.prototype.setMultiSelect = function (isEnabled) {\n    if (isEnabled) {\n      this.element.setAttribute('aria-multiselectable', 'true');\n    } else {\n      this.element.setAttribute('aria-multiselectable', 'false');\n    }\n  };\n  TreeView.prototype.templateComplier = function (template) {\n    if (template) {\n      this.hasTemplate = true;\n      this.element.classList.add(INTERACTION);\n      try {\n        if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        } else {\n          return compile(template);\n        }\n      } catch (e) {\n        return compile(template);\n      }\n    }\n    this.element.classList.remove(INTERACTION);\n    return undefined;\n  };\n  TreeView.prototype.setDataBinding = function (changeDataSource) {\n    var _this = this;\n    this.treeList.push('false');\n    if (this.fields.dataSource instanceof DataManager) {\n      this.isOffline = this.fields.dataSource.dataSource.offline;\n      if (this.fields.dataSource.ready) {\n        this.fields.dataSource.ready.then(function (e) {\n          _this.isOffline = _this.fields.dataSource.dataSource.offline;\n          if (_this.fields.dataSource instanceof DataManager && _this.isOffline) {\n            _this.treeList.pop();\n            _this.treeData = e.result;\n            _this.isNumberTypeId = _this.getType();\n            _this.setRootData();\n            _this.renderItems(true);\n            if (_this.treeList.length === 0 && !_this.isLoaded) {\n              _this.finalize();\n            }\n          }\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      } else {\n        this.fields.dataSource.executeQuery(this.getQuery(this.fields)).then(function (e) {\n          _this.treeList.pop();\n          _this.treeData = e.result;\n          _this.isNumberTypeId = _this.getType();\n          _this.setRootData();\n          if (changeDataSource) {\n            _this.changeDataSource = true;\n          }\n          _this.renderItems(true);\n          _this.changeDataSource = false;\n          if (_this.treeList.length === 0 && !_this.isLoaded) {\n            _this.finalize();\n          }\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      }\n    } else {\n      this.treeList.pop();\n      if (isNOU(this.fields.dataSource)) {\n        this.rootData = this.treeData = [];\n      } else {\n        this.treeData = JSON.parse(JSON.stringify(this.fields.dataSource));\n        this.setRootData();\n      }\n      this.isNumberTypeId = this.getType();\n      this.renderItems(false);\n    }\n    if (this.treeList.length === 0 && !this.isLoaded) {\n      this.finalize();\n    }\n  };\n  TreeView.prototype.getQuery = function (mapper, value) {\n    if (value === void 0) {\n      value = null;\n    }\n    var columns = [];\n    var query;\n    if (!mapper.query) {\n      query = new Query();\n      var prop = this.getActualProperties(mapper);\n      for (var _i = 0, _a = Object.keys(prop); _i < _a.length; _i++) {\n        var col = _a[_i];\n        if (col !== 'dataSource' && col !== 'tableName' && col !== 'child' && !!mapper[\"\" + col] && col !== 'url' && columns.indexOf(mapper[\"\" + col]) === -1) {\n          columns.push(mapper[\"\" + col]);\n        }\n      }\n      query.select(columns);\n      if (Object.prototype.hasOwnProperty.call(prop, 'tableName')) {\n        query.from(mapper.tableName);\n      }\n    } else {\n      query = mapper.query.clone();\n    }\n    ListBase.addSorting(this.sortOrder, mapper.text, query);\n    if (!isNOU(value) && !isNOU(mapper.parentID)) {\n      query.where(mapper.parentID, 'equal', this.isNumberTypeId ? parseFloat(value) : value);\n    }\n    return query;\n  };\n  TreeView.prototype.getType = function () {\n    return this.treeData[0] ? typeof getValue(this.fields.id, this.treeData[0]) === 'number' ? true : false : false;\n  };\n  TreeView.prototype.setRootData = function () {\n    this.dataType = this.getDataType(this.treeData, this.fields);\n    if (this.dataType === 1) {\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n      var rootItems = this.getChildNodes(this.treeData, undefined, true);\n      if (isNOU(rootItems)) {\n        this.rootData = [];\n      } else {\n        this.rootData = rootItems;\n      }\n    } else {\n      this.rootData = this.treeData;\n    }\n  };\n  TreeView.prototype.isChildObject = function () {\n    if (typeof this.fields.child === 'object') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  TreeView.prototype.renderItems = function (isSorted) {\n    this.listBaseOption.ariaAttributes.level = 1;\n    var sortedData = this.getSortedData(this.rootData);\n    this.ulElement = ListBase.createList(this.createElement, isSorted ? this.rootData : sortedData, this.listBaseOption);\n    this.element.appendChild(this.ulElement);\n    var rootNodes = this.ulElement.querySelectorAll('.e-list-item');\n    if (this.loadOnDemand === false) {\n      var i = 0;\n      while (i < rootNodes.length) {\n        this.renderChildNodes(rootNodes[parseInt(i.toString(), 10)], true, null, true);\n        i++;\n      }\n    }\n    var parentEle = selectAll('.' + PARENTITEM, this.element);\n    if (parentEle.length === 1 && rootNodes && rootNodes.length !== 0 || this.loadOnDemand) {\n      this.finalizeNode(this.element);\n    }\n    this.parentNodeCheck = [];\n    this.parentCheckData = [];\n    this.updateCheckedStateFromDS();\n    if (this.autoCheck && this.showCheckBox && !this.isLoaded) {\n      this.updateParentCheckState();\n    }\n  };\n  /**\r\n   * Update the checkedNodes from datasource at initial rendering\r\n   *\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.updateCheckedStateFromDS = function () {\n    this.validNodes = [];\n    if (this.treeData && this.showCheckBox) {\n      if (this.dataType === 1) {\n        var mapper = this.fields;\n        var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\n        for (var i = 0; i < resultData.length; i++) {\n          var resultId = resultData[parseInt(i.toString(), 10)][this.fields.id] ? resultData[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n          if (this.checkedNodes.indexOf(resultId) === -1 && !this.isLoaded) {\n            this.checkedNodes.push(resultId);\n          }\n          if (resultData[parseInt(i.toString(), 10)][this.fields.hasChildren]) {\n            var id = resultData[parseInt(i.toString(), 10)][this.fields.id];\n            var childData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.parentID, 'equal', id, false));\n            for (var child = 0; child < childData.length; child++) {\n              var childId = childData[parseInt(child.toString(), 10)][this.fields.id] ? childData[parseInt(child.toString(), 10)][this.fields.id].toString() : null;\n              if (this.checkedNodes.indexOf(childId) === -1 && this.autoCheck) {\n                this.checkedNodes.push(childId);\n              }\n            }\n          }\n        }\n        for (var i = 0; i < this.checkedNodes.length; i++) {\n          var mapper_1 = this.fields;\n          var checkState = new DataManager(this.treeData).executeLocal(new Query().where(mapper_1.id, 'equal', this.checkedNodes[parseInt(i.toString(), 10)], true));\n          if (checkState[0] && this.autoCheck) {\n            this.getCheckedNodeDetails(mapper_1, checkState);\n            this.checkIndeterminateState(checkState[0]);\n          }\n          if (checkState.length > 0) {\n            var checkedId = checkState[0][this.fields.id] ? checkState[0][this.fields.id].toString() : null;\n            if (this.checkedNodes.indexOf(checkedId) > -1 && this.validNodes.indexOf(checkedId) === -1) {\n              this.validNodes.push(checkedId);\n            }\n          }\n          var checkedData = new DataManager(this.treeData).executeLocal(new Query().where(mapper_1.parentID, 'equal', this.checkedNodes[parseInt(i.toString(), 10)], true));\n          for (var index = 0; index < checkedData.length; index++) {\n            var checkedId = checkedData[parseInt(index.toString(), 10)][this.fields.id] ? checkedData[parseInt(index.toString(), 10)][this.fields.id].toString() : null;\n            if (this.checkedNodes.indexOf(checkedId) === -1 && this.autoCheck) {\n              this.checkedNodes.push(checkedId);\n            }\n            if (this.checkedNodes.indexOf(checkedId) > -1 && this.validNodes.indexOf(checkedId) === -1) {\n              this.validNodes.push(checkedId);\n            }\n          }\n        }\n      } else if (this.dataType === 2 || this.fields.dataSource instanceof DataManager && this.isOffline) {\n        for (var index = 0; index < this.treeData.length; index++) {\n          var fieldId = this.treeData[parseInt(index.toString(), 10)][this.fields.id] ? this.treeData[parseInt(index.toString(), 10)][this.fields.id].toString() : '';\n          if (this.treeData[parseInt(index.toString(), 10)][this.fields.isChecked] && !this.isLoaded && this.checkedNodes.indexOf(fieldId) === -1) {\n            this.checkedNodes.push(fieldId);\n          }\n          if (this.checkedNodes.indexOf(fieldId) > -1 && this.validNodes.indexOf(fieldId) === -1) {\n            this.validNodes.push(fieldId);\n          }\n          var childItems = getValue(this.fields.child.toString(), this.treeData[parseInt(index.toString(), 10)]);\n          if (childItems) {\n            this.updateChildCheckState(childItems, this.treeData[parseInt(index.toString(), 10)]);\n          }\n        }\n        this.validNodes = this.enablePersistence ? this.checkedNodes : this.validNodes;\n      }\n      this.setProperties({\n        checkedNodes: this.validNodes\n      }, true);\n    }\n  };\n  /**\r\n   * To check whether the list data has sub child and to change the parent check state accordingly\r\n   *\r\n   * @param {FieldsSettingsModel} mapper - The mapper object containing field settings.\r\n   * @param {Object[]} checkNodes - The array of checked nodes.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.getCheckedNodeDetails = function (mapper, checkNodes) {\n    var id = checkNodes[0][this.fields.parentID] ? checkNodes[0][this.fields.parentID].toString() : null;\n    var count = 0;\n    var element = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.id] + '\"]');\n    var parentEle = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.parentID] + '\"]');\n    if (!element && !parentEle) {\n      if (this.parentNodeCheck.indexOf(id) === -1) {\n        this.parentNodeCheck.push(id);\n      }\n      var childNodes = this.getChildNodes(this.treeData, id);\n      for (var i = 0; i < childNodes.length; i++) {\n        var childId = childNodes[parseInt(i.toString(), 10)][this.fields.id] ? childNodes[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n        if (this.checkedNodes.indexOf(childId) !== -1) {\n          count++;\n        }\n        if (count === childNodes.length && this.checkedNodes.indexOf(id) === -1) {\n          this.checkedNodes.push(id);\n        }\n      }\n      var preElement = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', id, true));\n      this.getCheckedNodeDetails(mapper, preElement);\n    } else if (parentEle) {\n      var check = select('.' + CHECK, parentEle);\n      if (!check) {\n        this.changeState(parentEle, 'indeterminate', null, true, true);\n      }\n    }\n  };\n  /**\r\n   * Update the checkedNodes and parent state when all the child Nodes are in checkedstate at initial rendering\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.updateParentCheckState = function () {\n    var indeterminate = selectAll('.' + INDETERMINATE, this.element);\n    var childCheckedElement;\n    var data = this.treeData;\n    if (this.element.classList.contains('e-filtering')) {\n      data = this.DDTTreeData;\n    }\n    for (var i = 0; i < indeterminate.length; i++) {\n      var node = closest(indeterminate[parseInt(i.toString(), 10)], '.' + LISTITEM);\n      var nodeId = node.getAttribute('data-uid').toString();\n      var OldCheckedNodes = void 0;\n      if (this.element.classList.contains('e-filtering')) {\n        OldCheckedNodes = new DataManager(this.OldCheckedData).executeLocal(new Query().where('parentID', 'equal', nodeId, true));\n      }\n      if (this.dataType === 1) {\n        childCheckedElement = new DataManager(data).executeLocal(new Query().where(this.fields.parentID, 'equal', nodeId, true));\n      } else {\n        childCheckedElement = this.getChildNodes(data, nodeId);\n      }\n      var count = 0;\n      if (childCheckedElement) {\n        var _loop_1 = function (j) {\n          var childId = childCheckedElement[parseInt(j.toString(), 10)][this_1.fields.id].toString();\n          if (this_1.checkedNodes.indexOf(childId) !== -1) {\n            count++;\n          } else if (this_1.element.classList.contains('e-filtering') && OldCheckedNodes.findIndex(function (e) {\n            return e['id'] === childId;\n          }) !== -1) {\n            count++;\n          }\n        };\n        var this_1 = this;\n        for (var j = 0; j < childCheckedElement.length; j++) {\n          _loop_1(j);\n        }\n        if (count === childCheckedElement.length) {\n          var nodeCheck = node.getAttribute('data-uid');\n          if (this.checkedNodes.indexOf(nodeCheck) === -1) {\n            this.checkedNodes.push(nodeCheck);\n          }\n          this.changeState(node, 'check', null, true, true);\n        } else if (count === 0 && this.checkedNodes.length === 0) {\n          this.changeState(node, 'uncheck', null, true, true);\n        }\n      }\n    }\n  };\n  /**\r\n   * Change the parent to indeterminate state whenever the child is in checked state which is not rendered in DOM\r\n   *\r\n   * @param {Object} data - The data object to check for indeterminate state.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.checkIndeterminateState = function (data) {\n    var element;\n    if (this.dataType === 1) {\n      element = this.element.querySelector('[data-uid=\"' + data[this.fields.parentID] + '\"]');\n    } else {\n      element = this.element.querySelector('[data-uid=\"' + data[this.fields.id] + '\"]');\n    }\n    if (element) {\n      var ariaChecked = element.getAttribute('aria-checked');\n      if (ariaChecked !== 'true') {\n        this.changeState(element, 'indeterminate', null, true, true);\n      }\n    } else if (this.dataType === 2) {\n      if (this.parentNodeCheck.indexOf(data[this.fields.id].toString()) === -1) {\n        this.parentNodeCheck.push(data[this.fields.id].toString());\n      }\n    }\n  };\n  /**\r\n   * Update the checkedNodes for child and subchild from datasource (hierarchical datasource) at initial rendering\r\n   *\r\n   * @param {Object[]} childItems - The array of child items to update the checked state.\r\n   * @param {Object} treeData - The tree data object containing field values.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.updateChildCheckState = function (childItems, treeData) {\n    var count = 0;\n    var checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\n    for (var index = 0; index < childItems.length; index++) {\n      var checkedChild = childItems[parseInt(index.toString(), 10)][this.fields.id] ? childItems[parseInt(index.toString(), 10)][this.fields.id].toString() : '';\n      if (childItems[parseInt(index.toString(), 10)][this.fields.isChecked] && !this.isLoaded && this.checkedNodes.indexOf(checkedChild) === -1) {\n        this.checkedNodes.push(checkedChild);\n      }\n      if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1 && this.autoCheck) {\n        this.checkedNodes.push(checkedChild);\n      }\n      if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\n        count++;\n      }\n      if (this.checkedNodes.indexOf(checkedChild) > -1 && this.validNodes.indexOf(checkedChild) === -1) {\n        this.validNodes.push(checkedChild);\n      }\n      var subChildItems = getValue(this.fields.child.toString(), childItems[parseInt(index.toString(), 10)]);\n      if (subChildItems && subChildItems.length) {\n        if (this.parentCheckData.indexOf(treeData) === -1) {\n          this.parentCheckData.push(treeData);\n        }\n        this.updateChildCheckState(subChildItems, childItems[parseInt(index.toString(), 10)]);\n      }\n      if (count === childItems.length && this.autoCheck && this.checkedNodes.indexOf(checkedParent) === -1) {\n        this.checkedNodes.push(checkedParent);\n      }\n    }\n    if (count !== 0 && this.autoCheck) {\n      this.checkIndeterminateState(treeData);\n      for (var len = 0; len < this.parentCheckData.length; len++) {\n        if (treeData !== this.parentCheckData[parseInt(len.toString(), 10)] && this.parentCheckData[parseInt(len.toString(), 10)]) {\n          this.checkIndeterminateState(this.parentCheckData[parseInt(len.toString(), 10)]);\n        }\n      }\n    }\n    this.parentCheckData = [];\n  };\n  TreeView.prototype.beforeNodeCreate = function (e) {\n    if (this.showCheckBox) {\n      var checkboxEle = createCheckBox(this.createElement, true, {\n        cssClass: this.touchClass\n      });\n      checkboxEle.classList.add(CHECKBOXWRAP);\n      var icon = select('div.' + ICON, e.item);\n      var id = e.item.getAttribute('data-uid');\n      e.item.childNodes[0].insertBefore(checkboxEle, e.item.childNodes[0].childNodes[isNOU(icon) ? 0 : 1]);\n      var checkValue = getValue(e.fields.isChecked, e.curData);\n      if (this.checkedNodes.indexOf(id) > -1) {\n        select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\n        e.item.setAttribute('aria-checked', 'true');\n        this.addCheck(e.item);\n      } else if (!isNOU(checkValue) && checkValue.toString() === 'true') {\n        select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\n        e.item.setAttribute('aria-checked', 'true');\n        this.addCheck(e.item);\n      } else {\n        e.item.setAttribute('aria-checked', 'false');\n      }\n      var frame = select('.' + CHECKBOXFRAME, checkboxEle);\n      EventHandler.add(frame, 'mousedown', this.frameMouseHandler, this);\n      EventHandler.add(frame, 'mouseup', this.frameMouseHandler, this);\n    }\n    if (this.fullRowSelect) {\n      this.createFullRow(e.item);\n    }\n    if (this.allowMultiSelection && !e.item.classList.contains(SELECTED)) {\n      e.item.setAttribute('aria-selected', 'false');\n    }\n    var fields = e.fields;\n    this.addActionClass(e, fields.selected, SELECTED);\n    this.addActionClass(e, fields.expanded, EXPANDED);\n    e.item.setAttribute('tabindex', '-1');\n    EventHandler.add(e.item, 'focus', this.focusIn, this);\n    if (!isNOU(this.nodeTemplateFn)) {\n      var textEle = e.item.querySelector('.' + LISTTEXT);\n      var dataId = e.item.getAttribute('data-uid');\n      textEle.innerHTML = '';\n      this.renderNodeTemplate(e.curData, textEle, dataId);\n    }\n    var eventArgs = {\n      node: e.item,\n      nodeData: e.curData,\n      text: e.text\n    };\n    if (!this.isRefreshed) {\n      this.trigger('drawNode', eventArgs);\n      if (e.curData[this.fields.selectable] === false && !this.showCheckBox) {\n        e.item.classList.add(PREVENTSELECT);\n        e.item.firstElementChild.setAttribute('style', 'cursor: not-allowed');\n      }\n    }\n  };\n  TreeView.prototype.frameMouseHandler = function (e) {\n    var rippleSpan = select('.' + CHECKBOXRIPPLE, e.target.parentElement);\n    rippleMouseHandler(e, rippleSpan);\n  };\n  TreeView.prototype.addActionClass = function (e, action, cssClass) {\n    var data = e.curData;\n    var actionValue = getValue(action, data);\n    if (!isNOU(actionValue) && actionValue.toString() !== 'false') {\n      e.item.classList.add(cssClass);\n    }\n  };\n  TreeView.prototype.getDataType = function (ds, mapper) {\n    if (this.fields.dataSource instanceof DataManager) {\n      for (var i = 0; i < ds.length; i++) {\n        if (this.isOffline) {\n          if (typeof mapper.child === 'string' && isNOU(getValue(mapper.child, ds[parseInt(i.toString(), 10)])) && !isNOU(getValue(mapper.parentID, ds[parseInt(i.toString(), 10)]))) {\n            return 1;\n          }\n        } else if (typeof mapper.child === 'string' && isNOU(getValue(mapper.child, ds[parseInt(i.toString(), 10)]))) {\n          return 1;\n        }\n      }\n      return 2;\n    }\n    for (var i = 0, len = ds.length; i < len; i++) {\n      if (typeof mapper.child === 'string' && (!isNOU(getValue(mapper.child, ds[parseInt(i.toString(), 10)])) || Object.prototype.hasOwnProperty.call(ds[parseInt(i.toString(), 10)], mapper.child))) {\n        return 2;\n      }\n      if (this.isChildObject()) {\n        return 2;\n      }\n      if (!isNOU(getValue(mapper.parentID, ds[parseInt(i.toString(), 10)])) || !isNOU(getValue(mapper.hasChildren, ds[parseInt(i.toString(), 10)]))) {\n        return 1;\n      }\n    }\n    return 1;\n  };\n  TreeView.prototype.getGroupedData = function (dataSource, groupBy) {\n    var cusQuery = new Query().group(groupBy);\n    var ds = ListBase.getDataSource(dataSource, cusQuery);\n    var grpItem = [];\n    for (var j = 0; j < ds.length; j++) {\n      var itemObj = ds[parseInt(j.toString(), 10)].items;\n      grpItem.push(itemObj);\n    }\n    return grpItem;\n  };\n  TreeView.prototype.getSortedData = function (list) {\n    if (list && this.sortOrder !== 'None') {\n      list = ListBase.getDataSource(list, ListBase.addSorting(this.sortOrder, this.fields.text));\n    }\n    return list;\n  };\n  TreeView.prototype.finalizeNode = function (element) {\n    var _this = this;\n    var iNodes = selectAll('.' + IMAGE, element);\n    for (var k = 0; k < iNodes.length; k++) {\n      iNodes[parseInt(k.toString(), 10)].setAttribute('alt', IMAGE);\n    }\n    if (this.isLoaded) {\n      var sNodes = selectAll('.' + SELECTED, element);\n      for (var i = 0; i < sNodes.length; i++) {\n        this.selectNode(sNodes[parseInt(i.toString(), 10)], null);\n        break;\n      }\n      removeClass(sNodes, SELECTED);\n    }\n    var cNodes = selectAll('.' + LISTITEM + ':not(.' + EXPANDED + ')', element);\n    for (var j = 0; j < cNodes.length; j++) {\n      var icon = select('div.' + ICON, cNodes[parseInt(j.toString(), 10)]);\n      if (icon && icon.classList.contains(EXPANDABLE)) {\n        this.disableExpandAttr(cNodes[parseInt(j.toString(), 10)]);\n      }\n    }\n    var eNodes = selectAll('.' + EXPANDED, element);\n    if (!this.loadOnDemand && this.fields.dataSource instanceof DataManager) {\n      this.isInitalExpand = this.treeData.filter(function (e) {\n        return e[_this.fields.expanded] === true;\n      }).length > 0 ? true : this.isInitalExpand;\n    }\n    if (!this.isInitalExpand) {\n      for (var i = 0; i < eNodes.length; i++) {\n        this.renderChildNodes(eNodes[parseInt(i.toString(), 10)]);\n      }\n    }\n    removeClass(eNodes, EXPANDED);\n    this.updateList();\n    if (this.isLoaded) {\n      this.updateCheckedProp();\n    }\n  };\n  TreeView.prototype.updateCheckedProp = function () {\n    if (this.showCheckBox) {\n      var nodes = [].concat([], this.checkedNodes);\n      this.setProperties({\n        checkedNodes: nodes\n      }, true);\n    }\n  };\n  TreeView.prototype.ensureIndeterminate = function () {\n    if (this.autoCheck) {\n      var liElement = selectAll('li', this.element);\n      var ulElement = void 0;\n      for (var i = 0; i < liElement.length; i++) {\n        if (liElement[parseInt(i.toString(), 10)].classList.contains(LISTITEM)) {\n          ulElement = select('.' + PARENTITEM, liElement[parseInt(i.toString(), 10)]);\n          if (ulElement) {\n            this.ensureParentCheckState(liElement[parseInt(i.toString(), 10)]);\n          } else {\n            this.ensureChildCheckState(liElement[parseInt(i.toString(), 10)]);\n          }\n        }\n      }\n    } else {\n      var indeterminate = selectAll('.' + INDETERMINATE, this.element);\n      for (var i = 0; i < indeterminate.length; i++) {\n        indeterminate[parseInt(i.toString(), 10)].classList.remove(INDETERMINATE);\n      }\n    }\n  };\n  TreeView.prototype.ensureParentCheckState = function (element) {\n    if (!isNOU(element)) {\n      if (element.classList.contains(ROOT)) {\n        return;\n      }\n      var ulElement = element;\n      if (element.classList.contains(LISTITEM)) {\n        ulElement = select('.' + PARENTITEM, element);\n      }\n      var checkedNodes = selectAll('.' + CHECKBOXWRAP + ' .' + CHECK, ulElement);\n      var indeterminateNodes = selectAll('.' + INDETERMINATE, ulElement);\n      var nodes = selectAll('.' + LISTITEM, ulElement);\n      var checkBoxEle = element.getElementsByClassName(CHECKBOXWRAP)[0];\n      var count = nodes.length;\n      var checkedCount = checkedNodes.length;\n      var dataUid = element.getAttribute('data-uid');\n      if (this.element.classList.contains('e-filtering')) {\n        var oldCheckedNodes = new DataManager(this.OldCheckedData).executeLocal(new Query().where('parentID', 'equal', dataUid, true));\n        checkedCount = oldCheckedNodes.length;\n        var childItems = [];\n        if (this.dataType === 1) {\n          childItems = new DataManager(this.DDTTreeData).executeLocal(new Query().where(this.fields.parentID, 'equal', dataUid, true));\n        } else {\n          childItems = this.getChildNodes(this.DDTTreeData, dataUid);\n        }\n        count = childItems.length;\n      }\n      if (count === checkedCount) {\n        this.changeState(checkBoxEle, 'check', null, true, true);\n      } else if (checkedCount > 0 || indeterminateNodes.length > 0) {\n        this.changeState(checkBoxEle, 'indeterminate', null, true, true);\n      } else if (checkedCount === 0) {\n        this.changeState(checkBoxEle, 'uncheck', null, true, true);\n      }\n      var parentUL = closest(element, '.' + PARENTITEM);\n      if (!isNOU(parentUL)) {\n        var currentParent = closest(parentUL, '.' + LISTITEM);\n        this.ensureParentCheckState(currentParent);\n      }\n    }\n  };\n  TreeView.prototype.ensureChildCheckState = function (element, e) {\n    if (!isNOU(element)) {\n      var childElement = select('.' + PARENTITEM, element);\n      var checkBoxes = void 0;\n      if (!isNOU(childElement)) {\n        checkBoxes = selectAll('.' + CHECKBOXWRAP, childElement);\n        var isChecked = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\n        var parentCheck = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(INDETERMINATE);\n        var childCheck = childElement.querySelectorAll('li');\n        var checkedState = void 0;\n        for (var index = 0; index < checkBoxes.length; index++) {\n          var childId = childCheck[parseInt(index.toString(), 10)].getAttribute('data-uid');\n          if (!isNOU(this.currentLoadData) && !isNOU(getValue(this.fields.isChecked, this.currentLoadData[parseInt(index.toString(), 10)]))) {\n            checkedState = getValue(this.fields.isChecked, this.currentLoadData[parseInt(index.toString(), 10)]) ? 'check' : 'uncheck';\n            if (this.ele !== -1) {\n              checkedState = isChecked ? 'check' : 'uncheck';\n            }\n            if (checkedState === 'uncheck' && !isUndefined(this.parentNodeCheck) && this.autoCheck && this.parentNodeCheck.indexOf(childId) !== -1) {\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n              checkedState = 'indeterminate';\n            }\n          } else {\n            var isNodeChecked = checkBoxes[parseInt(index.toString(), 10)].getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\n            if (isChecked) {\n              checkedState = 'check';\n            } else if (isNodeChecked && !this.isLoaded) {\n              checkedState = 'check';\n            } else if (this.checkedNodes.indexOf(childId) !== -1 && this.isLoaded && (parentCheck || isChecked)) {\n              checkedState = 'check';\n            } else if (childCheck[parseInt(index.toString(), 10)].classList.contains(CHILD) && !isUndefined(this.parentNodeCheck) && this.autoCheck && (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1) {\n              checkedState = 'indeterminate';\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n            } else if (this.dataType === 1 && !isUndefined(this.parentNodeCheck) && this.autoCheck && (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1) {\n              checkedState = 'indeterminate';\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n            } else {\n              checkedState = 'uncheck';\n            }\n          }\n          this.changeState(checkBoxes[parseInt(index.toString(), 10)], checkedState, e, true, true);\n        }\n      }\n      if (this.autoCheck && this.isLoaded) {\n        this.updateParentCheckState();\n      }\n    }\n  };\n  TreeView.prototype.doCheckBoxAction = function (nodes, doCheck) {\n    if (!isNOU(nodes)) {\n      nodes.reverse();\n      for (var len = nodes.length - 1; len >= 0; len--) {\n        var liEle = this.getElement(nodes[parseInt(len.toString(), 10)]);\n        if (isNOU(liEle)) {\n          var node = nodes[len - nodes.length] ? nodes[len - nodes.length].toString() : nodes[parseInt(len.toString(), 10)] ? nodes[parseInt(len.toString(), 10)].toString() : null;\n          if (node !== '' && doCheck && node) {\n            this.setValidCheckedNode(node);\n            this.dynamicCheckState(node, doCheck);\n          } else if (this.checkedNodes.indexOf(node) !== -1 && node !== '' && !doCheck) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(node), 1);\n            var childItems = this.getChildNodes(this.treeData, node);\n            if (childItems) {\n              for (var i = 0; i < childItems.length; i++) {\n                var id = childItems[parseInt(i.toString(), 10)][this.fields.id] ? childItems[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n                if (this.checkedNodes.indexOf(id) !== -1) {\n                  this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\n                  var ele = this.element.querySelector('[data-uid=\"' + id + '\"]');\n                  if (ele) {\n                    this.changeState(ele, 'uncheck', null);\n                  }\n                }\n              }\n              if (this.parentNodeCheck.indexOf(node) !== -1) {\n                this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(node), 1);\n              }\n            }\n            if (node) {\n              this.dynamicCheckState(node, doCheck);\n            }\n            this.updateField(this.treeData, this.fields, node, 'isChecked', null);\n          }\n          continue;\n        }\n        var checkBox = select('.' + PARENTITEM + ' .' + CHECKBOXWRAP, liEle);\n        this.validateCheckNode(checkBox, !doCheck, liEle, null);\n      }\n    } else {\n      var checkBoxes = selectAll('.' + CHECKBOXWRAP, this.element);\n      if (this.loadOnDemand) {\n        for (var index = 0; index < checkBoxes.length; index++) {\n          this.updateFieldChecked(checkBoxes[parseInt(index.toString(), 10)], doCheck);\n          this.changeState(checkBoxes[parseInt(index.toString(), 10)], doCheck ? 'check' : 'uncheck', null, null, null, doCheck);\n        }\n      } else {\n        for (var index = 0; index < checkBoxes.length; index++) {\n          this.updateFieldChecked(checkBoxes[parseInt(index.toString(), 10)], doCheck);\n          this.changeState(checkBoxes[parseInt(index.toString(), 10)], doCheck ? 'check' : 'uncheck');\n        }\n      }\n    }\n    if (nodes) {\n      for (var j = 0; j < nodes.length - 1; j++) {\n        var node = nodes[parseInt(j.toString(), 10)] ? nodes[parseInt(j.toString(), 10)].toString() : '';\n        if (!doCheck) {\n          this.updateField(this.treeData, this.fields, node, 'isChecked', null);\n        }\n      }\n    }\n    if (this.autoCheck) {\n      this.updateParentCheckState();\n    }\n  };\n  TreeView.prototype.updateFieldChecked = function (checkbox, doCheck) {\n    var currLi = closest(checkbox, '.' + LISTITEM);\n    var id = currLi.getAttribute('data-uid');\n    var nodeDetails = this.getNodeData(currLi);\n    if (nodeDetails.isChecked === 'true' && !doCheck) {\n      this.updateField(this.treeData, this.fields, id, 'isChecked', null);\n    }\n  };\n  /**\r\n   * Changes the parent and child  check state while changing the checkedNodes via setmodel\r\n   *\r\n   * @param {string} node - The unique identifier of the node.\r\n   * @param {boolean} doCheck - A boolean value indicating whether to check or uncheck the node.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.dynamicCheckState = function (node, doCheck) {\n    if (this.dataType === 1) {\n      var count = 0;\n      var resultId = new DataManager(this.treeData).executeLocal(new Query().where(this.fields.id, 'equal', node, true));\n      if (resultId[0]) {\n        var id = resultId[0][this.fields.id] ? resultId[0][this.fields.id].toString() : null;\n        var parent_1 = resultId[0][this.fields.parentID] ? resultId[0][this.fields.parentID].toString() : null;\n        var parentElement = this.element.querySelector('[data-uid=\"' + parent_1 + '\"]');\n        var element = this.element.querySelector('[data-uid=\"' + id + '\"]');\n        var childNodes = this.getChildNodes(this.treeData, parent_1);\n        if (childNodes) {\n          for (var i = 0; i < childNodes.length; i++) {\n            var childId = childNodes[parseInt(i.toString(), 10)][this.fields.id] ? childNodes[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n            if (this.checkedNodes.indexOf(childId) !== -1) {\n              count++;\n            }\n          }\n        }\n        if (this.checkedNodes.indexOf(node) !== -1 && parentElement && id === node && this.autoCheck) {\n          this.changeState(parentElement, 'indeterminate', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && element && id === node && !doCheck) {\n          this.changeState(element, 'uncheck', null);\n        } else if (this.checkedNodes.indexOf(node) !== -1 && element && id === node && doCheck) {\n          this.changeState(element, 'check', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && id === node && this.autoCheck && count !== 0) {\n          this.changeState(parentElement, 'indeterminate', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && id === node && this.autoCheck && count === 0) {\n          this.changeState(parentElement, 'uncheck', null);\n        } else if (!element && !parentElement && id === node && this.autoCheck) {\n          this.updateIndeterminate(node, doCheck);\n        }\n      }\n    } else if (this.dataType === 2 || this.fields.dataSource instanceof DataManager && this.isOffline) {\n      var id = void 0;\n      var parentElement = void 0;\n      var check = void 0;\n      for (var i = 0; i < this.treeData.length; i++) {\n        id = this.treeData[parseInt(i.toString(), 10)][this.fields.id] ? this.treeData[parseInt(i.toString(), 10)][this.fields.id].toString() : '';\n        parentElement = this.element.querySelector('[data-uid=\"' + id + '\"]');\n        check = parentElement ? select('.' + CHECK, parentElement) : null;\n        if (this.checkedNodes.indexOf(id) === -1 && parentElement && check && !doCheck) {\n          this.changeState(parentElement, 'uncheck', null);\n        }\n        var subChild = getValue(this.fields.child.toString(), this.treeData[parseInt(i.toString(), 10)]);\n        if (subChild) {\n          this.updateChildIndeterminate(subChild, id, node, doCheck, id);\n        }\n      }\n    }\n  };\n  /**\r\n   * updates the parent and child  check state while changing the checkedNodes via setmodel for listData\r\n   *\r\n   * @param {string} node - The unique identifier of the node.\r\n   * @param {boolean} doCheck - A boolean value indicating whether to check or uncheck the node.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.updateIndeterminate = function (node, doCheck) {\n    var indeterminateData = this.getTreeData(node);\n    var count = 0;\n    var parent;\n    if (this.dataType === 1) {\n      parent = indeterminateData[0][this.fields.parentID] ? indeterminateData[0][this.fields.parentID].toString() : null;\n    }\n    var childNodes = this.getChildNodes(this.treeData, parent);\n    if (childNodes) {\n      for (var i = 0; i < childNodes.length; i++) {\n        var childId = childNodes[parseInt(i.toString(), 10)][this.fields.id] ? childNodes[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n        if (this.checkedNodes.indexOf(childId) !== -1) {\n          count++;\n        }\n      }\n    }\n    var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\n    if (parentElement && doCheck) {\n      this.changeState(parentElement, 'indeterminate', null);\n    } else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count !== 0) {\n      this.changeState(parentElement, 'indeterminate', null);\n    } else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count === 0) {\n      this.changeState(parentElement, 'uncheck', null);\n    } else if (!parentElement) {\n      if (!doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) !== -1) {\n        this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent), 1);\n      } else if (doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) === -1) {\n        this.parentNodeCheck.push(parent);\n      } else if (!doCheck && this.checkedNodes.indexOf(parent) !== -1 && this.parentNodeCheck.indexOf(parent) === -1 && count !== 0) {\n        this.parentNodeCheck.push(parent);\n      }\n      this.updateIndeterminate(parent, doCheck);\n      if (this.checkedNodes.indexOf(parent) !== -1 && !doCheck) {\n        this.checkedNodes.splice(this.checkedNodes.indexOf(parent), 1);\n      }\n    }\n  };\n  /**\r\n   * updates the parent and child  check state while changing the checkedNodes via setmodel for hierarchical data\r\n   *\r\n   * @param {Object[]} subChild - Array of child nodes\r\n   * @param {string} parent - Parent identifier\r\n   * @param {string} node - Current node identifier\r\n   * @param {boolean} doCheck - Boolean indicating whether to perform a check\r\n   * @param {string} [child] - Optional child identifier\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.updateChildIndeterminate = function (subChild, parent, node, doCheck, child) {\n    var count = 0;\n    for (var j = 0; j < subChild.length; j++) {\n      var subId = subChild[parseInt(j.toString(), 10)][this.fields.id] ? subChild[parseInt(j.toString(), 10)][this.fields.id].toString() : '';\n      if (this.checkedNodes.indexOf(subId) !== -1) {\n        count++;\n      }\n      var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\n      var indeterminate = parentElement ? select('.' + INDETERMINATE, parentElement) : null;\n      var check = parentElement ? select('.' + CHECK, parentElement) : null;\n      var element = this.element.querySelector('[data-uid=\"' + subId + '\"]');\n      var childElementCheck = element ? select('.' + CHECK, element) : null;\n      if (this.checkedNodes.indexOf(node) !== -1 && parentElement && subId === node && this.autoCheck) {\n        this.changeState(parentElement, 'indeterminate', null);\n      } else if (this.checkedNodes.indexOf(node) === -1 && parentElement && !element && subId === node && !doCheck) {\n        if (this.autoCheck) {\n          this.changeState(parentElement, 'uncheck', null);\n        } else {\n          if (count !== 0) {\n            this.changeState(parentElement, 'indeterminate', null);\n          } else {\n            this.changeState(parentElement, 'uncheck', null);\n          }\n        }\n      } else if (this.checkedNodes.indexOf(node) === -1 && element && subId === node && !doCheck) {\n        this.changeState(element, 'uncheck', null);\n      } else if (this.checkedNodes.indexOf(node) === -1 && indeterminate && subId === node && this.autoCheck && count === 0 && !doCheck) {\n        indeterminate.classList.remove(INDETERMINATE);\n      } else if (this.checkedNodes.indexOf(node) === -1 && !element && check && subId === node && count === 0) {\n        this.changeState(parentElement, 'uncheck', null);\n      } else if (this.checkedNodes.indexOf(subId) === -1 && element && childElementCheck && count === 0) {\n        this.changeState(element, 'uncheck', null);\n      } else if (!element && !parentElement && subId === node || this.parentNodeCheck.indexOf(parent) !== -1 && this.autoCheck) {\n        var childElement = this.element.querySelector('[data-uid=\"' + child + '\"]');\n        if (doCheck && count !== 0) {\n          this.changeState(childElement, 'indeterminate', null);\n        } else if (doCheck && count === subChild.length && this.checkedNodes.indexOf(parent) === -1) {\n          this.checkedNodes.push(parent);\n        } else if (!doCheck && count === 0 && this.parentNodeCheck.indexOf(parent) !== -1) {\n          this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent));\n        }\n        if (this.parentNodeCheck.indexOf(parent) === -1) {\n          this.parentNodeCheck.push(parent);\n        }\n      }\n      var innerChild = getValue(this.fields.child.toString(), subChild[parseInt(j.toString(), 10)]);\n      if (innerChild) {\n        this.updateChildIndeterminate(innerChild, subId, node, doCheck, child);\n      }\n    }\n  };\n  TreeView.prototype.changeState = function (wrapper, state, e, isPrevent, isAdd, doCheck) {\n    var _this = this;\n    var eventArgs;\n    var currLi = closest(wrapper, '.' + LISTITEM);\n    if (wrapper === currLi) {\n      wrapper = select('.' + CHECKBOXWRAP, currLi);\n    }\n    if (!isPrevent) {\n      this.checkActionNodes = [];\n      eventArgs = this.getCheckEvent(currLi, state, e);\n      this.trigger('nodeChecking', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          _this.nodeCheckAction(wrapper, state, currLi, observedArgs, e, isPrevent, isAdd, doCheck);\n        }\n      });\n    } else {\n      this.nodeCheckAction(wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck);\n    }\n  };\n  TreeView.prototype.nodeCheckAction = function (wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck) {\n    var ariaState;\n    var frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME)[0];\n    if (state === 'check' && !frameSpan.classList.contains(CHECK)) {\n      frameSpan.classList.remove(INDETERMINATE);\n      frameSpan.classList.add(CHECK);\n      this.addCheck(currLi);\n      ariaState = 'true';\n    } else if (state === 'uncheck' && (frameSpan.classList.contains(CHECK) || frameSpan.classList.contains(INDETERMINATE))) {\n      removeClass([frameSpan], [CHECK, INDETERMINATE]);\n      this.removeCheck(currLi);\n      ariaState = 'false';\n    } else if (state === 'indeterminate' && this.autoCheck) {\n      frameSpan.classList.remove(CHECK);\n      frameSpan.classList.add(INDETERMINATE);\n      this.removeCheck(currLi);\n      ariaState = 'mixed';\n    }\n    ariaState = state === 'check' ? 'true' : state === 'uncheck' ? 'false' : ariaState;\n    if (!isNOU(ariaState)) {\n      currLi.setAttribute('aria-checked', ariaState);\n    }\n    if (isAdd) {\n      var data = [].concat([], this.checkActionNodes);\n      eventArgs = this.getCheckEvent(currLi, state, e);\n      if (isUndefined(isPrevent)) {\n        eventArgs.data = data;\n      }\n    }\n    if (doCheck !== undefined) {\n      this.ensureStateChange(currLi, doCheck);\n    }\n    if (!isPrevent) {\n      if (!isNOU(ariaState)) {\n        currLi.setAttribute('aria-checked', ariaState);\n        eventArgs.data[0].checked = ariaState;\n        this.trigger('nodeChecked', eventArgs);\n        this.checkActionNodes = [];\n      }\n    }\n  };\n  TreeView.prototype.addCheck = function (liEle) {\n    var id = liEle.getAttribute('data-uid');\n    if (!isNOU(id) && this.checkedNodes.indexOf(id) === -1) {\n      this.checkedNodes.push(id);\n    }\n  };\n  TreeView.prototype.removeCheck = function (liEle) {\n    var index = this.checkedNodes.indexOf(liEle.getAttribute('data-uid'));\n    if (index > -1) {\n      this.checkedNodes.splice(index, 1);\n    }\n  };\n  TreeView.prototype.getCheckEvent = function (currLi, action, e) {\n    this.checkActionNodes.push(this.getNodeData(currLi));\n    var nodeData = this.checkActionNodes;\n    return {\n      action: action,\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      data: nodeData\n    };\n  };\n  TreeView.prototype.finalize = function () {\n    var firstUl = select('.' + PARENTITEM, this.element);\n    if (!isNullOrUndefined(firstUl)) {\n      firstUl.setAttribute('role', treeAriaAttr.treeRole);\n      this.setMultiSelect(this.allowMultiSelection);\n      var firstNode = select('.' + LISTITEM, this.element);\n      if (firstNode) {\n        firstNode.setAttribute('tabindex', '0');\n        this.updateIdAttr(null, firstNode);\n      }\n      if (this.allowTextWrap) {\n        this.updateWrap();\n      }\n      this.renderReactTemplates();\n      this.hasPid = this.rootData[0] ? Object.prototype.hasOwnProperty.call(this.rootData[0], this.fields.parentID) : false;\n      this.doExpandAction();\n    }\n  };\n  TreeView.prototype.setTextWrap = function () {\n    (this.allowTextWrap ? addClass : removeClass)([this.element], LISTWRAP);\n    if (Browser.isIE) {\n      (this.allowTextWrap ? addClass : removeClass)([this.element], IELISTWRAP);\n    }\n  };\n  TreeView.prototype.updateWrap = function (ulEle) {\n    if (!this.fullRowSelect) {\n      return;\n    }\n    var liEle = ulEle ? selectAll('.' + LISTITEM, ulEle) : this.liList;\n    var length = liEle.length;\n    for (var i = 0; i < length; i++) {\n      this.calculateWrap(liEle[parseInt(i.toString(), 10)]);\n    }\n  };\n  TreeView.prototype.calculateWrap = function (liEle) {\n    var element = select('.' + FULLROW, liEle);\n    if (element && element.nextElementSibling) {\n      element.style.height = this.allowTextWrap ? element.nextElementSibling.offsetHeight + 'px' : '';\n    }\n  };\n  TreeView.prototype.doExpandAction = function () {\n    var _this = this;\n    var eUids = this.expandedNodes;\n    if (!this.loadOnDemand && this.fields.dataSource instanceof DataManager) {\n      this.isInitalExpand = this.treeData.filter(function (e) {\n        return e[_this.fields.expanded] === true;\n      }).length > 0 ? true : this.isInitalExpand;\n    }\n    if (this.isInitalExpand && eUids.length > 0) {\n      this.setProperties({\n        expandedNodes: []\n      }, true);\n      if (this.fields.dataSource instanceof DataManager) {\n        this.expandGivenNodes(eUids);\n      } else {\n        for (var i = 0; i < eUids.length; i++) {\n          var eNode = select('[data-uid=\"' + eUids[parseInt(i.toString(), 10)] + '\"]', this.element);\n          if (!isNOU(eNode)) {\n            var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\n            if (!isNOU(icon)) {\n              this.expandAction(eNode, icon, null);\n            }\n          } else {\n            if (eUids[parseInt(i.toString(), 10)] && this.expandChildren.indexOf(eUids[parseInt(i.toString(), 10)]) === -1) {\n              this.expandChildren.push(eUids[parseInt(i.toString(), 10)].toString());\n            }\n            continue;\n          }\n        }\n        this.afterFinalized();\n      }\n    } else {\n      this.afterFinalized();\n    }\n  };\n  TreeView.prototype.expandGivenNodes = function (arr) {\n    var _this = this;\n    this.expandCallback(arr[this.index], function () {\n      _this.index++;\n      if (_this.index < arr.length) {\n        _this.expandGivenNodes(arr);\n      } else {\n        _this.afterFinalized();\n      }\n    });\n    if (this.index > 0) {\n      this.index = 0;\n    }\n  };\n  TreeView.prototype.expandCallback = function (eUid, callback) {\n    var eNode = select('[data-uid=\"' + eUid + '\"]', this.element);\n    if (!isNOU(eNode)) {\n      var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\n      if (!isNOU(icon)) {\n        this.expandAction(eNode, icon, null, false, callback);\n      }\n      callback();\n    } else {\n      callback();\n    }\n  };\n  TreeView.prototype.afterFinalized = function () {\n    this.doSelectionAction();\n    this.updateCheckedProp();\n    this.isAnimate = true;\n    this.isInitalExpand = false;\n    if ((!this.isLoaded || this.isFieldChange) && !this.isNodeDropped) {\n      var eventArgs = {\n        data: this.treeData\n      };\n      this.trigger('dataBound', eventArgs);\n    }\n    this.isLoaded = true;\n    this.isNodeDropped = false;\n  };\n  TreeView.prototype.doSelectionAction = function () {\n    var sNodes = selectAll('.' + SELECTED, this.element);\n    var sUids = this.selectedNodes;\n    if (sUids.length > 0) {\n      this.setProperties({\n        selectedNodes: []\n      }, true);\n      for (var i = 0; i < sUids.length; i++) {\n        var sNode = select('[data-uid=\"' + sUids[parseInt(i.toString(), 10)] + '\"]', this.element);\n        if (sNode && !sNode.classList.contains('e-active')) {\n          this.selectNode(sNode, null, true);\n        } else {\n          this.selectedNodes.push(sUids[parseInt(i.toString(), 10)]);\n        }\n        if (!this.allowMultiSelection) {\n          break;\n        }\n      }\n    } else {\n      this.selectGivenNodes(sNodes);\n    }\n    removeClass(sNodes, SELECTED);\n  };\n  TreeView.prototype.selectGivenNodes = function (sNodes) {\n    for (var i = 0; i < sNodes.length; i++) {\n      if (!sNodes[parseInt(i.toString(), 10)].classList.contains('e-disable')) {\n        this.selectNode(sNodes[parseInt(i.toString(), 10)], null, true);\n      }\n      if (!this.allowMultiSelection) {\n        break;\n      }\n    }\n  };\n  TreeView.prototype.clickHandler = function (event) {\n    var target = Browser.isDevice && event.originalEvent.changedTouches && !Browser.isIos ? document.elementFromPoint(event.originalEvent.changedTouches[0].clientX, event.originalEvent.changedTouches[0].clientY) : event.originalEvent.target;\n    EventHandler.remove(this.element, 'contextmenu', this.preventContextMenu);\n    if (!target || this.dragStartAction) {\n      return;\n    } else {\n      var classList = target.classList;\n      var li = closest(target, '.' + LISTITEM);\n      if (!li || li.classList.contains(PREVENTSELECT) && !(classList.contains(EXPANDABLE) || classList.contains(COLLAPSIBLE))) {\n        return;\n      } else if (event.originalEvent.which !== 3) {\n        var rippleElement = select('.' + RIPPLEELMENT, li);\n        var rippleIcons = select('.' + ICON, li);\n        this.removeHover();\n        this.setFocusElement(li);\n        if (this.showCheckBox && !li.classList.contains('e-disable')) {\n          var checkWrapper = closest(target, '.' + CHECKBOXWRAP);\n          if (!isNOU(checkWrapper)) {\n            var checkElement = select('.' + CHECKBOXFRAME, checkWrapper);\n            this.validateCheckNode(checkWrapper, checkElement.classList.contains(CHECK), li, event.originalEvent);\n            this.triggerClickEvent(event.originalEvent, li);\n            return;\n          }\n        }\n        if (classList.contains(EXPANDABLE)) {\n          this.expandAction(li, target, event);\n        } else if (classList.contains(COLLAPSIBLE)) {\n          this.collapseNode(li, target, event);\n        } else if (rippleElement && rippleIcons) {\n          if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(EXPANDABLE)) {\n            this.expandAction(li, rippleIcons, event);\n          } else if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(COLLAPSIBLE)) {\n            this.collapseNode(li, rippleIcons, event);\n          } else if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\n            this.toggleSelect(li, event.originalEvent, false);\n          }\n        } else {\n          if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\n            this.toggleSelect(li, event.originalEvent, false);\n          }\n        }\n      }\n      if (event.originalEvent.which === 3) {\n        this.isRightClick = true;\n      }\n      this.triggerClickEvent(event.originalEvent, li);\n    }\n  };\n  TreeView.prototype.nodeCheckedEvent = function (wrapper, isCheck, e) {\n    var eventArgs = this.getCheckEvent(wrapper, isCheck ? 'uncheck' : 'check', e);\n    eventArgs.data = eventArgs.data.splice(0, eventArgs.data.length - 1);\n    this.trigger('nodeChecked', eventArgs);\n  };\n  TreeView.prototype.updateOldCheckedData = function (data) {\n    var dataManager = new DataManager(data);\n    var childItems = dataManager.executeLocal(new Query().where('isChecked', 'equal', 'true', true));\n    var uncheckedItems = dataManager.executeLocal(new Query().where('isChecked', 'equal', 'false', true));\n    if (uncheckedItems.length > 0) {\n      var index = this.OldCheckedData.findIndex(function (e) {\n        return e['id'] === uncheckedItems[0]['id'];\n      });\n      if (index !== -1) {\n        this.OldCheckedData.splice(index, 1);\n        return;\n      }\n    }\n    if (childItems.length > 0) {\n      var index = this.OldCheckedData.findIndex(function (e) {\n        return e['id'] === childItems[0]['id'];\n      });\n      if (index === -1) {\n        this.OldCheckedData.push(childItems[0]);\n        return;\n      }\n    }\n  };\n  TreeView.prototype.triggerClickEvent = function (e, li) {\n    var eventArgs = {\n      event: e,\n      node: li\n    };\n    this.trigger('nodeClicked', eventArgs);\n  };\n  TreeView.prototype.expandNode = function (currLi, icon, loaded) {\n    var _this = this;\n    this.renderReactTemplates();\n    if (icon.classList.contains(LOAD)) {\n      this.hideSpinner(icon);\n    }\n    if (!this.initialRender) {\n      icon.classList.add('interaction');\n    }\n    if (loaded !== true || loaded === true && currLi.classList.contains('e-expanded')) {\n      if (this.preventExpand !== true) {\n        removeClass([icon], EXPANDABLE);\n        addClass([icon], COLLAPSIBLE);\n        var start_1 = 0;\n        var end_1 = 0;\n        var ul_1 = select('.' + PARENTITEM, currLi);\n        var liEle_1 = currLi;\n        this.setHeight(liEle_1, ul_1);\n        var activeElement_1 = select('.' + LISTITEM + '.' + ACTIVE, currLi);\n        if (this.isAnimate && !this.isRefreshed) {\n          this.aniObj.animate(ul_1, {\n            name: this.animation.expand.effect,\n            duration: this.animation.expand.duration === 0 && animationMode === 'Enable' ? 400 : this.animation.expand.duration,\n            timingFunction: this.animation.expand.easing,\n            begin: function () {\n              liEle_1.style.overflow = 'hidden';\n              if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\n                activeElement_1.classList.add(ITEM_ANIMATION_ACTIVE);\n              }\n              start_1 = liEle_1.offsetHeight;\n              end_1 = select('.' + TEXTWRAP, currLi).offsetHeight;\n            },\n            progress: function (args) {\n              args.element.style.display = 'block';\n              _this.animateHeight(args, start_1, end_1);\n            },\n            end: function (args) {\n              args.element.style.display = 'block';\n              if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\n                activeElement_1.classList.remove(ITEM_ANIMATION_ACTIVE);\n              }\n              _this.expandedNode(liEle_1, ul_1, icon);\n            }\n          });\n        } else {\n          this.expandedNode(liEle_1, ul_1, icon);\n        }\n      }\n    } else {\n      var ul = select('.' + PARENTITEM, currLi);\n      ul.style.display = 'none';\n      if (this.fields.dataSource instanceof DataManager === true) {\n        this.preventExpand = false;\n      }\n    }\n    if (this.initialRender) {\n      icon.classList.add('interaction');\n    }\n  };\n  TreeView.prototype.expandedNode = function (currLi, ul, icon) {\n    ul.style.display = 'block';\n    currLi.style.display = 'block';\n    currLi.style.overflow = '';\n    currLi.style.height = '';\n    removeClass([icon], PROCESS);\n    this.addExpand(currLi);\n    if (this.allowTextWrap && this.isLoaded && this.isFirstRender) {\n      this.updateWrap(currLi);\n      this.isFirstRender = false;\n    }\n    if (this.isLoaded && this.expandArgs && !this.isRefreshed) {\n      this.expandArgs = this.getExpandEvent(currLi, null);\n      this.expandArgs.isInteracted = this.isInteracted;\n      this.trigger('nodeExpanded', this.expandArgs);\n    }\n  };\n  TreeView.prototype.addExpand = function (liEle) {\n    liEle.setAttribute('aria-expanded', 'true');\n    removeClass([liEle], NODECOLLAPSED);\n    var id = liEle.getAttribute('data-uid');\n    if (!isNOU(id) && this.expandedNodes.indexOf(id) === -1) {\n      this.expandedNodes.push(id);\n    }\n  };\n  TreeView.prototype.collapseNode = function (currLi, icon, e) {\n    var _this = this;\n    if (icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      addClass([icon], PROCESS);\n    }\n    var colArgs;\n    if (this.isLoaded) {\n      colArgs = this.getExpandEvent(currLi, e);\n      this.isInteracted = colArgs.isInteracted;\n      this.trigger('nodeCollapsing', colArgs, function (observedArgs) {\n        if (observedArgs.cancel) {\n          removeClass([icon], PROCESS);\n        } else {\n          _this.nodeCollapseAction(currLi, icon, observedArgs);\n        }\n      });\n    } else {\n      this.nodeCollapseAction(currLi, icon, colArgs);\n    }\n  };\n  TreeView.prototype.nodeCollapseAction = function (currLi, icon, colArgs) {\n    var _this = this;\n    removeClass([icon], COLLAPSIBLE);\n    addClass([icon], EXPANDABLE);\n    var start = 0;\n    var end = 0;\n    var ul = select('.' + PARENTITEM, currLi);\n    var liEle = currLi;\n    var activeElement = select('.' + LISTITEM + '.' + ACTIVE, currLi);\n    if (this.isAnimate) {\n      this.aniObj.animate(ul, {\n        name: this.animation.collapse.effect,\n        duration: this.animation.collapse.duration === 0 && animationMode === 'Enable' ? 400 : this.animation.collapse.duration,\n        timingFunction: this.animation.collapse.easing,\n        begin: function () {\n          liEle.style.overflow = 'hidden';\n          if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\n            activeElement.classList.add(ITEM_ANIMATION_ACTIVE);\n          }\n          start = select('.' + TEXTWRAP, currLi).offsetHeight;\n          end = liEle.offsetHeight;\n        },\n        progress: function (args) {\n          _this.animateHeight(args, start, end);\n        },\n        end: function (args) {\n          args.element.style.display = 'none';\n          if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\n            activeElement.classList.remove(ITEM_ANIMATION_ACTIVE);\n          }\n          _this.collapsedNode(liEle, ul, icon, colArgs);\n        }\n      });\n    } else {\n      this.collapsedNode(liEle, ul, icon, colArgs);\n    }\n  };\n  TreeView.prototype.collapsedNode = function (liEle, ul, icon, colArgs) {\n    ul.style.display = 'none';\n    liEle.style.overflow = '';\n    liEle.style.height = '';\n    removeClass([icon], PROCESS);\n    this.removeExpand(liEle);\n    if (this.isLoaded) {\n      colArgs = this.getExpandEvent(liEle, null);\n      colArgs.isInteracted = this.isInteracted;\n      this.trigger('nodeCollapsed', colArgs);\n    }\n  };\n  TreeView.prototype.removeExpand = function (liEle, toRemove) {\n    if (toRemove) {\n      liEle.removeAttribute('aria-expanded');\n    } else {\n      this.disableExpandAttr(liEle);\n    }\n    var index = this.expandedNodes.indexOf(liEle.getAttribute('data-uid'));\n    if (index > -1) {\n      this.expandedNodes.splice(index, 1);\n    }\n  };\n  TreeView.prototype.disableExpandAttr = function (liEle) {\n    liEle.setAttribute('aria-expanded', 'false');\n    addClass([liEle], NODECOLLAPSED);\n  };\n  TreeView.prototype.setHeight = function (currLi, ul) {\n    ul.style.display = 'block';\n    ul.style.visibility = 'hidden';\n    currLi.style.height = currLi.offsetHeight + 'px';\n    ul.style.display = 'none';\n    ul.style.visibility = '';\n  };\n  TreeView.prototype.animateHeight = function (args, start, end) {\n    var remaining = (args.duration - args.timeStamp) / args.duration;\n    var currentHeight = (end - start) * remaining + start;\n    args.element.parentElement.style.height = currentHeight + 'px';\n  };\n  TreeView.prototype.renderChildNodes = function (parentLi, expandChild, callback, loaded) {\n    var _this = this;\n    var eicon = select('div.' + ICON, parentLi);\n    if (isNOU(eicon)) {\n      return;\n    }\n    this.showSpinner(eicon);\n    var childItems;\n    if (this.fields.dataSource instanceof DataManager) {\n      var level = this.parents(parentLi, '.' + PARENTITEM).length;\n      var mapper_2 = this.getChildFields(this.fields, level, 1);\n      if (isNOU(mapper_2) || isNOU(mapper_2.dataSource)) {\n        detach(eicon);\n        this.removeExpand(parentLi, true);\n        return;\n      }\n      this.treeList.push('false');\n      if (this.fields.dataSource instanceof DataManager && this.isOffline) {\n        this.treeList.pop();\n        childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'));\n        this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\n      } else {\n        mapper_2.dataSource.executeQuery(this.getQuery(mapper_2, parentLi.getAttribute('data-uid'))).then(function (e) {\n          _this.treeList.pop();\n          childItems = e.result;\n          if (_this.dataType === 1) {\n            _this.dataType = 2;\n          }\n          _this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      }\n    } else {\n      childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'), false, parseFloat(parentLi.getAttribute('aria-level')) + 1);\n      this.currentLoadData = this.getSortedData(childItems);\n      if (isNOU(childItems) || childItems.length === 0) {\n        detach(eicon);\n        if (eicon.classList.contains(LOAD)) {\n          this.hideSpinner(eicon);\n        }\n        this.removeExpand(parentLi, true);\n        return;\n      } else {\n        this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\n        parentLi.appendChild(ListBase.createList(this.createElement, this.currentLoadData, this.listBaseOption));\n        this.expandNode(parentLi, eicon, loaded);\n        this.setSelectionForChildNodes(childItems);\n        this.ensureCheckNode(parentLi);\n        this.finalizeNode(parentLi);\n        this.disableTreeNodes(childItems);\n        this.renderSubChild(parentLi, expandChild, loaded);\n      }\n    }\n  };\n  TreeView.prototype.loadChild = function (childItems, mapper, eicon, parentLi, expandChild, callback, loaded) {\n    this.currentLoadData = childItems;\n    if (isNOU(childItems) || childItems.length === 0) {\n      detach(eicon);\n      this.removeExpand(parentLi, true);\n    } else {\n      this.updateListProp(mapper);\n      if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n        var id = parentLi.getAttribute('data-uid');\n        var nodeData = this.getNodeObject(id);\n        setValue('child', childItems, nodeData);\n      }\n      this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\n      parentLi.appendChild(ListBase.createList(this.createElement, childItems, this.listBaseOption));\n      this.expandNode(parentLi, eicon, loaded);\n      this.setSelectionForChildNodes(childItems);\n      this.ensureCheckNode(parentLi);\n      this.finalizeNode(parentLi);\n      this.disableTreeNodes(childItems);\n      this.renderSubChild(parentLi, expandChild, loaded);\n    }\n    if (callback) {\n      callback();\n    }\n    if (expandChild) {\n      this.expandedNodes.push(parentLi.getAttribute('data-uid'));\n    }\n    if (this.treeList.length === 0 && !this.isLoaded) {\n      this.finalize();\n    }\n  };\n  TreeView.prototype.disableTreeNodes = function (childItems) {\n    var i = 0;\n    while (i < childItems.length) {\n      var id = childItems[parseInt(i.toString(), 10)][this.fields.id] ? childItems[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n      if (this.disableNode !== undefined && this.disableNode.indexOf(id) !== -1) {\n        this.doDisableAction([id]);\n      }\n      i++;\n    }\n  };\n  /**\r\n   * Sets the child Item in selectedState while rendering the child node\r\n   *\r\n   * @param {Object[]} nodes - Array of nodes\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.setSelectionForChildNodes = function (nodes) {\n    var i;\n    for (i = 0; i < nodes.length; i++) {\n      var id = nodes[parseInt(i.toString(), 10)][this.fields.id] ? nodes[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n      if (this.selectedNodes !== undefined && this.selectedNodes.indexOf(id) !== -1) {\n        this.doSelectionAction();\n      }\n    }\n  };\n  TreeView.prototype.ensureCheckNode = function (element) {\n    if (this.showCheckBox) {\n      this.ele = this.checkedElement ? this.checkedElement.indexOf(element.getAttribute('data-uid')) : null;\n      if (this.autoCheck) {\n        this.ensureChildCheckState(element);\n        this.ensureParentCheckState(element);\n      }\n    }\n    this.currentLoadData = null;\n  };\n  TreeView.prototype.getFields = function (mapper, nodeLevel, dataLevel) {\n    if (nodeLevel === dataLevel) {\n      return mapper;\n    } else {\n      return this.getFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\n    }\n  };\n  TreeView.prototype.getChildFields = function (mapper, nodeLevel, dataLevel) {\n    if (nodeLevel === dataLevel) {\n      return this.getChildMapper(mapper);\n    } else {\n      return this.getChildFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\n    }\n  };\n  TreeView.prototype.getChildMapper = function (mapper) {\n    return typeof mapper.child === 'string' || isNOU(mapper.child) ? mapper : mapper.child;\n  };\n  TreeView.prototype.getChildNodes = function (obj, parentId, isRoot, level) {\n    var _this = this;\n    if (isRoot === void 0) {\n      isRoot = false;\n    }\n    var childNodes;\n    if (isNOU(obj)) {\n      return childNodes;\n    } else if (this.dataType === 1) {\n      return this.getChildGroup(this.groupedData, parentId, isRoot);\n    } else {\n      if (typeof this.fields.child === 'string') {\n        var index = obj.findIndex(function (data) {\n          return getValue(_this.fields.id, data) && getValue(_this.fields.id, data).toString() === parentId;\n        });\n        if (index !== -1) {\n          return getValue(this.fields.child, obj[parseInt(index.toString(), 10)]);\n        }\n        if (index === -1) {\n          for (var i = 0, objlen = obj.length; i < objlen; i++) {\n            var tempArray = getValue(this.fields.child, obj[parseInt(i.toString(), 10)]);\n            var childIndex = !isNOU(tempArray) ? tempArray.findIndex(function (data) {\n              return getValue(_this.fields.id, data) && getValue(_this.fields.id, data).toString() === parentId;\n            }) : -1;\n            if (childIndex !== -1) {\n              return getValue(this.fields.child, tempArray[parseInt(childIndex.toString(), 10)]);\n            } else if (!isNOU(tempArray)) {\n              childNodes = this.getChildNodes(tempArray, parentId);\n              if (childNodes !== undefined) {\n                break;\n              }\n            }\n          }\n        }\n      } else if (this.isChildObject()) {\n        var tempField = !isNOU(level) ? this.fields : this.fields.child;\n        var i = 1;\n        while (i < level) {\n          if (!isNOU(tempField.child)) {\n            tempField = tempField.child;\n          } else {\n            break;\n          }\n          i++;\n        }\n        this.updateListProp(tempField);\n        var index = obj.findIndex(function (data) {\n          return getValue(_this.fields.id, data) && getValue(_this.fields.id, data).toString() === parentId;\n        });\n        if (index !== -1) {\n          return getValue('child', obj[parseInt(index.toString(), 10)]);\n        }\n        if (index === -1) {\n          for (var i_1 = 0, objlen = obj.length; i_1 < objlen; i_1++) {\n            var tempArray = getValue('child', obj[parseInt(i_1.toString(), 10)]);\n            var childIndex = !isNOU(tempArray) ? tempArray.findIndex(function (data) {\n              return getValue(_this.fields.child.id, data) && getValue(_this.fields.child.id, data).toString() === parentId;\n            }) : -1;\n            if (childIndex !== -1) {\n              return getValue('child', tempArray[parseInt(childIndex.toString(), 10)]);\n            } else if (!isNOU(tempArray)) {\n              childNodes = this.getChildNodes(tempArray, parentId, false, level);\n              if (childNodes !== undefined) {\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    return childNodes;\n  };\n  TreeView.prototype.getChildGroup = function (data, parentId, isRoot) {\n    var childNodes;\n    if (isNOU(data)) {\n      return childNodes;\n    }\n    for (var i = 0, objlen = data.length; i < objlen; i++) {\n      if (!isNOU(data[parseInt(i.toString(), 10)][0]) && !isNOU(getValue(this.fields.parentID, data[parseInt(i.toString(), 10)][0]))) {\n        if (getValue(this.fields.parentID, data[parseInt(i.toString(), 10)][0]).toString() === parentId) {\n          return data[parseInt(i.toString(), 10)];\n        }\n      } else if (isRoot) {\n        return data[parseInt(i.toString(), 10)];\n      } else {\n        return [];\n      }\n    }\n    return childNodes;\n  };\n  TreeView.prototype.renderSubChild = function (element, expandChild, loaded) {\n    if (expandChild) {\n      var cIcons = selectAll('.' + EXPANDABLE, element);\n      for (var i = 0, len = cIcons.length; i < len; i++) {\n        var icon = cIcons[parseInt(i.toString(), 10)];\n        if (element.querySelector('.e-icons') !== cIcons[parseInt(i.toString(), 10)]) {\n          var curLi = closest(icon, '.' + LISTITEM);\n          this.expandArgs = this.getExpandEvent(curLi, null);\n          if (loaded !== true) {\n            this.trigger('nodeExpanding', this.expandArgs);\n          }\n          this.renderChildNodes(curLi, expandChild, null, loaded);\n        }\n      }\n    }\n  };\n  TreeView.prototype.toggleSelect = function (li, e, multiSelect) {\n    if (!li.classList.contains('e-disable')) {\n      if (this.allowMultiSelection && (e && e.ctrlKey || multiSelect) && this.isActive(li)) {\n        this.unselectNode(li, e);\n      } else {\n        this.selectNode(li, e, multiSelect);\n      }\n    }\n  };\n  TreeView.prototype.isActive = function (li) {\n    return li.classList.contains(ACTIVE) ? true : false;\n  };\n  TreeView.prototype.selectNode = function (li, e, multiSelect) {\n    var _this = this;\n    if (isNOU(li) || !this.allowMultiSelection && this.isActive(li) && !isNOU(e)) {\n      this.setFocusElement(li);\n      return;\n    }\n    var eventArgs;\n    if (this.isLoaded) {\n      eventArgs = this.getSelectEvent(li, 'select', e);\n      this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel && !observedArgs.node.classList.contains(PREVENTSELECT)) {\n          _this.nodeSelectAction(li, e, observedArgs, multiSelect);\n        }\n      });\n    } else {\n      this.nodeSelectAction(li, e, eventArgs, multiSelect);\n    }\n  };\n  TreeView.prototype.nodeSelectAction = function (li, e, eventArgs, multiSelect) {\n    if (!this.allowMultiSelection || !multiSelect && (!e || e && !(e.ctrlKey || e.metaKey))) {\n      this.removeSelectAll();\n    }\n    if (this.allowMultiSelection && e && e.shiftKey) {\n      if (!this.startNode) {\n        this.startNode = li;\n      }\n      var startIndex = this.liList.indexOf(this.startNode);\n      var endIndex = this.liList.indexOf(li);\n      if (startIndex > endIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n      for (var i = startIndex; i <= endIndex; i++) {\n        var currNode = this.liList[parseInt(i.toString(), 10)];\n        if (isVisible(currNode) && !currNode.classList.contains('e-disable')) {\n          this.addSelect(currNode);\n        }\n      }\n    } else {\n      this.startNode = li;\n      this.addSelect(li);\n    }\n    if (this.isLoaded) {\n      eventArgs.nodeData = this.getNodeData(li);\n      this.trigger('nodeSelected', eventArgs);\n      this.isRightClick = false;\n    }\n    this.isRightClick = false;\n  };\n  TreeView.prototype.unselectNode = function (li, e) {\n    var _this = this;\n    var eventArgs;\n    if (this.isLoaded) {\n      eventArgs = this.getSelectEvent(li, 'un-select', e);\n      this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          _this.nodeUnselectAction(li, observedArgs);\n        }\n      });\n    } else {\n      this.nodeUnselectAction(li, eventArgs);\n    }\n  };\n  TreeView.prototype.nodeUnselectAction = function (li, eventArgs) {\n    this.removeSelect(li);\n    this.setFocusElement(li);\n    if (this.isLoaded) {\n      eventArgs.nodeData = this.getNodeData(li);\n      this.trigger('nodeSelected', eventArgs);\n    }\n  };\n  TreeView.prototype.setFocusElement = function (li) {\n    if (!isNOU(li)) {\n      var focusedNode = this.getFocusedNode();\n      if (focusedNode) {\n        removeClass([focusedNode], FOCUS);\n        focusedNode.setAttribute('tabindex', '-1');\n      }\n      addClass([li], FOCUS);\n      li.setAttribute('tabindex', '0');\n      EventHandler.add(li, 'blur', this.focusOut, this);\n      this.updateIdAttr(focusedNode, li);\n    }\n  };\n  TreeView.prototype.addSelect = function (liEle) {\n    liEle.setAttribute('aria-selected', 'true');\n    addClass([liEle], ACTIVE);\n    var id = liEle.getAttribute('data-uid');\n    if (!isNOU(id) && this.selectedNodes.indexOf(id) === -1) {\n      this.selectedNodes.push(id);\n    }\n  };\n  TreeView.prototype.removeSelect = function (liEle) {\n    if (this.allowMultiSelection) {\n      liEle.setAttribute('aria-selected', 'false');\n    } else {\n      liEle.removeAttribute('aria-selected');\n    }\n    removeClass([liEle], ACTIVE);\n    var index = this.selectedNodes.indexOf(liEle.getAttribute('data-uid'));\n    if (index > -1) {\n      this.selectedNodes.splice(index, 1);\n    }\n  };\n  TreeView.prototype.removeSelectAll = function () {\n    var selectedLI = this.element.querySelectorAll('.' + ACTIVE);\n    for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n      var ele = selectedLI_1[_i];\n      if (this.allowMultiSelection) {\n        ele.setAttribute('aria-selected', 'false');\n      } else {\n        ele.removeAttribute('aria-selected');\n      }\n    }\n    removeClass(selectedLI, ACTIVE);\n    this.setProperties({\n      selectedNodes: []\n    }, true);\n  };\n  TreeView.prototype.getSelectEvent = function (currLi, action, e) {\n    var nodeData = this.getNodeData(currLi);\n    return {\n      action: action,\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      nodeData: nodeData\n    };\n  };\n  TreeView.prototype.setExpandOnType = function () {\n    this.expandOnType = this.expandOn === 'Auto' ? Browser.isDevice ? 'Click' : 'DblClick' : this.expandOn;\n  };\n  TreeView.prototype.expandHandler = function (e) {\n    var target = Browser.isDevice && e.originalEvent.changedTouches && !Browser.isIos ? document.elementFromPoint(e.originalEvent.changedTouches[0].clientX, e.originalEvent.changedTouches[0].clientY) : e.originalEvent.target;\n    if (!target || target.classList.contains(INPUT) || target.classList.contains(ROOT) || target.classList.contains(PARENTITEM) || target.classList.contains(LISTITEM) || target.classList.contains(ICON) || this.showCheckBox && closest(target, '.' + CHECKBOXWRAP)) {\n      return;\n    } else {\n      this.expandCollapseAction(closest(target, '.' + LISTITEM), e);\n    }\n  };\n  TreeView.prototype.expandCollapseAction = function (currLi, e) {\n    var icon = select('div.' + ICON, currLi);\n    if (!icon || icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      var classList = icon.classList;\n      if (classList.contains(EXPANDABLE)) {\n        this.expandAction(currLi, icon, e);\n      } else if (classList.contains(COLLAPSIBLE)) {\n        this.collapseNode(currLi, icon, e);\n      }\n    }\n  };\n  TreeView.prototype.expandAction = function (currLi, icon, e, expandChild, callback) {\n    var _this = this;\n    if (icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      addClass([icon], PROCESS);\n    }\n    if (this.isLoaded && !this.isRefreshed) {\n      this.expandArgs = this.getExpandEvent(currLi, e);\n      this.isInteracted = this.expandArgs.isInteracted;\n      this.trigger('nodeExpanding', this.expandArgs, function (observedArgs) {\n        if (observedArgs.cancel) {\n          removeClass([icon], PROCESS);\n        } else {\n          _this.nodeExpandAction(currLi, icon, expandChild, callback);\n        }\n      });\n    } else {\n      this.nodeExpandAction(currLi, icon, expandChild, callback);\n    }\n  };\n  TreeView.prototype.nodeExpandAction = function (currLi, icon, expandChild, callback) {\n    var ul = select('.' + PARENTITEM, currLi);\n    if (ul && ul.nodeName === 'UL') {\n      this.expandNode(currLi, icon);\n    } else {\n      this.isFirstRender = true;\n      this.renderChildNodes(currLi, expandChild, callback);\n      var liEles = selectAll('.' + LISTITEM, currLi);\n      for (var i = 0; i < liEles.length; i++) {\n        var id = this.getId(liEles[parseInt(i.toString(), 10)]);\n        if (this.expandChildren.indexOf(id) !== -1 && this.expandChildren !== undefined) {\n          var icon_1 = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEles[parseInt(i.toString(), 10)]));\n          if (!isNOU(icon_1)) {\n            this.expandAction(liEles[parseInt(i.toString(), 10)], icon_1, null);\n          }\n          this.expandChildren.splice(this.expandChildren.indexOf(id), 1);\n        }\n      }\n    }\n  };\n  TreeView.prototype.keyActionHandler = function (e) {\n    var _this = this;\n    var target = e.target;\n    var focusedNode = this.getFocusedNode();\n    if (target && target.classList.contains(INPUT)) {\n      var inpEle = target;\n      if (e.action === 'enter') {\n        inpEle.blur();\n      } else if (e.action === 'escape') {\n        inpEle.value = this.oldText;\n        inpEle.blur();\n      }\n      return;\n    }\n    e.preventDefault();\n    var eventArgs = {\n      cancel: false,\n      event: e,\n      node: focusedNode\n    };\n    this.trigger('keyPress', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        switch (e.action) {\n          case 'space':\n            if (_this.showCheckBox) {\n              _this.checkNode(e);\n            } else {\n              _this.toggleSelect(focusedNode, e);\n            }\n            break;\n          case 'moveRight':\n            _this.openNode(_this.enableRtl ? false : true, e);\n            break;\n          case 'moveLeft':\n            _this.openNode(_this.enableRtl ? true : false, e);\n            break;\n          case 'shiftDown':\n            _this.shiftKeySelect(true, e);\n            break;\n          case 'moveDown':\n          case 'ctrlDown':\n          case 'csDown':\n            _this.navigateNode(true);\n            break;\n          case 'shiftUp':\n            _this.shiftKeySelect(false, e);\n            break;\n          case 'moveUp':\n          case 'ctrlUp':\n          case 'csUp':\n            _this.navigateNode(false);\n            break;\n          case 'home':\n          case 'shiftHome':\n          case 'ctrlHome':\n          case 'csHome':\n            _this.navigateRootNode(true);\n            break;\n          case 'end':\n          case 'shiftEnd':\n          case 'ctrlEnd':\n          case 'csEnd':\n            _this.navigateRootNode(false);\n            break;\n          case 'enter':\n          case 'ctrlEnter':\n          case 'shiftEnter':\n          case 'csEnter':\n          case 'shiftSpace':\n          case 'ctrlSpace':\n            _this.toggleSelect(focusedNode, e);\n            break;\n          case 'f2':\n            if (_this.allowEditing && !focusedNode.classList.contains('e-disable')) {\n              _this.createTextbox(focusedNode);\n            }\n            break;\n          case 'ctrlA':\n            if (_this.allowMultiSelection) {\n              var sNodes = selectAll('.' + LISTITEM + ':not(.' + ACTIVE + ')', _this.element);\n              _this.selectGivenNodes(sNodes);\n            }\n            break;\n        }\n      }\n    });\n  };\n  TreeView.prototype.navigateToFocus = function (isUp) {\n    var focusNode = this.getFocusedNode().querySelector('.' + TEXTWRAP);\n    var pos = focusNode.getBoundingClientRect();\n    var parent = this.getScrollParent(this.element);\n    if (!isNOU(parent)) {\n      var parentPos = parent.getBoundingClientRect();\n      if (pos.bottom > parentPos.bottom) {\n        parent.scrollTop += pos.bottom - parentPos.bottom;\n      } else if (pos.top < parentPos.top) {\n        parent.scrollTop -= parentPos.top - pos.top;\n      }\n    }\n    var isVisible = this.isVisibleInViewport(focusNode);\n    if (!isVisible) {\n      focusNode.scrollIntoView(isUp);\n    }\n  };\n  TreeView.prototype.isVisibleInViewport = function (txtWrap) {\n    var pos = txtWrap.getBoundingClientRect();\n    return pos.top >= 0 && pos.left >= 0 && pos.bottom <= (window.innerHeight || document.documentElement.clientHeight) && pos.right <= (window.innerWidth || document.documentElement.clientWidth);\n  };\n  TreeView.prototype.getScrollParent = function (node) {\n    if (isNOU(node)) {\n      return null;\n    }\n    return node.scrollHeight > node.clientHeight ? node : this.getScrollParent(node.parentElement);\n  };\n  TreeView.prototype.shiftKeySelect = function (isTowards, e) {\n    if (this.allowMultiSelection) {\n      var focusedNode = this.getFocusedNode();\n      var nextNode = isTowards ? this.getNextNode(focusedNode) : this.getPrevNode(focusedNode);\n      this.removeHover();\n      this.setFocusElement(nextNode);\n      this.toggleSelect(nextNode, e, false);\n      this.navigateToFocus(!isTowards);\n    } else {\n      this.navigateNode(isTowards);\n    }\n  };\n  TreeView.prototype.checkNode = function (e) {\n    var focusedNode = this.getFocusedNode();\n    var checkWrap = select('.' + CHECKBOXWRAP, focusedNode);\n    var isChecked = select(' .' + CHECKBOXFRAME, checkWrap).classList.contains(CHECK);\n    if (!focusedNode.classList.contains('e-disable')) {\n      if (focusedNode.getElementsByClassName('e-checkbox-disabled').length === 0) {\n        this.validateCheckNode(checkWrap, isChecked, focusedNode, e);\n      }\n    }\n  };\n  TreeView.prototype.validateCheckNode = function (checkWrap, isCheck, li, e) {\n    var _this = this;\n    var currLi = closest(checkWrap, '.' + LISTITEM);\n    this.checkActionNodes = [];\n    var ariaState = !isCheck ? 'true' : 'false';\n    if (!isNOU(ariaState)) {\n      currLi.setAttribute('aria-checked', ariaState);\n    }\n    var eventArgs = this.getCheckEvent(currLi, isCheck ? 'uncheck' : 'check', e);\n    this.trigger('nodeChecking', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        _this.nodeCheckingAction(checkWrap, isCheck, li, observedArgs, e);\n      }\n    });\n  };\n  TreeView.prototype.nodeCheckingAction = function (checkWrap, isCheck, li, eventArgs, e) {\n    if (this.checkedElement.indexOf(li.getAttribute('data-uid')) === -1) {\n      this.checkedElement.push(li.getAttribute('data-uid'));\n      if (this.autoCheck) {\n        var child = this.getChildNodes(this.treeData, li.getAttribute('data-uid'));\n        if (child !== null) {\n          this.allCheckNode(child, this.checkedElement, null, null, false);\n        } else {\n          child = null;\n        }\n      }\n    }\n    this.changeState(checkWrap, isCheck ? 'uncheck' : 'check', e, true);\n    if (this.autoCheck) {\n      this.ensureChildCheckState(li);\n      this.updateOldCheckedData([this.getNodeData(li)]);\n      this.ensureParentCheckState(closest(closest(li, '.' + PARENTITEM), '.' + LISTITEM));\n      var doCheck = void 0;\n      if (eventArgs.action === 'check') {\n        doCheck = true;\n      } else if (eventArgs.action === 'uncheck') {\n        doCheck = false;\n      }\n      this.ensureStateChange(li, doCheck);\n    }\n    this.nodeCheckedEvent(checkWrap, isCheck, e);\n  };\n  /**\r\n   * Update checkedNodes when UI interaction happens before the child node renders in DOM\r\n   *\r\n   * @param {Element} li - The list item element\r\n   * @param {boolean} [doCheck] - Optional parameter to specify whether to perform a check\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.ensureStateChange = function (li, doCheck) {\n    var childElement = select('.' + PARENTITEM, li);\n    var parentIndex = li.getAttribute('data-uid');\n    var mapper = this.fields;\n    if (this.dataType === 1 && this.autoCheck) {\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.parentID, 'equal', parentIndex, true));\n      for (var i = 0; i < resultData.length; i++) {\n        var resultId = resultData[parseInt(i.toString(), 10)][this.fields.id] ? resultData[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n        var isCheck = resultData[parseInt(i.toString(), 10)][this.fields.isChecked] ? resultData[parseInt(i.toString(), 10)][this.fields.isChecked].toString() : null;\n        if (this.checkedNodes.indexOf(parentIndex) !== -1 && this.checkedNodes.indexOf(resultId) === -1) {\n          this.checkedNodes.push(resultId);\n          var childItems = this.getChildNodes(this.treeData, resultId);\n          this.getChildItems(childItems, doCheck);\n          if (this.parentNodeCheck.indexOf(resultId) !== -1) {\n            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\n          }\n        } else if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null && this.checkedNodes.indexOf(resultId) !== -1) {\n          this.checkedNodes.splice(this.checkedNodes.indexOf(resultId), 1);\n          if (isCheck === 'true') {\n            this.updateField(this.treeData, this.fields, resultId, 'isChecked', null);\n          }\n          if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null || this.parentNodeCheck.indexOf(resultId) !== -1) {\n            var childNodes = this.getChildNodes(this.treeData, resultId);\n            this.getChildItems(childNodes, doCheck);\n            if (this.parentNodeCheck.indexOf(resultId) !== -1) {\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\n            }\n          }\n        } else {\n          var childItems = this.getChildNodes(this.treeData, resultId);\n          this.getChildItems(childItems, doCheck);\n        }\n      }\n    } else if (this.dataType === 1 && !this.autoCheck) {\n      if (!doCheck) {\n        var checkedData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\n        for (var i = 0; i < checkedData.length; i++) {\n          var id = checkedData[parseInt(i.toString(), 10)][this.fields.id] ? checkedData[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n          if (this.checkedNodes.indexOf(id) !== -1) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\n          }\n          this.updateField(this.treeData, this.fields, id, 'isChecked', null);\n        }\n        this.checkedNodes = [];\n      } else {\n        for (var i = 0; i < this.treeData.length; i++) {\n          var checkedId = this.treeData[parseInt(i.toString(), 10)][this.fields.id] ? this.treeData[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n          if (this.checkedNodes.indexOf(checkedId) === -1) {\n            this.checkedNodes.push(checkedId);\n          }\n        }\n      }\n    } else {\n      var childItems = this.getChildNodes(this.treeData, parentIndex);\n      if (childItems) {\n        this.childStateChange(childItems, parentIndex, childElement, doCheck);\n      }\n    }\n  };\n  TreeView.prototype.getChildItems = function (childItems, doCheck) {\n    for (var i = 0; i < childItems.length; i++) {\n      var childId = childItems[parseInt(i.toString(), 10)][this.fields.id] ? childItems[parseInt(i.toString(), 10)][this.fields.id].toString() : null;\n      var childIsCheck = childItems[parseInt(i.toString(), 10)][this.fields.isChecked] ? childItems[parseInt(i.toString(), 10)][this.fields.isChecked].toString() : null;\n      if (this.checkedNodes.indexOf(childId) !== -1 && !doCheck) {\n        this.checkedNodes.splice(this.checkedNodes.indexOf(childId), 1);\n      }\n      if (this.checkedNodes.indexOf(childId) === -1 && doCheck) {\n        this.checkedNodes.push(childId);\n      }\n      if (childIsCheck === 'true' && !doCheck) {\n        this.updateField(this.treeData, this.fields, childId, 'isChecked', null);\n      }\n      var subChildItems = this.getChildNodes(this.treeData, childId);\n      if (subChildItems.length > 0) {\n        this.getChildItems(subChildItems, doCheck);\n      }\n    }\n  };\n  /**\r\n   * Update checkedNodes when UI interaction happens before the child node renders in DOM for hierarchical DS\r\n   *\r\n   * @param {Object[]} childItems - Array of child items\r\n   * @param {string} parent - Parent identifier\r\n   * @param {Element} childElement - Child DOM element\r\n   * @param {boolean} [doCheck] - Optional parameter to specify whether to perform a check\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.childStateChange = function (childItems, parent, childElement, doCheck) {\n    for (var i = 0; i < childItems.length; i++) {\n      var checkedChild = childItems[parseInt(i.toString(), 10)][this.fields.id] ? childItems[parseInt(i.toString(), 10)][this.fields.id].toString() : '';\n      var isCheck = childItems[parseInt(i.toString(), 10)][this.fields.isChecked] ? childItems[parseInt(i.toString(), 10)][this.fields.isChecked].toString() : null;\n      if (this.autoCheck) {\n        if (this.checkedNodes.indexOf(parent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\n          this.checkedNodes.push(checkedChild);\n          if (this.parentNodeCheck.indexOf(checkedChild) !== -1) {\n            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(checkedChild), 1);\n          }\n        } else if (this.checkedNodes.indexOf(parent) === -1 && this.checkedNodes.indexOf(checkedChild) !== -1 && !doCheck) {\n          this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\n          if (isCheck === 'true') {\n            this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\n          }\n        }\n      } else if (!this.autoCheck) {\n        if (!doCheck) {\n          if (this.checkedNodes.indexOf(checkedChild) !== -1) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\n          }\n          this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\n          this.checkedNodes = [];\n        } else {\n          if (this.checkedNodes.indexOf(checkedChild) === -1) {\n            this.checkedNodes.push(checkedChild);\n          }\n        }\n      }\n      var subChild = this.getChildNodes([childItems[parseInt(i.toString(), 10)]], checkedChild);\n      if (subChild) {\n        this.childStateChange(subChild, parent, childElement, doCheck);\n      }\n    }\n  };\n  //This method can be used to get all child nodes of a parent by passing the children of a parent along with 'validateCheck' set to false\n  TreeView.prototype.allCheckNode = function (child, newCheck, checked, childCheck, validateCheck) {\n    if (child) {\n      for (var length_1 = 0; length_1 < child.length; length_1++) {\n        var childId = getValue(this.fields.id, child[parseInt(length_1.toString(), 10)]);\n        var check = this.element.querySelector('[data-uid=\"' + childId + '\"]');\n        //Validates isChecked case while no UI interaction has been performed on the node or it's parent\n        if (validateCheck !== false && this.checkedElement.indexOf(childId.toString()) === -1) {\n          if (check === null && !isNOU(child[parseInt(length_1.toString(), 10)][this.fields.isChecked]) && newCheck.indexOf(childId.toString()) === -1 || childCheck === 0 || checked === 2) {\n            if (child[parseInt(length_1.toString(), 10)][this.fields.isChecked] !== false || checked === 2) {\n              newCheck.push(childId.toString());\n            } else {\n              childCheck = null;\n            }\n            childCheck = child[parseInt(length_1.toString(), 10)][this.fields.isChecked] !== false || checked === 2 ? 0 : null;\n          }\n        }\n        //Pushes child checked node done thro' UI interaction\n        if (newCheck.indexOf(childId.toString()) === -1 && isNOU(checked)) {\n          newCheck.push(childId.toString());\n        }\n        var hierChildId = getValue(this.fields.child.toString(), child[parseInt(length_1.toString(), 10)]);\n        //Gets if any next level children are available for child nodes\n        if (getValue(this.fields.hasChildren, child[parseInt(length_1.toString(), 10)]) === true || hierChildId) {\n          var id = getValue(this.fields.id, child[parseInt(length_1.toString(), 10)]);\n          var childId_1 = void 0;\n          if (this.dataType === 1) {\n            childId_1 = this.getChildNodes(this.treeData, id.toString());\n          } else {\n            childId_1 = hierChildId;\n          }\n          if (childId_1) {\n            if (isNOU(validateCheck)) {\n              this.allCheckNode(childId_1, newCheck, checked, childCheck);\n            } else {\n              this.allCheckNode(childId_1, newCheck, checked, childCheck, validateCheck);\n            }\n            childCheck = null;\n          }\n        }\n        childCheck = null;\n      }\n    }\n  };\n  TreeView.prototype.openNode = function (toBeOpened, e) {\n    var focusedNode = this.getFocusedNode();\n    var icon = select('div.' + ICON, focusedNode);\n    if (toBeOpened) {\n      if (!icon) {\n        return;\n      } else if (icon.classList.contains(EXPANDABLE)) {\n        this.expandAction(focusedNode, icon, e);\n      } else {\n        this.focusNextNode(focusedNode, true);\n      }\n    } else {\n      if (icon && icon.classList.contains(COLLAPSIBLE)) {\n        this.collapseNode(focusedNode, icon, e);\n      } else {\n        var parentLi = closest(closest(focusedNode, '.' + PARENTITEM), '.' + LISTITEM);\n        if (!parentLi) {\n          return;\n        } else {\n          if (!parentLi.classList.contains('e-disable')) {\n            this.setFocus(focusedNode, parentLi);\n            this.navigateToFocus(true);\n          }\n        }\n      }\n    }\n  };\n  TreeView.prototype.navigateNode = function (isTowards) {\n    var focusedNode = this.getFocusedNode();\n    this.focusNextNode(focusedNode, isTowards);\n  };\n  TreeView.prototype.navigateRootNode = function (isBackwards) {\n    var focusedNode = this.getFocusedNode();\n    var rootNode = isBackwards ? this.getRootNode() : this.getEndNode();\n    if (!rootNode.classList.contains('e-disable')) {\n      this.setFocus(focusedNode, rootNode);\n      this.navigateToFocus(isBackwards);\n    }\n  };\n  TreeView.prototype.getFocusedNode = function () {\n    var selectedItem;\n    var fNode = select('.' + LISTITEM + '[tabindex=\"0\"]', this.element);\n    if (isNOU(fNode)) {\n      selectedItem = select('.' + LISTITEM, this.element);\n    }\n    return isNOU(fNode) ? isNOU(selectedItem) ? this.element.firstElementChild : selectedItem : fNode;\n  };\n  TreeView.prototype.focusNextNode = function (li, isTowards) {\n    var nextNode = isTowards ? this.getNextNode(li) : this.getPrevNode(li);\n    this.setFocus(li, nextNode);\n    this.navigateToFocus(!isTowards);\n    if (nextNode.classList.contains('e-disable') || nextNode.classList.contains('e-prevent')) {\n      var lastChild = nextNode.lastChild;\n      if (nextNode.previousSibling == null && nextNode.classList.contains('e-level-1')) {\n        this.focusNextNode(nextNode, true);\n      } else if (nextNode.nextSibling == null && nextNode.classList.contains('e-node-collapsed')) {\n        this.focusNextNode(nextNode, false);\n      } else if (nextNode.nextSibling == null && lastChild.classList.contains(TEXTWRAP)) {\n        this.focusNextNode(nextNode, false);\n      } else {\n        this.focusNextNode(nextNode, isTowards);\n      }\n    }\n  };\n  TreeView.prototype.getNextNode = function (li) {\n    var index = this.liList.indexOf(li);\n    var nextNode;\n    do {\n      index++;\n      nextNode = this.liList[parseInt(index.toString(), 10)];\n      if (isNOU(nextNode)) {\n        return li;\n      }\n    } while (!isVisible(nextNode));\n    return nextNode;\n  };\n  TreeView.prototype.getPrevNode = function (li) {\n    var index = this.liList.indexOf(li);\n    var prevNode;\n    do {\n      index--;\n      prevNode = this.liList[parseInt(index.toString(), 10)];\n      if (isNOU(prevNode)) {\n        return li;\n      }\n    } while (!isVisible(prevNode));\n    return prevNode;\n  };\n  TreeView.prototype.getRootNode = function () {\n    var index = 0;\n    var rootNode;\n    do {\n      rootNode = this.liList[parseInt(index.toString(), 10)];\n      index++;\n    } while (!isVisible(rootNode));\n    return rootNode;\n  };\n  TreeView.prototype.getEndNode = function () {\n    var index = this.liList.length - 1;\n    var endNode;\n    do {\n      endNode = this.liList[parseInt(index.toString(), 10)];\n      index--;\n    } while (!isVisible(endNode));\n    return endNode;\n  };\n  TreeView.prototype.setFocus = function (preNode, nextNode) {\n    removeClass([preNode], FOCUS);\n    preNode.setAttribute('tabindex', '-1');\n    if (!nextNode.classList.contains('e-disable') && !nextNode.classList.contains(PREVENTSELECT)) {\n      addClass([nextNode], FOCUS);\n      nextNode.setAttribute('tabindex', '0');\n      nextNode.focus();\n      EventHandler.add(nextNode, 'blur', this.focusOut, this);\n      this.updateIdAttr(preNode, nextNode);\n    }\n  };\n  TreeView.prototype.updateIdAttr = function (preNode, nextNode) {\n    this.element.removeAttribute('aria-activedescendant');\n    if (preNode) {\n      preNode.removeAttribute('id');\n    }\n    nextNode.setAttribute('id', this.element.id + '_active');\n    this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\n  };\n  TreeView.prototype.focusIn = function () {\n    if (!this.mouseDownStatus) {\n      var focusedElement = this.getFocusedNode();\n      if (focusedElement.classList.contains('e-disable') || focusedElement.classList.contains('e-prevent')) {\n        focusedElement.setAttribute('tabindex', '-1');\n        this.navigateNode(true);\n      } else {\n        focusedElement.setAttribute('tabindex', '0');\n        addClass([focusedElement], FOCUS);\n        EventHandler.add(focusedElement, 'blur', this.focusOut, this);\n      }\n      this.mouseDownStatus = false;\n    }\n  };\n  TreeView.prototype.focusOut = function (event) {\n    var focusedElement = this.getFocusedNode();\n    if (event.target === focusedElement) {\n      removeClass([focusedElement], FOCUS);\n      EventHandler.remove(focusedElement, 'blur', this.focusOut);\n    }\n  };\n  TreeView.prototype.onMouseOver = function (e) {\n    if (Browser.isDevice) {\n      return;\n    }\n    var target = e.target;\n    var classList = target.classList;\n    var currentLi = closest(target, '.' + LISTITEM);\n    if (!currentLi || classList.contains(PARENTITEM) || classList.contains(LISTITEM)) {\n      this.removeHover();\n      return;\n    } else {\n      if (currentLi && !currentLi.classList.contains('e-disable')) {\n        this.setHover(currentLi);\n      }\n    }\n  };\n  TreeView.prototype.setHover = function (li) {\n    if (!li.classList.contains(HOVER) && !li.classList.contains(PREVENTSELECT)) {\n      this.removeHover();\n      addClass([li], HOVER);\n    }\n  };\n  TreeView.prototype.onMouseLeave = function () {\n    this.removeHover();\n  };\n  TreeView.prototype.removeHover = function () {\n    var hoveredNode = selectAll('.' + HOVER, this.element);\n    if (hoveredNode && hoveredNode.length) {\n      removeClass(hoveredNode, HOVER);\n    }\n  };\n  TreeView.prototype.getNodeData = function (currLi, fromDS) {\n    if (!isNOU(currLi) && currLi.classList.contains(LISTITEM) && !isNOU(closest(currLi, '.' + CONTROL)) && closest(currLi, '.' + CONTROL).classList.contains(ROOT)) {\n      var id = currLi.getAttribute('data-uid');\n      var text = this.getText(currLi, fromDS);\n      var pNode = closest(currLi.parentNode, '.' + LISTITEM);\n      var pid = pNode ? pNode.getAttribute('data-uid') : null;\n      var selected = currLi.classList.contains(ACTIVE);\n      var selectable = currLi.classList.contains(PREVENTSELECT) ? false : true;\n      var expanded = currLi.getAttribute('aria-expanded') === 'true' ? true : false;\n      var hasChildren = currLi.getAttribute('aria-expanded') !== null ? true : (select('.' + EXPANDABLE, currLi) || select('.' + COLLAPSIBLE, currLi)) != null ? true : false;\n      var checked = null;\n      var checkboxElement = select('.' + CHECKBOXWRAP, currLi);\n      if (this.showCheckBox && checkboxElement) {\n        checked = currLi.getAttribute('aria-checked');\n      }\n      return {\n        id: id,\n        text: text,\n        parentID: pid,\n        selected: selected,\n        selectable: selectable,\n        expanded: expanded,\n        isChecked: checked,\n        hasChildren: hasChildren\n      };\n    }\n    return {\n      id: '',\n      text: '',\n      parentID: '',\n      selected: false,\n      expanded: false,\n      isChecked: '',\n      hasChildren: false\n    };\n  };\n  TreeView.prototype.getText = function (currLi, fromDS) {\n    if (fromDS) {\n      var nodeData = this.getNodeObject(currLi.getAttribute('data-uid'));\n      var level = parseFloat(currLi.getAttribute('aria-level'));\n      var nodeFields = this.getFields(this.fields, level, 1);\n      return getValue(nodeFields.text, nodeData);\n    }\n    return select('.' + LISTTEXT, currLi).textContent;\n  };\n  TreeView.prototype.getExpandEvent = function (currLi, e) {\n    var nodeData = this.getNodeData(currLi);\n    return {\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      nodeData: nodeData,\n      event: e\n    };\n  };\n  TreeView.prototype.renderNodeTemplate = function (data, textEle, dataId) {\n    var tempArr = this.nodeTemplateFn(data, this, 'nodeTemplate' + dataId, this.element.id + 'nodeTemplate', this.isStringTemplate, undefined, textEle, this.root);\n    if (tempArr) {\n      tempArr = Array.prototype.slice.call(tempArr);\n      append(tempArr, textEle);\n    }\n  };\n  TreeView.prototype.destroyTemplate = function (liEle) {\n    this.clearTemplate(['nodeTemplate' + liEle.getAttribute('data-uid')]);\n  };\n  TreeView.prototype.reRenderNodes = function () {\n    this.updateListProp(this.fields);\n    if (Browser.isIE) {\n      this.ulElement = this.element.querySelector('.e-list-parent.e-ul');\n      this.ulElement.parentElement.removeChild(this.ulElement);\n    } else {\n      this.element.innerHTML = '';\n    }\n    if (!isNOU(this.nodeTemplateFn)) {\n      this.clearTemplate();\n    }\n    this.setTouchClass();\n    this.setProperties({\n      selectedNodes: [],\n      checkedNodes: [],\n      expandedNodes: []\n    }, true);\n    this.checkedElement = [];\n    this.isLoaded = false;\n    this.setDataBinding(true);\n  };\n  TreeView.prototype.setCssClass = function (oldClass, newClass) {\n    if (!isNOU(oldClass) && oldClass !== '') {\n      removeClass([this.element], oldClass.split(' '));\n    }\n    if (!isNOU(newClass) && newClass !== '') {\n      addClass([this.element], newClass.split(' '));\n    }\n  };\n  TreeView.prototype.editingHandler = function (e) {\n    var target = e.target;\n    if (!target || target.classList.contains(ROOT) || target.classList.contains(PARENTITEM) || target.classList.contains(LISTITEM) || target.classList.contains(ICON) || target.classList.contains(INPUT) || target.classList.contains(INPUTGROUP)) {\n      return;\n    } else {\n      var liEle = closest(target, '.' + LISTITEM);\n      this.createTextbox(liEle);\n    }\n  };\n  TreeView.prototype.createTextbox = function (liEle) {\n    var _this = this;\n    var oldInpEle = select('.' + TREEINPUT, this.element);\n    if (oldInpEle) {\n      oldInpEle.blur();\n    }\n    var textEle = select('.' + LISTTEXT, liEle);\n    this.updateOldText(liEle);\n    var innerEle = this.createElement('input', {\n      className: TREEINPUT,\n      attrs: {\n        value: this.oldText\n      }\n    });\n    var eventArgs = this.getEditEvent(liEle, null, innerEle.outerHTML);\n    this.trigger('nodeEditing', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        var inpWidth = textEle.offsetWidth + 5;\n        var style_1 = 'width:' + inpWidth + 'px';\n        addClass([liEle], EDITING);\n        if (!isNOU(_this.nodeTemplateFn)) {\n          _this.destroyTemplate(liEle);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (_this.isReact) {\n          setTimeout(function () {\n            _this.renderTextBox(eventArgs, textEle, style_1);\n          }, 5);\n        } else {\n          _this.renderTextBox(eventArgs, textEle, style_1);\n        }\n      }\n    });\n  };\n  TreeView.prototype.renderTextBox = function (eventArgs, textEle, style) {\n    textEle.innerHTML = eventArgs.innerHtml;\n    var inpEle = select('.' + TREEINPUT, textEle);\n    this.inputObj = Input.createInput({\n      element: inpEle,\n      properties: {\n        enableRtl: this.enableRtl\n      }\n    }, this.createElement);\n    this.inputObj.container.setAttribute('style', style);\n    inpEle.focus();\n    var inputEle = inpEle;\n    inputEle.setSelectionRange(0, inputEle.value.length);\n    this.wireInputEvents(inpEle);\n  };\n  TreeView.prototype.updateOldText = function (liEle) {\n    var id = liEle.getAttribute('data-uid');\n    this.editData = this.getNodeObject(id);\n    var level = parseFloat(liEle.getAttribute('aria-level'));\n    this.editFields = this.getFields(this.fields, level, 1);\n    this.oldText = getValue(this.editFields.text, this.editData);\n  };\n  TreeView.prototype.inputFocusOut = function (e) {\n    if (!select('.' + TREEINPUT, this.element)) {\n      return;\n    }\n    var target = e.target;\n    var newText = target.value;\n    var txtEle = closest(target, '.' + LISTTEXT);\n    var liEle = closest(target, '.' + LISTITEM);\n    detach(this.inputObj.container);\n    Input.destroy({\n      element: target,\n      properties: this.properties\n    });\n    if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n      this.crudOperation('update', null, liEle, newText, null, null, true);\n    } else {\n      this.appendNewText(liEle, txtEle, newText, true);\n    }\n    EventHandler.remove(target, 'blur', this.inputFocusOut);\n  };\n  TreeView.prototype.appendNewText = function (liEle, txtEle, newText, isInput) {\n    var _this = this;\n    var eventArgs = this.getEditEvent(liEle, newText, null);\n    this.trigger('nodeEdited', eventArgs, function (observedArgs) {\n      newText = observedArgs.cancel ? observedArgs.oldText : observedArgs.newText;\n      _this.updateText(liEle, txtEle, newText, isInput);\n      if (observedArgs.oldText !== newText) {\n        _this.triggerEvent('nodeEdited', [_this.getNode(liEle)]);\n      }\n    });\n  };\n  TreeView.prototype.updateText = function (liEle, txtEle, newText, isInput) {\n    var newData = setValue(this.editFields.text, newText, this.editData);\n    if (!isNOU(this.nodeTemplateFn)) {\n      txtEle.innerText = '';\n      var dataId = liEle.getAttribute('data-uid');\n      this.renderNodeTemplate(newData, txtEle, dataId);\n      this.renderReactTemplates();\n    } else {\n      if (this.enableHtmlSanitizer) {\n        txtEle.innerText = SanitizeHtmlHelper.sanitize(newText);\n      } else {\n        txtEle.innerHTML = newText;\n      }\n    }\n    if (isInput) {\n      removeClass([liEle], EDITING);\n      liEle.focus();\n      EventHandler.add(liEle, 'blur', this.focusOut, this);\n      addClass([liEle], FOCUS);\n    }\n    if (this.allowTextWrap) {\n      this.calculateWrap(liEle);\n    }\n  };\n  TreeView.prototype.getElement = function (ele) {\n    if (isNOU(ele)) {\n      return null;\n    } else if (typeof ele === 'string') {\n      return this.element.querySelector('[data-uid=\"' + ele + '\"]');\n    } else if (typeof ele === 'object') {\n      return getElement(ele);\n    } else {\n      return null;\n    }\n  };\n  TreeView.prototype.getId = function (ele) {\n    if (isNOU(ele)) {\n      return null;\n    } else if (typeof ele === 'string') {\n      return ele;\n    } else if (typeof ele === 'object') {\n      return getElement(ele).getAttribute('data-uid');\n    } else {\n      return null;\n    }\n  };\n  TreeView.prototype.getEditEvent = function (liEle, newText, inpEle) {\n    var data = this.getNodeData(liEle);\n    return {\n      cancel: false,\n      newText: newText,\n      node: liEle,\n      nodeData: data,\n      oldText: this.oldText,\n      innerHtml: inpEle\n    };\n  };\n  TreeView.prototype.getNodeObject = function (id) {\n    var childNodes;\n    if (isNOU(id)) {\n      return childNodes;\n    } else if (this.dataType === 1) {\n      for (var i = 0, objlen = this.treeData.length; i < objlen; i++) {\n        var dataId = getValue(this.fields.id, this.treeData[parseInt(i.toString(), 10)]);\n        if (!isNOU(this.treeData[parseInt(i.toString(), 10)]) && !isNOU(dataId) && dataId.toString() === id) {\n          return this.treeData[parseInt(i.toString(), 10)];\n        }\n      }\n    } else {\n      return this.getChildNodeObject(this.treeData, this.fields, id);\n    }\n    return childNodes;\n  };\n  TreeView.prototype.getChildNodeObject = function (obj, mapper, id) {\n    var newList;\n    if (isNOU(obj)) {\n      return newList;\n    }\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var dataId = getValue(mapper.id, obj[parseInt(i.toString(), 10)]);\n      if (obj[parseInt(i.toString(), 10)] && dataId && dataId.toString() === id) {\n        return obj[parseInt(i.toString(), 10)];\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\n        var childData = getValue(mapper.child, obj[parseInt(i.toString(), 10)]);\n        newList = this.getChildNodeObject(childData, this.getChildMapper(mapper), id);\n        if (newList !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\n        var child = 'child';\n        newList = this.getChildNodeObject(getValue(child, obj[parseInt(i.toString(), 10)]), this.getChildMapper(mapper), id);\n        if (newList !== undefined) {\n          break;\n        }\n      } else if (this.isChildObject()) {\n        var children = 'child';\n        var childData = getValue(children, obj[parseInt(i.toString(), 10)]);\n        newList = this.getChildNodeObject(childData, this.getChildMapper(mapper), id);\n        if (newList !== undefined) {\n          break;\n        }\n      }\n    }\n    return newList;\n  };\n  TreeView.prototype.setDragAndDrop = function (toBind) {\n    if (toBind && !this.disabled) {\n      this.initializeDrag();\n    } else {\n      this.destroyDrag();\n    }\n  };\n  TreeView.prototype.initializeDrag = function () {\n    var _this = this;\n    var virtualEle;\n    this.dragObj = new Draggable(this.element, {\n      enableTailMode: true,\n      enableAutoScroll: true,\n      dragArea: this.dragArea,\n      dragTarget: '.' + TEXTWRAP,\n      enableTapHold: true,\n      tapHoldThreshold: 100,\n      helper: function (e) {\n        _this.dragTarget = e.sender.target;\n        var dragRoot = closest(_this.dragTarget, '.' + ROOT);\n        var dragWrap = closest(_this.dragTarget, '.' + TEXTWRAP);\n        _this.dragLi = closest(_this.dragTarget, '.' + LISTITEM);\n        if (_this.fullRowSelect && !dragWrap && _this.dragTarget.classList.contains(FULLROW)) {\n          dragWrap = _this.dragTarget.nextElementSibling;\n        }\n        if (!_this.dragTarget || !e.element.isSameNode(dragRoot) || !dragWrap || _this.dragTarget.classList.contains(ROOT) || _this.dragTarget.classList.contains(PARENTITEM) || _this.dragTarget.classList.contains(LISTITEM) || _this.dragLi.classList.contains('e-disable')) {\n          return false;\n        }\n        var cloneEle = dragWrap.cloneNode(true);\n        if (isNOU(select('div.' + ICON, cloneEle))) {\n          var icon = _this.createElement('div', {\n            className: ICON + ' ' + EXPANDABLE\n          });\n          cloneEle.insertBefore(icon, cloneEle.children[0]);\n        }\n        var cssClass = DRAGITEM + ' ' + ROOT + ' ' + _this.cssClass + ' ' + (_this.enableRtl ? RTL : '');\n        virtualEle = _this.createElement('div', {\n          className: cssClass\n        });\n        virtualEle.appendChild(cloneEle);\n        var nLen = _this.selectedNodes.length;\n        if (nLen > 1 && _this.allowMultiSelection && _this.dragLi.classList.contains(ACTIVE)) {\n          var cNode = _this.createElement('span', {\n            className: DROPCOUNT,\n            innerHTML: '' + nLen\n          });\n          virtualEle.appendChild(cNode);\n        }\n        document.body.appendChild(virtualEle);\n        document.body.style.cursor = '';\n        _this.dragData = _this.getNodeData(_this.dragLi);\n        return virtualEle;\n      },\n      dragStart: function (e) {\n        addClass([_this.element], DRAGGING);\n        var listItem = closest(e.target, '.e-list-item');\n        var level;\n        if (listItem) {\n          level = parseInt(listItem.getAttribute('aria-level'), 10);\n        }\n        var eventArgs = _this.getDragEvent(e.event, _this, null, e.target, null, virtualEle, level);\n        if (eventArgs.draggedNode.classList.contains(EDITING)) {\n          _this.dragObj.intDestroy(e.event);\n          _this.dragCancelAction(virtualEle);\n        } else {\n          _this.trigger('nodeDragStart', eventArgs, function (observedArgs) {\n            if (observedArgs.cancel) {\n              _this.dragObj.intDestroy(e.event);\n              _this.dragCancelAction(virtualEle);\n            } else {\n              _this.dragStartAction = true;\n            }\n          });\n        }\n      },\n      drag: function (e) {\n        _this.dragObj.setProperties({\n          cursorAt: {\n            top: !isNOU(e.event.targetTouches) || Browser.isDevice ? 60 : -20\n          }\n        });\n        _this.dragAction(e, virtualEle);\n      },\n      dragStop: function (e) {\n        removeClass([_this.element], DRAGGING);\n        if (!e.target.classList.contains('e-sibling')) {\n          _this.removeVirtualEle();\n        }\n        var dropTarget = e.target;\n        var preventTargetExpand = false;\n        var dropRoot = closest(dropTarget, '.' + DROPPABLE);\n        // eslint-disable-next-line\n        var isHelperElement = true;\n        if (!dropTarget || !dropRoot) {\n          detach(e.helper);\n          document.body.style.cursor = '';\n        }\n        var listItem = closest(dropTarget, '.e-list-item');\n        var level;\n        if (listItem) {\n          level = parseInt(listItem.getAttribute('aria-level'), 10);\n        }\n        var eventArgs = _this.getDragEvent(e.event, _this, dropTarget, dropTarget, null, e.helper, level);\n        eventArgs.preventTargetExpand = preventTargetExpand;\n        _this.trigger('nodeDragStop', eventArgs, function (observedArgs) {\n          _this.dragParent = observedArgs.draggedParentNode;\n          _this.preventExpand = observedArgs.preventTargetExpand;\n          if (observedArgs.cancel) {\n            if (e.helper.parentNode) {\n              detach(e.helper);\n            }\n            document.body.style.cursor = '';\n            isHelperElement = false;\n            if (dropTarget.classList.contains('e-sibling')) {\n              _this.removeVirtualEle();\n            }\n          }\n          _this.dragStartAction = false;\n        });\n      }\n    });\n    this.dropObj = new Droppable(this.element, {\n      out: function (e) {\n        if (!isNOU(e) && !e.target.classList.contains(SIBLING) && _this.dropObj.dragData.default && _this.dropObj.dragData.default.helper.classList.contains(ROOT)) {\n          document.body.style.cursor = 'not-allowed';\n        }\n      },\n      over: function () {\n        document.body.style.cursor = '';\n      },\n      drop: function (e) {\n        _this.dropAction(e);\n        _this.removeVirtualEle();\n      }\n    });\n  };\n  TreeView.prototype.dragCancelAction = function (virtualEle) {\n    detach(virtualEle);\n    removeClass([this.element], DRAGGING);\n    this.dragStartAction = false;\n  };\n  TreeView.prototype.dragAction = function (e, virtualEle) {\n    var dropRoot = closest(e.target, '.' + DROPPABLE);\n    var dropWrap = closest(e.target, '.' + TEXTWRAP);\n    var icon = select('div.' + ICON, virtualEle);\n    removeClass([icon], [DROPIN, DROPNEXT, DROPOUT, NODROP]);\n    this.isDropIn = false;\n    this.removeVirtualEle();\n    document.body.style.cursor = '';\n    var classList = e.target.classList;\n    if (this.fullRowSelect && !dropWrap && !isNOU(classList) && classList.contains(FULLROW)) {\n      dropWrap = e.target.nextElementSibling;\n    }\n    if (dropRoot) {\n      var dropLi = closest(e.target, '.' + LISTITEM);\n      var checkWrapper = closest(e.target, '.' + CHECKBOXWRAP);\n      var collapse = closest(e.target, '.' + COLLAPSIBLE);\n      var expand = closest(e.target, '.' + EXPANDABLE);\n      if (!dropRoot.classList.contains(ROOT) || dropWrap && !dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi)) {\n        if (this.hasTemplate && dropLi) {\n          var templateTarget = select(this.fullRowSelect ? '.' + FULLROW : '.' + TEXTWRAP, dropLi);\n          if (e && !expand && !collapse && e.event.offsetY < 7 && !checkWrapper || expand && e.event.offsetY < 5 || collapse && e.event.offsetX < 3) {\n            var index = this.fullRowSelect ? 1 : 0;\n            this.appendIndicator(dropLi, icon, index);\n          } else if (e && !expand && !collapse && !checkWrapper && templateTarget && e.event.offsetY > templateTarget.offsetHeight - 10 || expand && e.event.offsetY > 19 || collapse && e.event.offsetX > 19) {\n            var index = this.fullRowSelect ? 2 : 1;\n            this.appendIndicator(dropLi, icon, index);\n          } else {\n            addClass([icon], DROPIN);\n            this.isDropIn = true;\n          }\n        } else {\n          if (dropLi && e && !expand && !collapse && e.event.offsetY < 7 && !checkWrapper || expand && e.event.offsetY < 5 || collapse && e.event.offsetX < 3) {\n            var index = this.fullRowSelect ? 1 : 0;\n            this.appendIndicator(dropLi, icon, index);\n          } else if (dropLi && e && !expand && !collapse && e.target.offsetHeight > 0 && e.event.offsetY > e.target.offsetHeight - 10 && !checkWrapper || expand && e.event.offsetY > 19 || collapse && e.event.offsetX > 19) {\n            var index = this.fullRowSelect ? 2 : 1;\n            this.appendIndicator(dropLi, icon, index);\n          } else {\n            addClass([icon], DROPIN);\n            this.isDropIn = true;\n          }\n        }\n      } else if (e.target.nodeName === 'LI' && !dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi)) {\n        addClass([icon], DROPNEXT);\n        this.renderVirtualEle(e);\n      } else if (e.target.classList.contains(SIBLING)) {\n        addClass([icon], DROPNEXT);\n      } else {\n        addClass([icon], DROPOUT);\n      }\n    } else {\n      addClass([icon], NODROP);\n      document.body.style.cursor = 'not-allowed';\n    }\n    var listItem = closest(e.target, '.e-list-item');\n    var level;\n    if (listItem) {\n      level = parseInt(listItem.getAttribute('aria-level'), 10);\n    }\n    var eventArgs = this.getDragEvent(e.event, this, e.target, e.target, null, virtualEle, level);\n    if (eventArgs.dropIndicator) {\n      removeClass([icon], eventArgs.dropIndicator);\n    }\n    this.trigger('nodeDragging', eventArgs);\n    if (eventArgs.dropIndicator) {\n      addClass([icon], eventArgs.dropIndicator);\n    }\n  };\n  TreeView.prototype.appendIndicator = function (dropLi, icon, index) {\n    addClass([icon], DROPNEXT);\n    var virEle = this.createElement('div', {\n      className: SIBLING\n    });\n    dropLi.insertBefore(virEle, dropLi.children[parseInt(index.toString(), 10)]);\n  };\n  TreeView.prototype.dropAction = function (e) {\n    var offsetY = e.event.offsetY;\n    var dropTarget = e.target;\n    var dragObj;\n    var level;\n    var drop = false;\n    var nodeData = [];\n    var liArray = [];\n    var dragInstance = e.dragData.draggable;\n    for (var i = 0; i < dragInstance.ej2_instances.length; i++) {\n      if (dragInstance.ej2_instances[parseInt(i.toString(), 10)] instanceof TreeView_1) {\n        dragObj = dragInstance.ej2_instances[parseInt(i.toString(), 10)];\n        break;\n      }\n    }\n    if (dragObj && dragObj.dragTarget) {\n      var dragTarget = dragObj.dragTarget;\n      var dragLi = closest(dragTarget, '.' + LISTITEM);\n      var dropLi = closest(dropTarget, '.' + LISTITEM);\n      liArray.push(dragLi);\n      if (dropLi == null && dropTarget.classList.contains(ROOT)) {\n        dropLi = dropTarget.firstElementChild;\n      }\n      detach(e.droppedElement);\n      document.body.style.cursor = '';\n      if (!dropLi || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\n        if (this.fields.dataSource instanceof DataManager === false) {\n          this.preventExpand = false;\n        }\n        return;\n      }\n      if (dragObj.allowMultiSelection && dragLi.classList.contains(ACTIVE)) {\n        var sNodes = selectAll('.' + ACTIVE, dragObj.element);\n        liArray = sNodes;\n        if (e.target.offsetHeight <= 33 && offsetY > e.target.offsetHeight - 10 && offsetY > 6) {\n          for (var i = sNodes.length - 1; i >= 0; i--) {\n            if (dropLi.isSameNode(sNodes[parseInt(i.toString(), 10)]) || this.isDescendant(sNodes[parseInt(i.toString(), 10)], dropLi)) {\n              continue;\n            }\n            this.appendNode(dropTarget, sNodes[parseInt(i.toString(), 10)], dropLi, e, dragObj, offsetY);\n          }\n        } else {\n          for (var i = 0; i < sNodes.length; i++) {\n            if (dropLi.isSameNode(sNodes[parseInt(i.toString(), 10)]) || this.isDescendant(sNodes[parseInt(i.toString(), 10)], dropLi)) {\n              continue;\n            }\n            this.appendNode(dropTarget, sNodes[parseInt(i.toString(), 10)], dropLi, e, dragObj, offsetY);\n          }\n        }\n      } else {\n        this.appendNode(dropTarget, dragLi, dropLi, e, dragObj, offsetY);\n      }\n      level = parseInt(dragLi.getAttribute('aria-level'), 10);\n      drop = true;\n    }\n    if (this.fields.dataSource instanceof DataManager === false) {\n      this.preventExpand = false;\n    }\n    for (var i = 0; i < liArray.length; i++) {\n      nodeData.push(this.getNode(liArray[parseInt(i.toString(), 10)]));\n    }\n    this.trigger('nodeDropped', this.getDragEvent(e.event, dragObj, dropTarget, e.target, e.dragData.draggedElement, null, level, drop));\n    if (dragObj.element.id !== this.element.id) {\n      dragObj.triggerEvent('nodeDropped', nodeData);\n      this.isNodeDropped = true;\n      this.fields.dataSource = this.treeData;\n    }\n    this.triggerEvent('nodeDropped', nodeData);\n  };\n  TreeView.prototype.appendNode = function (dropTarget, dragLi, dropLi, e, dragObj, offsetY) {\n    var checkWrapper = closest(dropTarget, '.' + CHECKBOXWRAP);\n    var collapse = closest(e.target, '.' + COLLAPSIBLE);\n    var expand = closest(e.target, '.' + EXPANDABLE);\n    if (!dragLi.classList.contains('e-disable') && !checkWrapper && (expand && e.event.offsetY < 5 || collapse && e.event.offsetX < 3 || expand && e.event.offsetY > 19 || collapse && e.event.offsetX > 19 || !expand && !collapse)) {\n      if (dropTarget.nodeName === 'LI') {\n        this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n      } else if (dropTarget.firstElementChild && dropTarget.classList.contains(ROOT)) {\n        if (dropTarget.firstElementChild.nodeName === 'UL') {\n          this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n        }\n      } else if (dropTarget.classList.contains('e-icon-collapsible') || dropTarget.classList.contains('e-icon-expandable')) {\n        this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n      } else {\n        this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY, null, dropTarget);\n      }\n    } else {\n      this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY, true, dropTarget);\n    }\n    if (this.showCheckBox) {\n      this.ensureIndeterminate();\n    }\n  };\n  TreeView.prototype.dropAsSiblingNode = function (dragLi, dropLi, e, dragObj) {\n    var dropUl = closest(dropLi, '.' + PARENTITEM);\n    var dragParentUl = closest(dragLi, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n    var pre;\n    if (e.target.offsetHeight > 0 && e.event.offsetY > e.target.offsetHeight - 2) {\n      pre = false;\n    } else if (e.event.offsetY < 2) {\n      pre = true;\n    } else if (e.target.classList.contains('e-icon-expandable') || e.target.classList.contains('e-icon-collapsible')) {\n      if (e.event.offsetY < 5 || e.event.offsetX < 3) {\n        pre = true;\n      } else if (e.event.offsetY > 15 || e.event.offsetX > 17) {\n        pre = false;\n      }\n    }\n    if (e.target.classList.contains('e-icon-expandable') || e.target.classList.contains('e-icon-collapsible')) {\n      var target = e.target.closest('li');\n      dropUl.insertBefore(dragLi, pre ? target : target.nextElementSibling);\n    } else {\n      dropUl.insertBefore(dragLi, pre ? e.target : e.target.nextElementSibling);\n    }\n    this.moveData(dragLi, dropLi, dropUl, pre, dragObj);\n    this.updateElement(dragParentUl, dragParentLi);\n    this.updateAriaLevel(dragLi);\n    if (dragObj.element.id === this.element.id) {\n      this.updateList();\n    } else {\n      dragObj.updateInstance();\n      this.updateInstance();\n    }\n  };\n  TreeView.prototype.dropAsChildNode = function (dragLi, dropLi, dragObj, index, e, pos, isCheck, dropTarget) {\n    var dragParentUl = closest(dragLi, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n    var dropParentUl = closest(dropLi, '.' + PARENTITEM);\n    var templateTarget;\n    if (e && e.target) {\n      templateTarget = select(this.fullRowSelect ? '.' + FULLROW : '.' + TEXTWRAP, dropLi);\n    }\n    if (e && (pos < 7 && !dropTarget.classList.contains('e-sibling') || dropTarget.classList.contains('e-sibling') && !dropLi.lastChild.classList.contains('e-sibling')) && !isCheck) {\n      dropParentUl.insertBefore(dragLi, dropLi);\n      this.moveData(dragLi, dropLi, dropParentUl, true, dragObj);\n    } else if (e && e.target.offsetHeight > 0 && pos > e.target.offsetHeight - 10 && !isCheck && !this.hasTemplate) {\n      dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\n      this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\n    } else if (this.hasTemplate && templateTarget && pos > templateTarget.offsetHeight - 10 && !isCheck) {\n      dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\n      this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\n    } else {\n      var dropUl = this.expandParent(dropLi);\n      var childLi = !isNullOrUndefined(index) ? dropUl.childNodes[parseInt(index.toString(), 10)] : null;\n      dropUl.insertBefore(dragLi, childLi);\n      this.moveData(dragLi, childLi, dropUl, true, dragObj);\n    }\n    this.updateElement(dragParentUl, dragParentLi);\n    this.updateAriaLevel(dragLi);\n    if (dragObj.element.id === this.element.id) {\n      this.updateList();\n    } else {\n      dragObj.updateInstance();\n      this.updateInstance();\n    }\n  };\n  TreeView.prototype.moveData = function (dragLi, dropLi, dropUl, pre, dragObj) {\n    var dropParentLi = closest(dropUl, '.' + LISTITEM);\n    var id = this.getId(dragLi);\n    var removedData = dragObj.updateChildField(dragObj.treeData, dragObj.fields, id, null, null, true);\n    var refId = this.getId(dropLi);\n    var index = this.getDataPos(this.treeData, this.fields, refId);\n    var parentId = this.getId(dropParentLi);\n    if (this.dataType === 1) {\n      this.updateField(this.treeData, this.fields, parentId, 'hasChildren', true);\n      var pos = isNOU(index) ? this.treeData.length : pre ? index : index + 1;\n      if (isNOU(parentId) && !this.hasPid) {\n        delete removedData[0][this.fields.parentID];\n      } else {\n        var currPid = this.isNumberTypeId ? parseFloat(parentId) : parentId;\n        setValue(this.fields.parentID, currPid, removedData[0]);\n      }\n      this.treeData.splice(pos, 0, removedData[0]);\n      if (dragObj.element.id !== this.element.id) {\n        var childData = dragObj.removeChildNodes(id);\n        pos++;\n        for (var i = 0, len = childData.length; i < len; i++) {\n          this.treeData.splice(pos, 0, childData[parseInt(i.toString(), 10)]);\n          pos++;\n        }\n        dragObj.groupedData = dragObj.getGroupedData(dragObj.treeData, dragObj.fields.parentID);\n      }\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    } else {\n      this.addChildData(this.treeData, this.fields, parentId, removedData, pre ? index : index + 1);\n    }\n  };\n  TreeView.prototype.expandParent = function (dropLi) {\n    var dropIcon = select('div.' + ICON, dropLi);\n    if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && this.preventExpand !== true) {\n      this.expandAction(dropLi, dropIcon, null);\n    }\n    var dropUl = select('.' + PARENTITEM, dropLi);\n    if (this.preventExpand === true && !dropUl && dropIcon) {\n      this.renderChildNodes(dropLi);\n    }\n    dropUl = select('.' + PARENTITEM, dropLi);\n    if (!isNOU(dropUl) && this.preventExpand === true) {\n      dropUl.style.display = 'none';\n    }\n    if (!isNOU(dropUl) && this.preventExpand === false) {\n      dropUl.style.display = 'block';\n    }\n    if (isNOU(dropUl) && this.preventExpand === true) {\n      if (isNOU(dropIcon)) {\n        ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\n      }\n      var icon = select('div.' + ICON, dropLi);\n      if (icon) {\n        icon.classList.add('e-icon-expandable');\n      }\n      dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\n      dropLi.appendChild(dropUl);\n      if (icon) {\n        removeClass([icon], COLLAPSIBLE);\n      } else {\n        ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\n      }\n      dropLi.setAttribute('aria-expanded', 'false');\n      dropUl.style.display = 'none';\n    }\n    if (isNOU(dropUl)) {\n      var args = this.expandArgs;\n      if (isNOU(args) || args && args.name !== 'nodeExpanding') {\n        this.trigger('nodeExpanding', this.getExpandEvent(dropLi, null));\n      }\n      if (isNOU(dropIcon)) {\n        ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\n      }\n      var icon = select('div.' + ICON, dropLi);\n      if (icon) {\n        removeClass([icon], EXPANDABLE);\n      } else {\n        ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\n        icon = select('div.' + ICON, dropLi);\n        removeClass([icon], EXPANDABLE);\n      }\n      dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\n      dropLi.appendChild(dropUl);\n      this.addExpand(dropLi);\n      this.trigger('nodeExpanded', this.getExpandEvent(dropLi, null));\n    }\n    return dropUl;\n  };\n  TreeView.prototype.updateElement = function (dragParentUl, dragParentLi) {\n    if (dragParentLi && dragParentUl.childElementCount === 0) {\n      var dragIcon = select('div.' + ICON, dragParentLi);\n      detach(dragParentUl);\n      detach(dragIcon);\n      var parentId = this.getId(dragParentLi);\n      this.updateField(this.treeData, this.fields, parentId, 'hasChildren', false);\n      this.removeExpand(dragParentLi, true);\n    }\n  };\n  TreeView.prototype.updateAriaLevel = function (dragLi) {\n    var level = this.parents(dragLi, '.' + PARENTITEM).length;\n    dragLi.setAttribute('aria-level', '' + level);\n    this.updateChildAriaLevel(select('.' + PARENTITEM, dragLi), level + 1);\n  };\n  TreeView.prototype.updateChildAriaLevel = function (element, level) {\n    if (!isNOU(element)) {\n      var cNodes = element.childNodes;\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var liEle = cNodes[parseInt(i.toString(), 10)];\n        liEle.setAttribute('aria-level', '' + level);\n        this.updateChildAriaLevel(select('.' + PARENTITEM, liEle), level + 1);\n      }\n    }\n  };\n  TreeView.prototype.renderVirtualEle = function (e) {\n    var pre;\n    if (e.event.offsetY > e.target.offsetHeight - 2) {\n      pre = false;\n    } else if (e.event.offsetY < 2) {\n      pre = true;\n    }\n    var virEle = this.createElement('div', {\n      className: SIBLING\n    });\n    var index = this.fullRowSelect ? pre ? 1 : 2 : pre ? 0 : 1;\n    e.target.insertBefore(virEle, e.target.children[parseInt(index.toString(), 10)]);\n  };\n  TreeView.prototype.removeVirtualEle = function () {\n    var sibEle = select('.' + SIBLING);\n    if (sibEle) {\n      detach(sibEle);\n    }\n  };\n  TreeView.prototype.destroyDrag = function () {\n    if (this.dragObj && this.dropObj) {\n      this.dragObj.destroy();\n      this.dropObj.destroy();\n    }\n  };\n  TreeView.prototype.getDragEvent = function (event, obj, dropTarget, target, dragNode, cloneEle, level, drop) {\n    var dropLi = dropTarget ? closest(dropTarget, '.' + LISTITEM) : null;\n    var dropData = dropLi ? this.getNodeData(dropLi) : null;\n    var draggedNode = obj ? obj.dragLi : dragNode;\n    var draggedNodeData = obj ? obj.dragData : null;\n    var newParent = dropTarget ? this.parents(dropTarget, '.' + LISTITEM) : null;\n    var dragLiParent = obj.dragLi.parentElement;\n    var dragParent = obj.dragLi ? closest(dragLiParent, '.' + LISTITEM) : null;\n    var targetParent = null;\n    var indexValue = null;\n    var iconCss = [DROPNEXT, DROPIN, DROPOUT, NODROP];\n    var iconClass = null;\n    var node = drop === true ? draggedNode : dropLi;\n    var index = node ? closest(node, '.e-list-parent') : null;\n    var i = 0;\n    var position = null;\n    dragParent = obj.dragLi && dragParent === null ? closest(dragLiParent, '.' + ROOT) : dragParent;\n    dragParent = drop === true ? this.dragParent : dragParent;\n    if (cloneEle) {\n      while (i < 4) {\n        if (select('.' + ICON, cloneEle).classList.contains(iconCss[parseInt(i.toString(), 10)])) {\n          iconClass = iconCss[parseInt(i.toString(), 10)];\n          break;\n        }\n        i++;\n      }\n    }\n    if (index) {\n      var dropTar = 0;\n      for (i = 0; i < index.childElementCount; i++) {\n        dropTar = drop !== true && index.children[parseInt(i.toString(), 10)] === draggedNode && dropLi !== draggedNode ? ++dropTar : dropTar;\n        if (drop !== true && index.children[parseInt(i.toString(), 10)].classList.contains('e-hover')) {\n          indexValue = event.offsetY >= 23 ? i + 1 : i;\n          break;\n        } else if (index.children[parseInt(i.toString(), 10)] === node) {\n          indexValue = event.offsetY >= 23 ? i : i;\n          break;\n        }\n      }\n      indexValue = dropTar !== 0 ? --indexValue : indexValue;\n      position = this.isDropIn ? 'Inside' : event.offsetY < 7 ? 'Before' : 'After';\n    }\n    if (dropTarget) {\n      if (newParent.length === 0) {\n        targetParent = null;\n      } else if (dropTarget.classList.contains(LISTITEM)) {\n        targetParent = newParent[0];\n      } else {\n        targetParent = newParent[1];\n      }\n    }\n    if (dropLi === draggedNode) {\n      targetParent = dropLi;\n    }\n    if (dropTarget && target.offsetHeight <= 33 && event.offsetY < target.offsetHeight - 10 && event.offsetY > 6) {\n      targetParent = dropLi;\n      if (drop !== true) {\n        level = ++level;\n        var parent_2 = targetParent ? select('.e-list-parent', targetParent) : null;\n        indexValue = parent_2 ? parent_2.children.length : 0;\n        if (!(this.fields.dataSource instanceof DataManager) && parent_2 === null && targetParent) {\n          var parent_3 = targetParent.hasAttribute('data-uid') ? this.getChildNodes(this.fields.dataSource, targetParent.getAttribute('data-uid').toString()) : null;\n          indexValue = parent_3 ? parent_3.length : 0;\n        }\n      }\n    }\n    return {\n      cancel: false,\n      clonedNode: cloneEle,\n      event: event,\n      draggedNode: draggedNode,\n      draggedNodeData: draggedNodeData,\n      droppedNode: dropLi,\n      droppedNodeData: dropData,\n      dropIndex: indexValue,\n      dropLevel: level,\n      draggedParentNode: dragParent,\n      dropTarget: targetParent,\n      dropIndicator: iconClass,\n      target: target,\n      position: position\n    };\n  };\n  TreeView.prototype.addFullRow = function (toAdd) {\n    var len = this.liList.length;\n    if (toAdd) {\n      for (var i = 0; i < len; i++) {\n        this.createFullRow(this.liList[parseInt(i.toString(), 10)]);\n      }\n    } else {\n      for (var i = 0; i < len; i++) {\n        var rowDiv = select('.' + FULLROW, this.liList[parseInt(i.toString(), 10)]);\n        detach(rowDiv);\n      }\n    }\n  };\n  TreeView.prototype.createFullRow = function (item) {\n    var rowDiv = this.createElement('div', {\n      className: FULLROW\n    });\n    item.insertBefore(rowDiv, item.childNodes[0]);\n  };\n  TreeView.prototype.addMultiSelect = function (toAdd) {\n    if (toAdd) {\n      var liEles = selectAll('.' + LISTITEM + ':not([aria-selected=\"true\"])', this.element);\n      for (var _i = 0, liEles_1 = liEles; _i < liEles_1.length; _i++) {\n        var ele = liEles_1[_i];\n        ele.setAttribute('aria-selected', 'false');\n      }\n    } else {\n      var liEles = selectAll('.' + LISTITEM + '[aria-selected=\"false\"]', this.element);\n      for (var _a = 0, liEles_2 = liEles; _a < liEles_2.length; _a++) {\n        var ele = liEles_2[_a];\n        ele.removeAttribute('aria-selected');\n      }\n    }\n  };\n  TreeView.prototype.collapseByLevel = function (element, level, excludeHiddenNodes) {\n    if (level > 0 && !isNOU(element)) {\n      var cNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var liEle = cNodes[parseInt(i.toString(), 10)];\n        var icon = select('.' + COLLAPSIBLE, select('.' + TEXTWRAP, liEle));\n        if (!isNOU(icon)) {\n          this.collapseNode(liEle, icon, null);\n        }\n        this.collapseByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\n      }\n    }\n  };\n  TreeView.prototype.collapseAllNodes = function (excludeHiddenNodes) {\n    var cIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + COLLAPSIBLE, this.element));\n    for (var i = 0, len = cIcons.length; i < len; i++) {\n      var icon = cIcons[parseInt(i.toString(), 10)];\n      var liEle = closest(icon, '.' + LISTITEM);\n      this.collapseNode(liEle, icon, null);\n    }\n  };\n  TreeView.prototype.expandByLevel = function (element, level, excludeHiddenNodes) {\n    if (level > 0 && !isNOU(element)) {\n      var eNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\n      for (var i = 0, len = eNodes.length; i < len; i++) {\n        var liEle = eNodes[parseInt(i.toString(), 10)];\n        var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEle));\n        if (!isNOU(icon)) {\n          this.expandAction(liEle, icon, null);\n        }\n        this.expandByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\n      }\n    }\n  };\n  TreeView.prototype.expandAllNodes = function (excludeHiddenNodes) {\n    var eIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + EXPANDABLE, this.element));\n    for (var i = 0, len = eIcons.length; i < len; i++) {\n      var icon = eIcons[parseInt(i.toString(), 10)];\n      var liEle = closest(icon, '.' + LISTITEM);\n      this.expandAction(liEle, icon, null, true);\n    }\n  };\n  TreeView.prototype.getVisibleNodes = function (excludeHiddenNodes, nodes) {\n    var vNodes = Array.prototype.slice.call(nodes);\n    if (excludeHiddenNodes) {\n      for (var i = 0; i < vNodes.length; i++) {\n        if (!isVisible(vNodes[parseInt(i.toString(), 10)])) {\n          vNodes.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    return vNodes;\n  };\n  TreeView.prototype.removeNode = function (node) {\n    var dragParentUl = closest(node, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n    if (!isNOU(this.nodeTemplateFn)) {\n      this.destroyTemplate(node);\n    }\n    detach(node);\n    this.updateElement(dragParentUl, dragParentLi);\n    this.removeData(node);\n  };\n  TreeView.prototype.updateInstance = function () {\n    this.updateList();\n    this.updateSelectedNodes();\n    this.updateExpandedNodes();\n  };\n  TreeView.prototype.updateList = function () {\n    this.liList = Array.prototype.slice.call(selectAll('.' + LISTITEM, this.element));\n  };\n  TreeView.prototype.updateSelectedNodes = function () {\n    this.setProperties({\n      selectedNodes: []\n    }, true);\n    var sNodes = selectAll('.' + ACTIVE, this.element);\n    this.selectGivenNodes(sNodes);\n  };\n  TreeView.prototype.updateExpandedNodes = function () {\n    this.setProperties({\n      expandedNodes: []\n    }, true);\n    var eNodes = selectAll('[aria-expanded=\"true\"]', this.element);\n    for (var i = 0, len = eNodes.length; i < len; i++) {\n      this.addExpand(eNodes[parseInt(i.toString(), 10)]);\n    }\n  };\n  TreeView.prototype.removeData = function (node) {\n    if (this.dataType === 1) {\n      var dm = new DataManager(this.treeData);\n      var id = this.getId(node);\n      var data = {};\n      var newId = this.isNumberTypeId ? parseFloat(id) : id;\n      data[this.fields.id] = newId;\n      dm.remove(this.fields.id, data);\n      this.removeChildNodes(id);\n    } else {\n      var id = this.getId(node);\n      this.updateChildField(this.treeData, this.fields, id, null, null, true);\n    }\n  };\n  TreeView.prototype.removeChildNodes = function (parentId) {\n    var cNodes = this.getChildGroup(this.groupedData, parentId, false);\n    var childData = [];\n    if (cNodes) {\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var dm = new DataManager(this.treeData);\n        var id = getValue(this.fields.id, cNodes[parseInt(i.toString(), 10)]).toString();\n        var data = {};\n        var currId = this.isNumberTypeId ? parseFloat(id) : id;\n        data[this.fields.id] = currId;\n        var nodeData = dm.remove(this.fields.id, data);\n        childData.push(nodeData[0]);\n        this.removeChildNodes(id);\n      }\n    }\n    return childData;\n  };\n  TreeView.prototype.doGivenAction = function (nodes, selector, toExpand) {\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var liEle = this.getElement(nodes[parseInt(i.toString(), 10)]);\n      if (isNOU(liEle)) {\n        continue;\n      }\n      var icon = select('.' + selector, select('.' + TEXTWRAP, liEle));\n      if (!isNOU(icon)) {\n        if (toExpand) {\n          this.expandAction(liEle, icon, null);\n        } else {\n          this.collapseNode(liEle, icon, null);\n        }\n      }\n    }\n  };\n  TreeView.prototype.addGivenNodes = function (nodes, dropLi, index, isRemote, dropEle) {\n    if (nodes.length === 0) {\n      return;\n    }\n    var sNodes = this.getSortedData(nodes);\n    var level = dropLi ? parseFloat(dropLi.getAttribute('aria-level')) + 1 : 1;\n    if (isRemote) {\n      this.updateMapper(level);\n    }\n    var li = ListBase.createListItemFromJson(this.createElement, sNodes, this.listBaseOption, level);\n    var id = this.getId(dropLi);\n    var dropIcon1;\n    if (!isNullOrUndefined(dropLi)) {\n      dropIcon1 = select('div.' + ICON, dropLi);\n    }\n    if (this.dataType === 1 && dropIcon1 && dropIcon1.classList.contains(EXPANDABLE) && !isNOU(this.element.offsetParent) && !this.element.offsetParent.parentElement.classList.contains('e-filemanager')) {\n      this.preventExpand = true;\n    }\n    if (this.dataType !== 1) {\n      this.addChildData(this.treeData, this.fields, id, nodes, index);\n      this.isFirstRender = false;\n    }\n    var dropUl;\n    if (!dropEle) {\n      dropUl = dropLi ? this.expandParent(dropLi) : select('.' + PARENTITEM, this.element);\n    } else {\n      dropUl = dropEle;\n    }\n    var refNode = !isNullOrUndefined(index) ? dropUl.childNodes[parseInt(index.toString(), 10)] : null;\n    if (!this.isFirstRender || this.dataType === 1) {\n      var args = this.expandArgs;\n      if (refNode || this.sortOrder === 'None') {\n        for (var i = 0; i < li.length; i++) {\n          dropUl.insertBefore(li[parseInt(i.toString(), 10)], refNode);\n        }\n        if (this.dataType === 1 && !isNullOrUndefined(dropLi) && !isNOU(this.element.offsetParent) && !this.element.offsetParent.parentElement.classList.contains('e-filemanager')) {\n          this.preventExpand = false;\n          var dropIcon = select('div.' + ICON, dropLi);\n          if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && (isNOU(args) || args.name !== 'nodeExpanding')) {\n            this.expandAction(dropLi, dropIcon, null);\n          }\n        }\n      }\n      if (!refNode && (this.sortOrder === 'Ascending' || this.sortOrder === 'Descending')) {\n        if (dropUl.childNodes.length === 0) {\n          for (var i = 0; i < li.length; i++) {\n            dropUl.insertBefore(li[parseInt(i.toString(), 10)], refNode);\n          }\n          if (this.dataType === 1 && !isNullOrUndefined(dropLi) && !isNOU(this.element.offsetParent) && !this.element.offsetParent.parentElement.classList.contains('e-filemanager')) {\n            this.preventExpand = false;\n            var dropIcon = select('div.' + ICON, dropLi);\n            if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && (isNOU(args) || args.name !== 'nodeExpanding')) {\n              this.expandAction(dropLi, dropIcon, null);\n            }\n          }\n        } else {\n          var cNodes = dropUl.childNodes;\n          for (var i = 0; i < li.length; i++) {\n            for (var j = 0; j < cNodes.length; j++) {\n              var returnValue = this.sortOrder === 'Ascending' ? cNodes[parseInt(j.toString(), 10)].textContent.toUpperCase() > li[parseInt(i.toString(), 10)].innerText.toUpperCase() : cNodes[parseInt(j.toString(), 10)].textContent.toUpperCase() < li[parseInt(i.toString(), 10)].innerText.toUpperCase();\n              if (returnValue) {\n                dropUl.insertBefore(li[parseInt(i.toString(), 10)], cNodes[parseInt(j.toString(), 10)]);\n                break;\n              }\n              dropUl.insertBefore(li[parseInt(i.toString(), 10)], cNodes[cNodes.length]);\n            }\n          }\n        }\n      }\n    }\n    if (this.dataType === 1) {\n      this.updateField(this.treeData, this.fields, id, 'hasChildren', true);\n      var refId = this.getId(refNode);\n      var pos = isNOU(refId) ? this.treeData.length : this.getDataPos(this.treeData, this.fields, refId);\n      for (var j = 0; j < nodes.length; j++) {\n        if (!isNOU(id)) {\n          var currId = this.isNumberTypeId ? parseFloat(id) : id;\n          setValue(this.fields.parentID, currId, nodes[parseInt(j.toString(), 10)]);\n        }\n        this.treeData.splice(pos, 0, nodes[parseInt(j.toString(), 10)]);\n        pos++;\n      }\n    }\n    this.finalizeNode(dropUl);\n  };\n  TreeView.prototype.updateMapper = function (level) {\n    var mapper = level === 1 ? this.fields : this.getChildFields(this.fields, level - 1, 1);\n    this.updateListProp(mapper);\n  };\n  TreeView.prototype.updateListProp = function (mapper) {\n    var prop = this.getActualProperties(mapper);\n    this.listBaseOption.fields = prop;\n    this.listBaseOption.fields.url = Object.prototype.hasOwnProperty.call(prop, 'navigateUrl') ? prop.navigateUrl : 'navigateUrl';\n  };\n  TreeView.prototype.getDataPos = function (obj, mapper, id) {\n    var pos = null;\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[parseInt(i.toString(), 10)]);\n      if (obj[parseInt(i.toString(), 10)] && nodeId && nodeId.toString() === id) {\n        return i;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\n        var data = getValue(mapper.child, obj[parseInt(i.toString(), 10)]);\n        pos = this.getDataPos(data, this.getChildMapper(mapper), id);\n        if (pos !== null) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\n        var items = getValue('child', obj[parseInt(i.toString(), 10)]);\n        pos = this.getDataPos(items, this.getChildMapper(mapper), id);\n        if (pos !== null) {\n          break;\n        }\n      }\n    }\n    return pos;\n  };\n  TreeView.prototype.addChildData = function (obj, mapper, id, data, index) {\n    var updated;\n    if (isNOU(id)) {\n      index = isNOU(index) ? obj.length : index;\n      for (var k = 0, len = data.length; k < len; k++) {\n        obj.splice(index, 0, data[parseInt(k.toString(), 10)]);\n        index++;\n      }\n      return updated;\n    }\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[parseInt(i.toString(), 10)]);\n      if (obj[parseInt(i.toString(), 10)] && nodeId && nodeId.toString() === id) {\n        if (typeof mapper.child === 'string' && Object.prototype.hasOwnProperty.call(obj[parseInt(i.toString(), 10)], mapper.child) && obj[parseInt(i.toString(), 10)][mapper.child] !== null || this.fields.dataSource instanceof DataManager && Object.prototype.hasOwnProperty.call(obj[parseInt(i.toString(), 10)], 'child')) {\n          var key = typeof mapper.child === 'string' ? mapper.child : 'child';\n          var childData = getValue(key, obj[parseInt(i.toString(), 10)]);\n          if (isNOU(childData)) {\n            childData = [];\n          }\n          index = isNOU(index) ? childData.length : index;\n          for (var k = 0, len = data.length; k < len; k++) {\n            childData.splice(index, 0, data[parseInt(k.toString(), 10)]);\n            index++;\n          }\n        } else {\n          var key = typeof mapper.child === 'string' ? mapper.child : 'child';\n          obj[parseInt(i.toString(), 10)][\"\" + key] = data;\n        }\n        return true;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\n        var childObj = getValue(mapper.child, obj[parseInt(i.toString(), 10)]);\n        updated = this.addChildData(childObj, this.getChildMapper(mapper), id, data, index);\n        if (updated !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\n        var childData = getValue('child', obj[parseInt(i.toString(), 10)]);\n        updated = this.addChildData(childData, this.getChildMapper(mapper), id, data, index);\n        if (updated !== undefined) {\n          break;\n        }\n      }\n    }\n    return updated;\n  };\n  TreeView.prototype.doDisableAction = function (nodes) {\n    var validNodes = this.nodeType(nodes);\n    var validID = this.checkValidId(validNodes);\n    this.validArr = [];\n    for (var i = 0, len = validID.length; i < len; i++) {\n      var id = validID[parseInt(i.toString(), 10)][this.fields.id].toString();\n      if (id && this.disableNode.indexOf(id) === -1) {\n        this.disableNode.push(id);\n      }\n      var liEle = this.getElement(id);\n      if (liEle) {\n        liEle.setAttribute('aria-disabled', 'true');\n        addClass([liEle], DISABLE);\n      }\n    }\n  };\n  TreeView.prototype.doEnableAction = function (nodes) {\n    var strNodes = this.nodeType(nodes);\n    for (var i = 0, len = strNodes.length; i < len; i++) {\n      var liEle = this.getElement(strNodes[parseInt(i.toString(), 10)]);\n      var id = strNodes[parseInt(i.toString(), 10)];\n      if (id && this.disableNode.indexOf(id) !== -1) {\n        this.disableNode.splice(this.disableNode.indexOf(id), 1);\n      }\n      if (liEle) {\n        liEle.removeAttribute('aria-disabled');\n        removeClass([liEle], DISABLE);\n      }\n    }\n  };\n  TreeView.prototype.nodeType = function (nodes) {\n    var validID = [];\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var id = void 0;\n      if (typeof nodes[parseInt(i.toString(), 10)] == 'string') {\n        id = nodes[parseInt(i.toString(), 10)] ? nodes[parseInt(i.toString(), 10)].toString() : null;\n      } else if (typeof nodes[parseInt(i.toString(), 10)] === 'object') {\n        id = nodes[parseInt(i.toString(), 10)] ? nodes[parseInt(i.toString(), 10)].getAttribute('data-uid').toString() : null;\n      }\n      if (validID.indexOf(id) === -1) {\n        validID.push(id);\n      }\n    }\n    return validID;\n  };\n  TreeView.prototype.checkValidId = function (node) {\n    var _this = this;\n    if (this.dataType === 1) {\n      this.validArr = this.treeData.filter(function (data) {\n        return node.indexOf(data[_this.fields.id] ? data[_this.fields.id].toString() : null) !== -1;\n      });\n    } else if (this.dataType === 2) {\n      for (var k = 0; k < this.treeData.length; k++) {\n        var id = this.treeData[parseInt(k.toString(), 10)][this.fields.id] ? this.treeData[parseInt(k.toString(), 10)][this.fields.id].toString() : null;\n        if (node.indexOf(id) !== -1) {\n          this.validArr.push(this.treeData[parseInt(k.toString(), 10)]);\n        }\n        var childItems = getValue(this.fields.child.toString(), this.treeData[parseInt(k.toString(), 10)]);\n        if (childItems) {\n          this.filterNestedChild(childItems, node);\n        }\n      }\n    }\n    return this.validArr;\n  };\n  TreeView.prototype.filterNestedChild = function (treeData, nodes) {\n    for (var k = 0; k < treeData.length; k++) {\n      var id = treeData[parseInt(k.toString(), 10)][this.fields.id] ? treeData[parseInt(k.toString(), 10)][this.fields.id].toString() : null;\n      if (nodes.indexOf(id) !== -1) {\n        this.validArr.push(treeData[parseInt(k.toString(), 10)]);\n      }\n      var childItems = getValue(this.fields.child.toString(), treeData[parseInt(k.toString(), 10)]);\n      if (childItems) {\n        this.filterNestedChild(childItems, nodes);\n      }\n    }\n  };\n  TreeView.prototype.setTouchClass = function () {\n    var ele = closest(this.element, '.' + BIGGER);\n    this.touchClass = isNOU(ele) ? '' : SMALL;\n  };\n  TreeView.prototype.updatePersistProp = function () {\n    this.removeField(this.treeData, this.fields, ['selected', 'expanded']);\n    var sleNodes = this.selectedNodes;\n    for (var l = 0, slelen = sleNodes.length; l < slelen; l++) {\n      this.updateField(this.treeData, this.fields, sleNodes[parseInt(l.toString(), 10)], 'selected', true);\n    }\n    var enodes = this.expandedNodes;\n    for (var k = 0, nodelen = enodes.length; k < nodelen; k++) {\n      this.updateField(this.treeData, this.fields, enodes[parseInt(k.toString(), 10)], 'expanded', true);\n    }\n    if (this.showCheckBox) {\n      this.removeField(this.treeData, this.fields, ['isChecked']);\n      var cnodes = this.checkedNodes;\n      for (var m = 0, nodelen = cnodes.length; m < nodelen; m++) {\n        this.updateField(this.treeData, this.fields, cnodes[parseInt(m.toString(), 10)], 'isChecked', true);\n      }\n    }\n  };\n  TreeView.prototype.removeField = function (obj, mapper, names) {\n    if (isNOU(obj) || isNOU(mapper)) {\n      return;\n    }\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      for (var j = 0; j < names.length; j++) {\n        var field = this.getMapperProp(mapper, names[parseInt(j.toString(), 10)]);\n        if (!isNOU(obj[parseInt(i.toString(), 10)][\"\" + field])) {\n          delete obj[parseInt(i.toString(), 10)][\"\" + field];\n        }\n      }\n      if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\n        this.removeField(getValue(mapper.child, obj[parseInt(i.toString(), 10)]), this.getChildMapper(mapper), names);\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\n        this.removeField(getValue('child', obj[parseInt(i.toString(), 10)]), this.getChildMapper(mapper), names);\n      }\n    }\n  };\n  TreeView.prototype.getMapperProp = function (mapper, fieldName) {\n    switch (fieldName) {\n      case 'selected':\n        return !isNOU(mapper.selected) ? mapper.selected : 'selected';\n      case 'expanded':\n        return !isNOU(mapper.expanded) ? mapper.expanded : 'expanded';\n      case 'isChecked':\n        return !isNOU(mapper.isChecked) ? mapper.isChecked : 'isChecked';\n      case 'hasChildren':\n        return !isNOU(mapper.hasChildren) ? mapper.hasChildren : 'hasChildren';\n      default:\n        return fieldName;\n    }\n  };\n  TreeView.prototype.updateField = function (obj, mapper, id, key, value) {\n    if (isNOU(id)) {\n      return;\n    } else if (this.dataType === 1) {\n      var newId = this.isNumberTypeId ? parseFloat(id) : id;\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', newId, false));\n      setValue(this.getMapperProp(mapper, key), value, resultData[0]);\n    } else {\n      this.updateChildField(obj, mapper, id, key, value);\n    }\n  };\n  TreeView.prototype.updateChildField = function (obj, mapper, id, key, value, remove) {\n    var removedData;\n    if (isNOU(obj)) {\n      return removedData;\n    }\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[parseInt(i.toString(), 10)]);\n      if (obj[parseInt(i.toString(), 10)] && !isNOU(nodeId) && nodeId.toString() === id) {\n        if (remove) {\n          removedData = obj.splice(i, 1);\n        } else {\n          setValue(this.getMapperProp(mapper, key), value, obj[parseInt(i.toString(), 10)]);\n          removedData = [];\n        }\n        return removedData;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\n        var childData = getValue(mapper.child, obj[parseInt(i.toString(), 10)]);\n        removedData = this.updateChildField(childData, this.getChildMapper(mapper), id, key, value, remove);\n        if (removedData !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\n        var childItems = getValue('child', obj[parseInt(i.toString(), 10)]);\n        removedData = this.updateChildField(childItems, this.getChildMapper(mapper), id, key, value, remove);\n        if (removedData !== undefined) {\n          break;\n        }\n      }\n    }\n    return removedData;\n  };\n  TreeView.prototype.triggerEvent = function (action, node) {\n    this.renderReactTemplates();\n    if (action === 'addNodes') {\n      var nodeData = [];\n      for (var i = 0; i < node.length; i++) {\n        nodeData.push(this.getNode(this.getElement(isNOU(node[parseInt(i.toString(), 10)][this.fields.id]) ? getValue(this.fields.id, node[parseInt(i.toString(), 10)]).toString() : null)));\n      }\n      node = nodeData;\n    }\n    var eventArgs = {\n      data: this.treeData,\n      action: action,\n      nodeData: node\n    };\n    this.trigger('dataSourceChanged', eventArgs);\n  };\n  TreeView.prototype.wireInputEvents = function (inpEle) {\n    EventHandler.add(inpEle, 'blur', this.inputFocusOut, this);\n  };\n  TreeView.prototype.wireEditingEvents = function (toBind) {\n    var _this = this;\n    if (toBind && !this.disabled) {\n      this.touchEditObj = new Touch(this.element, {\n        tap: function (e) {\n          if (_this.isDoubleTapped(e) && e.tapCount === 2) {\n            e.originalEvent.preventDefault();\n            _this.editingHandler(e.originalEvent);\n          }\n        }\n      });\n    } else {\n      if (this.touchEditObj) {\n        this.touchEditObj.destroy();\n      }\n    }\n  };\n  TreeView.prototype.wireClickEvent = function (toBind) {\n    var _this = this;\n    if (toBind) {\n      this.touchClickObj = new Touch(this.element, {\n        tap: function (e) {\n          _this.clickHandler(e);\n        }\n      });\n    } else {\n      if (this.touchClickObj) {\n        this.touchClickObj.destroy();\n      }\n    }\n  };\n  TreeView.prototype.wireExpandOnEvent = function (toBind) {\n    var _this = this;\n    if (toBind) {\n      this.touchExpandObj = new Touch(this.element, {\n        tap: function (e) {\n          if ((_this.expandOnType === 'Click' || _this.expandOnType === 'DblClick' && _this.isDoubleTapped(e) && e.tapCount === 2) && e.originalEvent.which !== 3) {\n            _this.expandHandler(e);\n          }\n        }\n      });\n    } else {\n      if (this.touchExpandObj) {\n        this.touchExpandObj.destroy();\n      }\n    }\n  };\n  TreeView.prototype.mouseDownHandler = function (e) {\n    this.mouseDownStatus = true;\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n    if (e.ctrlKey && this.allowMultiSelection) {\n      EventHandler.add(this.element, 'contextmenu', this.preventContextMenu, this);\n    }\n  };\n  TreeView.prototype.preventContextMenu = function (e) {\n    e.preventDefault();\n  };\n  TreeView.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n    this.wireClickEvent(true);\n    if (this.expandOnType !== 'None') {\n      this.wireExpandOnEvent(true);\n    }\n    EventHandler.add(this.element, 'mouseover', this.onMouseOver, this);\n    EventHandler.add(this.element, 'mouseout', this.onMouseLeave, this);\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  };\n  TreeView.prototype.unWireEvents = function () {\n    EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n    this.wireClickEvent(false);\n    this.wireExpandOnEvent(false);\n    EventHandler.remove(this.element, 'mouseover', this.onMouseOver);\n    EventHandler.remove(this.element, 'mouseout', this.onMouseLeave);\n    if (!this.disabled) {\n      this.keyboardModule.destroy();\n    }\n  };\n  TreeView.prototype.parents = function (element, selector) {\n    var matched = [];\n    var el = element.parentNode;\n    while (!isNOU(el)) {\n      if (matches(el, selector)) {\n        matched.push(el);\n      }\n      el = el.parentNode;\n    }\n    return matched;\n  };\n  TreeView.prototype.isDoubleTapped = function (e) {\n    var target = e.originalEvent.target;\n    var secondTap;\n    if (target && e.tapCount) {\n      if (e.tapCount === 1) {\n        this.firstTap = closest(target, '.' + LISTITEM);\n      } else if (e.tapCount === 2) {\n        secondTap = closest(target, '.' + LISTITEM);\n      }\n    }\n    return this.firstTap === secondTap;\n  };\n  TreeView.prototype.isDescendant = function (parent, child) {\n    var node = child.parentNode;\n    while (!isNOU(node)) {\n      if (node === parent) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  };\n  TreeView.prototype.showSpinner = function (element) {\n    addClass([element], LOAD);\n    createSpinner({\n      target: element,\n      width: Browser.isDevice ? 16 : 14\n    }, this.createElement);\n    showSpinner(element);\n  };\n  TreeView.prototype.hideSpinner = function (element) {\n    hideSpinner(element);\n    element.innerHTML = '';\n    removeClass([element], LOAD);\n  };\n  TreeView.prototype.setCheckedNodes = function (nodes) {\n    nodes = JSON.parse(JSON.stringify(nodes));\n    this.uncheckAll(this.checkedNodes);\n    this.setIndeterminate(nodes);\n    if (nodes.length > 0) {\n      this.checkAll(nodes);\n    }\n  };\n  /**\r\n   * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel\r\n   *\r\n   * @param {string} node - The unique identifier of the node.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.setValidCheckedNode = function (node) {\n    if (this.dataType === 1) {\n      var mapper = this.fields;\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', node, true));\n      if (resultData[0]) {\n        this.setChildCheckState(resultData, node, resultData[0]);\n        if (this.autoCheck) {\n          var parent_4 = resultData[0][this.fields.parentID] ? resultData[0][this.fields.parentID].toString() : null;\n          var childNodes = this.getChildNodes(this.treeData, parent_4);\n          var count = 0;\n          for (var len = 0; len < childNodes.length; len++) {\n            var childId = childNodes[parseInt(len.toString(), 10)][this.fields.id].toString();\n            if (this.checkedNodes.indexOf(childId) !== -1) {\n              count++;\n            }\n          }\n          if (count === childNodes.length && this.checkedNodes.indexOf(parent_4) === -1 && parent_4) {\n            this.checkedNodes.push(parent_4);\n          }\n        }\n      }\n    } else if (this.dataType === 2) {\n      for (var a = 0; a < this.treeData.length; a++) {\n        var index = this.treeData[parseInt(a.toString(), 10)][this.fields.id] ? this.treeData[parseInt(a.toString(), 10)][this.fields.id].toString() : '';\n        if (index === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n          break;\n        }\n        var childItems = getValue(this.fields.child.toString(), this.treeData[parseInt(a.toString(), 10)]);\n        if (childItems) {\n          this.setChildCheckState(childItems, node, this.treeData[parseInt(a.toString(), 10)]);\n        }\n      }\n    }\n  };\n  /**\r\n   * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel(for hierarchical DS)\r\n   *\r\n   * @param {Object[]} childItems - The child items to check.\r\n   * @param {string} node - The node to set the check state for.\r\n   * @param {Object} [treeData] - The optional tree data.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.setChildCheckState = function (childItems, node, treeData) {\n    var checkedParent;\n    var count = 0;\n    if (this.dataType === 1) {\n      if (treeData) {\n        checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : null;\n      }\n      for (var index = 0; index < childItems.length; index++) {\n        var checkNode = childItems[parseInt(index.toString(), 10)][this.fields.id] ? childItems[parseInt(index.toString(), 10)][this.fields.id].toString() : null;\n        if (treeData && checkedParent && this.autoCheck) {\n          if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkNode) === -1) {\n            this.checkedNodes.push(checkNode);\n          }\n        }\n        if (checkNode === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n        }\n        var subChildItems = this.getChildNodes(this.treeData, checkNode);\n        if (subChildItems) {\n          this.setChildCheckState(subChildItems, node, treeData);\n        }\n      }\n    } else {\n      if (treeData) {\n        checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\n      }\n      for (var index = 0; index < childItems.length; index++) {\n        var checkedChild = childItems[parseInt(index.toString(), 10)][this.fields.id] ? childItems[parseInt(index.toString(), 10)][this.fields.id].toString() : '';\n        if (treeData && checkedParent && this.autoCheck) {\n          if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\n            this.checkedNodes.push(checkedChild);\n          }\n        }\n        if (checkedChild === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n        }\n        var subChildItems = getValue(this.fields.child.toString(), childItems[parseInt(index.toString(), 10)]);\n        if (subChildItems) {\n          this.setChildCheckState(subChildItems, node, childItems[parseInt(index.toString(), 10)]);\n        }\n        if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\n          count++;\n        }\n        if (count === childItems.length && this.checkedNodes.indexOf(checkedParent) === -1 && this.autoCheck) {\n          this.checkedNodes.push(checkedParent);\n        }\n      }\n    }\n  };\n  TreeView.prototype.setIndeterminate = function (nodes) {\n    for (var i = 0; i < nodes.length; i++) {\n      this.setValidCheckedNode(nodes[parseInt(i.toString(), 10)]);\n    }\n  };\n  TreeView.prototype.updatePosition = function (id, newData, isRefreshChild, childValue) {\n    if (this.dataType === 1) {\n      var pos = this.getDataPos(this.treeData, this.fields, id);\n      this.treeData.splice(pos, 1, newData);\n      if (isRefreshChild) {\n        this.removeChildNodes(id);\n        for (var j = 0; j < childValue.length; j++) {\n          this.treeData.splice(pos, 0, childValue[parseInt(j.toString(), 10)]);\n          pos++;\n        }\n      }\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    } else {\n      this.updateChildPosition(this.treeData, this.fields, id, [newData], undefined);\n    }\n  };\n  TreeView.prototype.updateChildPosition = function (treeData, mapper, currID, newData, index) {\n    var found;\n    for (var i = 0, objlen = treeData.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, treeData[parseInt(i.toString(), 10)]);\n      if (treeData[parseInt(i.toString(), 10)] && nodeId && nodeId.toString() === currID) {\n        treeData[parseInt(i.toString(), 10)] = newData[0];\n        return true;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, treeData[parseInt(i.toString(), 10)]))) {\n        var childObj = getValue(mapper.child, treeData[parseInt(i.toString(), 10)]);\n        found = this.updateChildPosition(childObj, this.getChildMapper(mapper), currID, newData, index);\n        if (found !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', treeData[parseInt(i.toString(), 10)]))) {\n        var childData = getValue('child', treeData[parseInt(i.toString(), 10)]);\n        found = this.updateChildPosition(childData, this.getChildMapper(mapper), currID, newData, index);\n        if (found !== undefined) {\n          break;\n        }\n      }\n    }\n    return found;\n  };\n  TreeView.prototype.dynamicState = function () {\n    this.setDragAndDrop(this.allowDragAndDrop);\n    this.wireEditingEvents(this.allowEditing);\n    if (!this.disabled) {\n      this.wireEvents();\n      this.setRipple();\n    } else {\n      this.unWireEvents();\n      this.rippleFn();\n      this.rippleIconFn();\n    }\n  };\n  TreeView.prototype.crudOperation = function (operation, nodes, target, newText, newNode, index, prevent) {\n    var _this = this;\n    var data = this.fields.dataSource;\n    var matchedArr = [];\n    var query = this.getQuery(this.fields);\n    var key = this.fields.id;\n    var crud;\n    var changes = {\n      addedRecords: [],\n      deletedRecords: [],\n      changedRecords: []\n    };\n    var nodesID = [];\n    if (nodes) {\n      nodesID = this.nodeType(nodes);\n    } else if (target) {\n      if (typeof target == 'string') {\n        nodesID[0] = target.toString();\n      } else if (typeof target === 'object') {\n        nodesID[0] = target.getAttribute('data-uid').toString();\n      }\n    }\n    for (var i = 0, len = nodesID.length; i < len; i++) {\n      var liEle = this.getElement(nodesID[parseInt(i.toString(), 10)]);\n      if (isNullOrUndefined(liEle)) {\n        continue;\n      }\n      var removedData = this.getNodeObject(nodesID[parseInt(i.toString(), 10)]);\n      matchedArr.push(removedData);\n    }\n    switch (operation) {\n      case 'delete':\n        if (nodes.length === 1) {\n          crud = data.remove(key, matchedArr[0], query.fromTable, query);\n        } else {\n          changes.deletedRecords = matchedArr;\n          crud = data.saveChanges(changes, key, query.fromTable, query);\n        }\n        crud.then(function () {\n          return _this.deleteSuccess(nodesID);\n        }).catch(function (e) {\n          return _this.dmFailure(e);\n        });\n        break;\n      case 'update':\n        matchedArr[0][this.fields.text] = newText;\n        crud = data.update(key, matchedArr[0], query.fromTable, query);\n        crud.then(function () {\n          return _this.editSucess(target, newText, prevent);\n        }).catch(function (e) {\n          return _this.dmFailure(e, target, prevent);\n        });\n        break;\n      case 'insert':\n        if (newNode.length === 1) {\n          crud = data.insert(newNode[0], query.fromTable, query);\n        } else {\n          var arr = [];\n          for (var i = 0, len = newNode.length; i < len; i++) {\n            arr.push(newNode[parseInt(i.toString(), 10)]);\n          }\n          changes.addedRecords = arr;\n          crud = data.saveChanges(changes, key, query.fromTable, query);\n        }\n        crud.then(function () {\n          var dropLi = _this.getElement(target);\n          _this.addSuccess(newNode, dropLi, index);\n          _this.preventExpand = false;\n        }).catch(function (e) {\n          return _this.dmFailure(e);\n        });\n        break;\n    }\n  };\n  TreeView.prototype.deleteSuccess = function (nodes) {\n    var nodeData = [];\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var liEle = this.getElement(nodes[parseInt(i.toString(), 10)]);\n      nodeData.push(this.getNode(liEle));\n      if (isNOU(liEle)) {\n        continue;\n      }\n      this.removeNode(liEle);\n    }\n    this.updateInstance();\n    if (this.dataType === 1) {\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    }\n    this.triggerEvent('removeNode', nodeData);\n  };\n  TreeView.prototype.editSucess = function (target, newText, prevent) {\n    var liEle = this.getElement(target);\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.appendNewText(liEle, txtEle, newText, prevent);\n  };\n  TreeView.prototype.addSuccess = function (nodes, dropLi, index) {\n    var _this = this;\n    var dropUl;\n    var icon = dropLi ? dropLi.querySelector('.' + ICON) : null;\n    if (dropLi && icon && icon.classList.contains(EXPANDABLE) && dropLi.querySelector('.' + PARENTITEM) === null) {\n      this.renderChildNodes(dropLi, null, function () {\n        dropUl = dropLi.querySelector('.' + PARENTITEM);\n        _this.addGivenNodes(nodes, dropLi, index, true, dropUl);\n        _this.triggerEvent('addNodes', nodes);\n      });\n    } else {\n      this.addGivenNodes(nodes, dropLi, index, true);\n      this.triggerEvent('addNodes', nodes);\n    }\n  };\n  TreeView.prototype.dmFailure = function (e, target, prevent) {\n    if (target) {\n      this.updatePreviousText(target, prevent);\n    }\n    this.trigger('actionFailure', {\n      error: e\n    });\n  };\n  TreeView.prototype.updatePreviousText = function (target, prevent) {\n    var liEle = this.getElement(target);\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.updateText(liEle, txtEle, this.oldText, prevent);\n  };\n  TreeView.prototype.getHierarchicalParentId = function (node, data, parentsID) {\n    var _this = this;\n    var index = data.findIndex(function (data) {\n      return data[_this.fields.id] && data[_this.fields.id].toString() === node;\n    });\n    if (index === -1) {\n      for (var i = 0; i < data.length; i++) {\n        var childItems = getValue(this.fields.child.toString(), data[parseInt(i.toString(), 10)]);\n        if (!isNOU(childItems)) {\n          index = childItems.findIndex(function (data) {\n            return data[_this.fields.id] && data[_this.fields.id].toString() === node;\n          });\n          if (index === -1) {\n            this.getHierarchicalParentId(node, childItems, parentsID);\n          } else {\n            parentsID.push(data[parseInt(i.toString(), 10)][this.fields.id].toString());\n            this.getHierarchicalParentId(data[parseInt(i.toString(), 10)][this.fields.id].toString(), this.treeData, parentsID);\n            break;\n          }\n        }\n      }\n    }\n    return parentsID;\n  };\n  /**\r\n   * Called internally if any of the property value changed.\r\n   *\r\n   * @param {TreeViewModel} newProp - The new property value.\r\n   * @param {TreeViewModel} oldProp - The old property value.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  TreeView.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'allowDragAndDrop':\n          this.setDragAndDrop(this.allowDragAndDrop);\n          break;\n        case 'dragArea':\n          if (this.allowDragAndDrop) {\n            this.dragObj.dragArea = this.dragArea;\n          }\n          break;\n        case 'allowEditing':\n          this.wireEditingEvents(this.allowEditing);\n          break;\n        case 'allowMultiSelection':\n          if (this.selectedNodes.length > 1) {\n            var sNode = this.getElement(this.selectedNodes[0]);\n            this.isLoaded = false;\n            this.removeSelectAll();\n            this.selectNode(sNode, null);\n            this.isLoaded = true;\n          }\n          this.setMultiSelect(this.allowMultiSelection);\n          this.addMultiSelect(this.allowMultiSelection);\n          break;\n        case 'allowTextWrap':\n          this.setTextWrap();\n          this.updateWrap();\n          break;\n        case 'checkedNodes':\n          if (this.showCheckBox) {\n            this.checkedNodes = oldProp.checkedNodes;\n            this.setCheckedNodes(newProp.checkedNodes);\n          }\n          break;\n        case 'autoCheck':\n          if (this.showCheckBox) {\n            this.autoCheck = newProp.autoCheck;\n            this.ensureIndeterminate();\n          }\n          break;\n        case 'cssClass':\n          this.setCssClass(oldProp.cssClass, newProp.cssClass);\n          break;\n        case 'enableRtl':\n          this.setEnableRtl();\n          break;\n        case 'expandedNodes':\n          this.isAnimate = false;\n          this.setProperties({\n            expandedNodes: []\n          }, true);\n          this.collapseAll();\n          this.isInitalExpand = true;\n          this.setProperties({\n            expandedNodes: isNOU(newProp.expandedNodes) ? [] : newProp.expandedNodes\n          }, true);\n          this.doExpandAction();\n          this.isInitalExpand = false;\n          this.isAnimate = true;\n          break;\n        case 'expandOn':\n          this.wireExpandOnEvent(false);\n          this.setExpandOnType();\n          if (this.expandOnType !== 'None' && !this.disabled) {\n            this.wireExpandOnEvent(true);\n          }\n          break;\n        case 'disabled':\n          this.setDisabledMode();\n          this.dynamicState();\n          break;\n        case 'fields':\n          this.isAnimate = false;\n          this.isFieldChange = true;\n          this.initialRender = true;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          if (!this.isReact || this.isReact && !(this.fields.dataSource instanceof DataManager)) {\n            if (!this.element.classList.contains('e-filtering')) {\n              this.DDTTreeData = JSON.parse(JSON.stringify(this.fields.dataSource));\n            }\n            this.reRenderNodes();\n          }\n          this.initialRender = false;\n          this.isAnimate = true;\n          this.isFieldChange = false;\n          break;\n        case 'fullRowSelect':\n          this.setFullRow(this.fullRowSelect);\n          this.addFullRow(this.fullRowSelect);\n          if (this.allowTextWrap) {\n            this.setTextWrap();\n            this.updateWrap();\n          }\n          break;\n        case 'loadOnDemand':\n          if (this.loadOnDemand === false && !this.onLoaded) {\n            var nodes = this.element.querySelectorAll('li');\n            var i = 0;\n            while (i < nodes.length) {\n              if (nodes[parseInt(i.toString(), 10)].getAttribute('aria-expanded') !== 'true') {\n                this.renderChildNodes(nodes[parseInt(i.toString(), 10)], true, null, true);\n              }\n              i++;\n            }\n            this.onLoaded = true;\n          }\n          break;\n        case 'nodeTemplate':\n          this.hasTemplate = false;\n          this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\n          this.reRenderNodes();\n          break;\n        case 'selectedNodes':\n          this.removeSelectAll();\n          this.setProperties({\n            selectedNodes: newProp.selectedNodes\n          }, true);\n          this.doSelectionAction();\n          break;\n        case 'showCheckBox':\n          this.reRenderNodes();\n          break;\n        case 'sortOrder':\n          this.reRenderNodes();\n          break;\n        case 'fullRowNavigable':\n          this.setProperties({\n            fullRowNavigable: newProp.fullRowNavigable\n          }, true);\n          this.listBaseOption.itemNavigable = newProp.fullRowNavigable;\n          this.reRenderNodes();\n          break;\n      }\n    }\n  };\n  /**\r\n   * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\r\n   *\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.destroy = function () {\n    this.clearTemplate();\n    this.element.removeAttribute('aria-activedescendant');\n    this.unWireEvents();\n    this.wireEditingEvents(false);\n    if (!this.disabled) {\n      this.rippleFn();\n      this.rippleIconFn();\n    }\n    this.setCssClass(this.cssClass, null);\n    this.setDragAndDrop(false);\n    this.setFullRow(false);\n    if (this.ulElement && this.ulElement.parentElement) {\n      this.ulElement.parentElement.removeChild(this.ulElement);\n    }\n    this.ulElement = null;\n    this.liList = null;\n    this.startNode = null;\n    this.firstTap = null;\n    this.expandArgs = null;\n    this.dragLi = null;\n    this.dragTarget = null;\n    this.dragParent = null;\n    this.dragObj = null;\n    this.dropObj = null;\n    this.inputObj = null;\n    this.touchEditObj = null;\n    this.touchExpandObj = null;\n    this.touchClickObj = null;\n    _super.prototype.destroy.call(this);\n  };\n  /**\r\n   * Adds the collection of TreeView nodes based on target and index position. If target node is not specified,\r\n   * then the nodes are added as children of the given parentID or in the root level of TreeView.\r\n   *\r\n   * @param  { object } nodes - Specifies the array of JSON data that has to be added.\r\n   * @param  { string | Element } target - Specifies ID of TreeView node/TreeView node as target element.\r\n   * @param  { number } index - Specifies the index to place the newly added nodes in the target element.\r\n   * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.addNodes = function (nodes, target, index, preventTargetExpand) {\n    if (isNOU(nodes)) {\n      return;\n    }\n    nodes = JSON.parse(JSON.stringify(nodes));\n    var dropLi = this.getElement(target);\n    this.preventExpand = preventTargetExpand;\n    if (this.fields.dataSource instanceof DataManager) {\n      if (!this.isOffline) {\n        this.crudOperation('insert', null, target, null, nodes, index, this.preventExpand);\n      } else {\n        this.addSuccess(nodes, dropLi, index);\n      }\n    } else if (this.dataType === 2) {\n      this.addGivenNodes(nodes, dropLi, index);\n    } else {\n      if (dropLi) {\n        this.addGivenNodes(nodes, dropLi, index);\n      } else {\n        nodes = this.getSortedData(nodes);\n        for (var i = 0; i < nodes.length; i++) {\n          var pid = getValue(this.fields.parentID, nodes[parseInt(i.toString(), 10)]);\n          dropLi = pid ? this.getElement(pid.toString()) : pid;\n          this.addGivenNodes([nodes[parseInt(i.toString(), 10)]], dropLi, index);\n        }\n      }\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    }\n    this.updateCheckedStateFromDS();\n    if (this.showCheckBox && dropLi) {\n      this.ensureParentCheckState(dropLi);\n    }\n    if (this.fields.dataSource instanceof DataManager === false) {\n      this.preventExpand = false;\n      this.triggerEvent('addNodes', nodes);\n    }\n  };\n  /**\r\n   * Editing can also be enabled by using the `beginEdit` property, instead of clicking on the\r\n   * TreeView node. On passing the node ID or element through this property, the edit textBox\r\n   * will be created for the particular node thus allowing us to edit it.\r\n   *\r\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.beginEdit = function (node) {\n    var ele = this.getElement(node);\n    if (isNOU(ele) || this.disabled) {\n      return;\n    }\n    this.createTextbox(ele);\n  };\n  /**\r\n   * Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes\r\n   * as argument to this method.\r\n   *\r\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.checkAll = function (nodes) {\n    if (this.showCheckBox) {\n      this.doCheckBoxAction(nodes, true);\n    }\n  };\n  /**\r\n   * Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.\r\n   * You can also collapse all the nodes excluding the hidden nodes by setting **excludeHiddenNodes** to true. If you want to collapse\r\n   * a specific level of nodes, set **level** as argument to collapseAll method.\r\n   *\r\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/ array of TreeView node.\r\n   * @param  {number} level - TreeView nodes will collapse up to the given level.\r\n   * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes of TreeView when collapsing all nodes.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.collapseAll = function (nodes, level, excludeHiddenNodes) {\n    if (!isNOU(nodes)) {\n      this.doGivenAction(nodes, COLLAPSIBLE, false);\n    } else {\n      if (level > 0) {\n        this.collapseByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\n      } else {\n        this.collapseAllNodes(excludeHiddenNodes);\n      }\n    }\n  };\n  /**\r\n   * Disables the collection of nodes by passing the ID of nodes or node elements in the array.\r\n   *\r\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.disableNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      this.doDisableAction(nodes);\n    }\n  };\n  /**\r\n   * Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.\r\n   *\r\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.enableNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      this.doEnableAction(nodes);\n    }\n  };\n  /**\r\n   * Ensures visibility of the TreeView node by using node ID or node element.\r\n   * When many TreeView nodes are present and we need to find a particular node, `ensureVisible` property\r\n   * helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.\r\n   *\r\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView nodes.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.ensureVisible = function (node) {\n    var parentsId = [];\n    if (this.dataType === 1) {\n      var nodeData = this.getTreeData(node);\n      while (nodeData.length !== 0 && !isNOU(nodeData[0][this.fields.parentID])) {\n        parentsId.push(nodeData[0][this.fields.parentID].toString());\n        nodeData = this.getTreeData(nodeData[0][this.fields.parentID].toString());\n      }\n    } else if (this.dataType === 2) {\n      parentsId = this.getHierarchicalParentId(node, this.treeData, parentsId);\n    }\n    this.expandAll(parentsId.reverse());\n    var liEle = this.getElement(node);\n    if (!isNOU(liEle)) {\n      if (typeof node == 'object') {\n        var parents = this.parents(liEle, '.' + LISTITEM);\n        this.expandAll(parents);\n      }\n      setTimeout(function () {\n        liEle.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }, 450);\n    }\n  };\n  /**\r\n   * Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes\r\n   * as argument to this method. You can also expand all the collapsed nodes by excluding the hidden nodes by setting\r\n   * **excludeHiddenNodes** to true to this method. To expand a specific level of nodes, set **level** as argument to expandAll method.\r\n   *\r\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\r\n   * @param  {number} level - TreeView nodes will expand up to the given level.\r\n   * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes when expanding all nodes.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.expandAll = function (nodes, level, excludeHiddenNodes) {\n    if (!isNOU(nodes)) {\n      this.doGivenAction(nodes, EXPANDABLE, true);\n    } else {\n      if (level > 0) {\n        this.expandByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\n      } else {\n        this.expandAllNodes(excludeHiddenNodes);\n      }\n    }\n  };\n  /**\r\n   * Gets all the checked nodes including child, whether it is loaded or not.\r\n   *\r\n   * @returns {string[]} - An array of strings representing the unique identifiers of checked nodes.\r\n   */\n  TreeView.prototype.getAllCheckedNodes = function () {\n    var checkNodes = this.checkedNodes;\n    return checkNodes;\n  };\n  /**\r\n   * Gets all the disabled nodes including child, whether it is loaded or not.\r\n   *\r\n   * @returns {string[]} An array of strings representing the unique identifiers of disabled nodes.\r\n   */\n  TreeView.prototype.getDisabledNodes = function () {\n    var disabledNodes = this.disableNode;\n    return disabledNodes;\n  };\n  /**\r\n   * Gets the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.\r\n   *\r\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\r\n   * @returns {Object} - The data associated with the specified node.\r\n   */\n  TreeView.prototype.getNode = function (node) {\n    var ele = this.getElement(node);\n    return this.getNodeData(ele, true);\n  };\n  /**\r\n   * To get the updated data source of TreeView after performing some operation like drag and drop, node editing,\r\n   * node selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.\r\n   * * If you pass the ID of TreeView node as arguments for this method then it will return the updated data source\r\n   * of the corresponding node otherwise it will return the entire updated data source of TreeView.\r\n   * * The updated data source also contains custom attributes if you specified in data source.\r\n   *\r\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\r\n   * @isGenericType true\r\n   * @returns {Object} - The tree data associated with the specified node or element.\r\n   */\n  TreeView.prototype.getTreeData = function (node) {\n    var id = this.getId(node);\n    this.updatePersistProp();\n    if (isNOU(id)) {\n      return this.treeData;\n    } else {\n      var data = this.getNodeObject(id);\n      return isNOU(data) ? [] : [data];\n    }\n  };\n  /**\r\n   * Moves the collection of nodes within the same TreeView based on target or its index position.\r\n   *\r\n   * @param  {string[] | Element[]} sourceNodes - Specifies the array of TreeView nodes ID/array of TreeView node.\r\n   * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\r\n   * @param  {number} index - Specifies the index to place the moved nodes in the target element.\r\n   * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.moveNodes = function (sourceNodes, target, index, preventTargetExpand) {\n    var dropLi = this.getElement(target);\n    var nodeData = [];\n    if (isNOU(dropLi)) {\n      return;\n    }\n    for (var i = 0; i < sourceNodes.length; i++) {\n      var dragLi = this.getElement(sourceNodes[parseInt(i.toString(), 10)]);\n      nodeData.push(this.getNode(dragLi));\n      if (isNOU(dragLi) || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\n        continue;\n      }\n      this.preventExpand = preventTargetExpand;\n      this.dropAsChildNode(dragLi, dropLi, this, index, null, null, null, dropLi);\n    }\n    if (this.fields.dataSource instanceof DataManager === false) {\n      this.preventExpand = false;\n    }\n    this.triggerEvent('moveNodes', nodeData);\n  };\n  /**\r\n   * Refreshes a particular node of the TreeView.\r\n   *\r\n   * @param  {string | Element} target - Specifies the ID of TreeView node or TreeView node as target element.\r\n   * @param  {Object[]} newData - Specifies the new data of TreeView node.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.refreshNode = function (target, newData) {\n    if (isNOU(target) || isNOU(newData)) {\n      return;\n    }\n    var isRefreshChild = false;\n    if (this.dataType === 1 && newData.length > 1) {\n      isRefreshChild = true;\n    } else if (this.dataType === 2 && newData.length === 1) {\n      var updatedChildValue = getValue(this.fields.child.toString(), newData[0]);\n      if (!isNOU(updatedChildValue)) {\n        isRefreshChild = true;\n      }\n    }\n    var liEle = this.getElement(target);\n    var id = liEle ? liEle.getAttribute('data-uid') : target ? target.toString() : null;\n    this.refreshData = this.getNodeObject(id);\n    newData = JSON.parse(JSON.stringify(newData));\n    var newNodeData;\n    var parentData;\n    if (this.dataType === 1 && isRefreshChild) {\n      for (var k = 0; k < newData.length; k++) {\n        if (isNOU(newData[parseInt(k.toString(), 10)][this.fields.parentID])) {\n          parentData = newData[parseInt(k.toString(), 10)];\n          newData.splice(k, 1);\n          break;\n        }\n      }\n      newNodeData = extend({}, this.refreshData, parentData);\n    } else {\n      newNodeData = extend({}, this.refreshData, newData[0]);\n    }\n    if (isNOU(liEle)) {\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n      return;\n    }\n    this.isRefreshed = true;\n    var level = parseFloat(liEle.getAttribute('aria-level'));\n    var newliEle = ListBase.createListItemFromJson(this.createElement, [newNodeData], this.listBaseOption, level);\n    var ul = select('.' + PARENTITEM, liEle);\n    var childItems = getValue(this.fields.child.toString(), newNodeData);\n    if (isRefreshChild && ul || isRefreshChild && !isNOU(childItems)) {\n      var parentEle = liEle.parentElement;\n      var index = Array.prototype.indexOf.call(parentEle.childNodes, liEle);\n      remove(liEle);\n      parentEle.insertBefore(newliEle[0], parentEle.childNodes[parseInt(index.toString(), 10)]);\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n      if (isRefreshChild && ul) {\n        this.expandAll([id]);\n      }\n    } else {\n      var txtEle = select('.' + TEXTWRAP, liEle);\n      var newTextEle = select('.' + TEXTWRAP, newliEle[0]);\n      var icon = select('div.' + ICON, txtEle);\n      var newIcon = select('div.' + ICON, newTextEle);\n      if (icon && newIcon) {\n        if (newIcon.classList.contains(EXPANDABLE) && icon.classList.contains(COLLAPSIBLE)) {\n          removeClass([newIcon], EXPANDABLE);\n          addClass([newIcon], COLLAPSIBLE);\n        } else if (newIcon.classList.contains(COLLAPSIBLE) && icon.classList.contains(EXPANDABLE)) {\n          removeClass([newIcon], COLLAPSIBLE);\n          addClass([newIcon], EXPANDABLE);\n        } else if (icon.classList.contains('interaction')) {\n          addClass([newIcon], 'interaction');\n        }\n      }\n      remove(txtEle);\n      var fullEle = select('.' + FULLROW, liEle);\n      fullEle.parentNode.insertBefore(newTextEle, fullEle.nextSibling);\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n    }\n    liEle = this.getElement(target);\n    if (newNodeData[this.fields.tooltip]) {\n      liEle.setAttribute('title', newNodeData[this.fields.tooltip]);\n    }\n    if (Object.prototype.hasOwnProperty.call(newNodeData, this.fields.htmlAttributes) && newNodeData[this.fields.htmlAttributes]) {\n      var attr = {};\n      merge(attr, newNodeData[this.fields.htmlAttributes]);\n      if (attr.class) {\n        addClass([liEle], attr.class.split(' '));\n        delete attr.class;\n      } else {\n        attributes(liEle, attr);\n      }\n    }\n    if (this.selectedNodes.indexOf(id) !== -1) {\n      liEle.setAttribute('aria-selected', 'true');\n      addClass([liEle], ACTIVE);\n    }\n    this.isRefreshed = false;\n    this.triggerEvent('refreshNode', [this.getNode(liEle)]);\n  };\n  /**\r\n   * Removes the collection of TreeView nodes by passing the array of node details as argument to this method.\r\n   *\r\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.removeNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n        this.crudOperation('delete', nodes);\n      } else {\n        this.deleteSuccess(nodes);\n      }\n    }\n  };\n  /**\r\n   * Replaces the text of the TreeView node with the given text.\r\n   *\r\n   * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\r\n   * @param  {string} newText - Specifies the new text of TreeView node.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.updateNode = function (target, newText) {\n    var _this = this;\n    if (isNOU(target) || isNOU(newText) || !this.allowEditing) {\n      return;\n    }\n    var liEle = this.getElement(target);\n    if (isNOU(liEle)) {\n      return;\n    }\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.updateOldText(liEle);\n    var eventArgs = this.getEditEvent(liEle, null, null);\n    this.trigger('nodeEditing', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        if (_this.fields.dataSource instanceof DataManager && !_this.isOffline) {\n          _this.crudOperation('update', null, target, newText, null, null, false);\n        } else {\n          _this.appendNewText(liEle, txtEle, newText, false);\n        }\n      }\n    });\n  };\n  /**\r\n   * Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes\r\n   * as argument to this method.\r\n   *\r\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\r\n   * @returns {void}\r\n   */\n  TreeView.prototype.uncheckAll = function (nodes) {\n    if (this.showCheckBox) {\n      this.doCheckBoxAction(nodes, false);\n    }\n  };\n  var TreeView_1;\n  __decorate([Property(false)], TreeView.prototype, \"allowDragAndDrop\", void 0);\n  __decorate([Property(false)], TreeView.prototype, \"allowEditing\", void 0);\n  __decorate([Property(false)], TreeView.prototype, \"allowMultiSelection\", void 0);\n  __decorate([Property(false)], TreeView.prototype, \"allowTextWrap\", void 0);\n  __decorate([Complex({}, NodeAnimationSettings)], TreeView.prototype, \"animation\", void 0);\n  __decorate([Property()], TreeView.prototype, \"checkedNodes\", void 0);\n  __decorate([Property('')], TreeView.prototype, \"cssClass\", void 0);\n  __decorate([Property(false)], TreeView.prototype, \"disabled\", void 0);\n  __decorate([Property(null)], TreeView.prototype, \"dragArea\", void 0);\n  __decorate([Property(true)], TreeView.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Property(false)], TreeView.prototype, \"enablePersistence\", void 0);\n  __decorate([Property()], TreeView.prototype, \"expandedNodes\", void 0);\n  __decorate([Property('Auto')], TreeView.prototype, \"expandOn\", void 0);\n  __decorate([Complex({}, FieldsSettings)], TreeView.prototype, \"fields\", void 0);\n  __decorate([Property(true)], TreeView.prototype, \"fullRowSelect\", void 0);\n  __decorate([Property(true)], TreeView.prototype, \"loadOnDemand\", void 0);\n  __decorate([Property()], TreeView.prototype, \"locale\", void 0);\n  __decorate([Property()], TreeView.prototype, \"nodeTemplate\", void 0);\n  __decorate([Property()], TreeView.prototype, \"selectedNodes\", void 0);\n  __decorate([Property('None')], TreeView.prototype, \"sortOrder\", void 0);\n  __decorate([Property(false)], TreeView.prototype, \"showCheckBox\", void 0);\n  __decorate([Property(true)], TreeView.prototype, \"autoCheck\", void 0);\n  __decorate([Property(false)], TreeView.prototype, \"fullRowNavigable\", void 0);\n  __decorate([Event()], TreeView.prototype, \"actionFailure\", void 0);\n  __decorate([Event()], TreeView.prototype, \"created\", void 0);\n  __decorate([Event()], TreeView.prototype, \"dataBound\", void 0);\n  __decorate([Event()], TreeView.prototype, \"dataSourceChanged\", void 0);\n  __decorate([Event()], TreeView.prototype, \"drawNode\", void 0);\n  __decorate([Event()], TreeView.prototype, \"destroyed\", void 0);\n  __decorate([Event()], TreeView.prototype, \"keyPress\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeChecked\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeChecking\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeClicked\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeCollapsed\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeCollapsing\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeDragging\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeDragStart\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeDragStop\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeDropped\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeEdited\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeEditing\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeExpanded\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeExpanding\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeSelected\", void 0);\n  __decorate([Event()], TreeView.prototype, \"nodeSelecting\", void 0);\n  TreeView = TreeView_1 = __decorate([NotifyPropertyChanges], TreeView);\n  return TreeView;\n}(Component);\nexport { TreeView };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","isUndefined","Browser","compile","isNullOrUndefined","SanitizeHtmlHelper","animationMode","Property","NotifyPropertyChanges","ChildProperty","Complex","Event","EventHandler","KeyboardEvents","rippleEffect","Animation","remove","Draggable","Droppable","getElement","addClass","removeClass","closest","matches","detach","select","selectAll","isVisible","append","DataManager","Query","isNOU","Touch","getValue","setValue","extend","merge","attributes","ListBase","createCheckBox","rippleMouseHandler","Input","createSpinner","showSpinner","hideSpinner","ROOT","CONTROL","COLLAPSIBLE","EXPANDABLE","LISTITEM","LISTTEXT","LISTWRAP","IELISTWRAP","PARENTITEM","HOVER","ACTIVE","LOAD","PROCESS","ICON","TEXTWRAP","INPUT","INPUTGROUP","TREEINPUT","EDITING","RTL","INTERACTION","DRAGITEM","DROPPABLE","DRAGGING","SIBLING","DROPIN","DROPNEXT","DROPOUT","NODROP","FULLROWWRAP","FULLROW","SELECTED","EXPANDED","NODECOLLAPSED","DISABLE","DROPCOUNT","CHECK","INDETERMINATE","CHECKBOXWRAP","CHECKBOXFRAME","CHECKBOXRIPPLE","RIPPLE","RIPPLEELMENT","FOCUS","IMAGE","BIGGER","SMALL","CHILD","ITEM_ANIMATION_ACTIVE","DISABLED","PREVENTSELECT","treeAriaAttr","treeRole","itemRole","listRole","itemText","wrapperRole","FieldsSettings","_super","apply","ActionSettings","NodeAnimationSettings","effect","duration","easing","TreeView","options","element","_this","call","isRefreshed","preventExpand","checkedElement","disableNode","validArr","validNodes","expandChildren","isFieldChange","changeDataSource","hasTemplate","isFirstRender","isNodeDropped","isInteracted","isRightClick","mouseDownStatus","isDropIn","OldCheckedData","TreeView_1","getModuleName","preRender","checkActionNodes","parentNodeCheck","dragStartAction","isAnimate","keyConfigs","escape","end","enter","f2","home","moveDown","moveLeft","moveRight","moveUp","ctrlDown","ctrlUp","ctrlEnter","ctrlHome","ctrlEnd","ctrlA","shiftDown","shiftUp","shiftEnter","shiftHome","shiftEnd","csDown","csUp","csEnter","csHome","csEnd","space","shiftSpace","ctrlSpace","listBaseOption","expandCollapse","showIcon","expandIconClass","ariaAttributes","expandIconPosition","itemCreated","e","beforeNodeCreate","enableHtmlSanitizer","itemNavigable","fullRowNavigable","updateListProp","fields","aniObj","treeList","isLoaded","isInitalExpand","index","setTouchClass","DDTTreeData","JSON","parse","stringify","dataSource","selectedNodes","setProperties","checkedNodes","expandedNodes","getPersistData","keyEntity","addOnPersist","render","initialRender","initialize","setDataBinding","setDisabledMode","setExpandOnType","disabled","setRipple","wireEditingEvents","allowEditing","setDragAndDrop","allowDragAndDrop","wireEvents","renderComplete","setAttribute","id","setCssClass","cssClass","setEnableRtl","setFullRow","fullRowSelect","setTextWrap","nodeTemplateFn","templateComplier","nodeTemplate","classList","add","enableRtl","tempStr","rippleModel","selector","ignore","rippleFn","iconModel","isCenterRipple","rippleIconFn","isEnabled","setMultiSelect","template","document","querySelectorAll","querySelector","innerHTML","trim","undefined","push","isOffline","offline","ready","then","pop","treeData","result","isNumberTypeId","getType","setRootData","renderItems","finalize","catch","trigger","error","executeQuery","getQuery","rootData","mapper","value","columns","query","prop","getActualProperties","_i","_a","keys","col","indexOf","from","tableName","clone","addSorting","sortOrder","text","parentID","where","parseFloat","dataType","getDataType","groupedData","getGroupedData","rootItems","getChildNodes","isChildObject","child","isSorted","level","sortedData","getSortedData","ulElement","createList","createElement","appendChild","rootNodes","loadOnDemand","renderChildNodes","parseInt","toString","parentEle","finalizeNode","parentCheckData","updateCheckedStateFromDS","autoCheck","showCheckBox","updateParentCheckState","resultData","executeLocal","isChecked","resultId","hasChildren","childData","childId","mapper_1","checkState","getCheckedNodeDetails","checkIndeterminateState","checkedId","checkedData","fieldId","childItems","updateChildCheckState","enablePersistence","checkNodes","count","childNodes","preElement","check","changeState","indeterminate","childCheckedElement","data","contains","node","nodeId","getAttribute","OldCheckedNodes","_loop_1","j","this_1","findIndex","nodeCheck","ariaChecked","checkedParent","checkedChild","subChildItems","len","checkboxEle","touchClass","icon","item","insertBefore","checkValue","curData","addCheck","frame","frameMouseHandler","createFullRow","allowMultiSelection","addActionClass","selected","expanded","focusIn","textEle","dataId","renderNodeTemplate","eventArgs","nodeData","selectable","firstElementChild","rippleSpan","parentElement","action","actionValue","ds","groupBy","cusQuery","group","getDataSource","grpItem","itemObj","items","list","iNodes","k","sNodes","selectNode","cNodes","disableExpandAttr","eNodes","filter","updateList","updateCheckedProp","nodes","concat","ensureIndeterminate","liElement","ensureParentCheckState","ensureChildCheckState","indeterminateNodes","checkBoxEle","getElementsByClassName","checkedCount","dataUid","oldCheckedNodes","parentUL","currentParent","childElement","checkBoxes","parentCheck","childCheck","checkedState","currentLoadData","ele","splice","isNodeChecked","doCheckBoxAction","doCheck","reverse","liEle","setValidCheckedNode","dynamicCheckState","updateField","checkBox","validateCheckNode","updateFieldChecked","checkbox","currLi","nodeDetails","getNodeData","parent_1","updateIndeterminate","subChild","updateChildIndeterminate","indeterminateData","getTreeData","parent","subId","childElementCheck","innerChild","wrapper","state","isPrevent","isAdd","getCheckEvent","observedArgs","cancel","nodeCheckAction","ariaState","frameSpan","removeCheck","ensureStateChange","checked","firstUl","firstNode","updateIdAttr","allowTextWrap","updateWrap","renderReactTemplates","hasPid","doExpandAction","isIE","ulEle","liList","calculateWrap","nextElementSibling","style","height","offsetHeight","eUids","expandGivenNodes","eNode","expandAction","afterFinalized","arr","expandCallback","eUid","callback","doSelectionAction","sUids","sNode","selectGivenNodes","clickHandler","event","isDevice","originalEvent","changedTouches","isIos","elementFromPoint","clientX","clientY","preventContextMenu","li","which","rippleElement","rippleIcons","removeHover","setFocusElement","checkWrapper","checkElement","triggerClickEvent","collapseNode","toggleSelect","nodeCheckedEvent","isCheck","updateOldCheckedData","dataManager","uncheckedItems","expandNode","loaded","start_1","end_1","ul_1","liEle_1","setHeight","activeElement_1","animate","name","animation","expand","timingFunction","begin","overflow","HTMLElement","progress","args","display","animateHeight","expandedNode","ul","addExpand","expandArgs","getExpandEvent","colArgs","nodeCollapseAction","start","activeElement","collapse","collapsedNode","removeExpand","toRemove","removeAttribute","visibility","remaining","timeStamp","currentHeight","parentLi","expandChild","eicon","parents","mapper_2","getChildFields","loadChild","setSelectionForChildNodes","ensureCheckNode","disableTreeNodes","renderSubChild","getNodeObject","doDisableAction","getFields","nodeLevel","dataLevel","getChildMapper","obj","parentId","isRoot","getChildGroup","objlen","tempArray","childIndex","tempField","i_1","cIcons","curLi","multiSelect","ctrlKey","isActive","unselectNode","getSelectEvent","nodeSelectAction","metaKey","removeSelectAll","shiftKey","startNode","startIndex","endIndex","temp","currNode","addSelect","nodeUnselectAction","removeSelect","focusedNode","getFocusedNode","focusOut","selectedLI","selectedLI_1","expandOnType","expandOn","expandHandler","expandCollapseAction","nodeExpandAction","nodeName","liEles","getId","icon_1","keyActionHandler","inpEle","blur","oldText","preventDefault","checkNode","openNode","shiftKeySelect","navigateNode","navigateRootNode","createTextbox","navigateToFocus","isUp","focusNode","pos","getBoundingClientRect","getScrollParent","parentPos","bottom","scrollTop","top","isVisibleInViewport","scrollIntoView","txtWrap","left","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","scrollHeight","isTowards","nextNode","getNextNode","getPrevNode","checkWrap","nodeCheckingAction","allCheckNode","parentIndex","getChildItems","childStateChange","childIsCheck","newCheck","validateCheck","length_1","hierChildId","childId_1","toBeOpened","focusNextNode","setFocus","isBackwards","rootNode","getRootNode","getEndNode","selectedItem","fNode","lastChild","previousSibling","nextSibling","prevNode","endNode","preNode","focus","focusedElement","onMouseOver","currentLi","setHover","onMouseLeave","hoveredNode","fromDS","getText","pNode","parentNode","pid","checkboxElement","nodeFields","textContent","tempArr","isStringTemplate","root","slice","destroyTemplate","clearTemplate","reRenderNodes","removeChild","oldClass","newClass","split","editingHandler","oldInpEle","updateOldText","innerEle","className","attrs","getEditEvent","outerHTML","inpWidth","offsetWidth","style_1","isReact","setTimeout","renderTextBox","innerHtml","inputObj","createInput","properties","container","inputEle","setSelectionRange","wireInputEvents","editData","editFields","inputFocusOut","newText","txtEle","destroy","crudOperation","appendNewText","isInput","updateText","triggerEvent","getNode","newData","innerText","sanitize","getChildNodeObject","newList","children","toBind","initializeDrag","destroyDrag","virtualEle","dragObj","enableTailMode","enableAutoScroll","dragArea","dragTarget","enableTapHold","tapHoldThreshold","helper","sender","dragRoot","dragWrap","dragLi","isSameNode","cloneEle","cloneNode","nLen","cNode","body","cursor","dragData","dragStart","listItem","getDragEvent","draggedNode","intDestroy","dragCancelAction","drag","cursorAt","targetTouches","dragAction","dragStop","removeVirtualEle","dropTarget","preventTargetExpand","dropRoot","isHelperElement","dragParent","draggedParentNode","dropObj","out","default","over","drop","dropAction","dropWrap","dropLi","isDescendant","templateTarget","offsetY","offsetX","appendIndicator","renderVirtualEle","dropIndicator","virEle","liArray","dragInstance","draggable","ej2_instances","droppedElement","appendNode","draggedElement","dropAsSiblingNode","dropAsChildNode","dropUl","dragParentUl","dragParentLi","pre","moveData","updateElement","updateAriaLevel","updateInstance","dropParentUl","expandParent","childLi","dropParentLi","removedData","updateChildField","refId","getDataPos","currPid","removeChildNodes","addChildData","dropIcon","generateIcon","generateUL","childElementCount","dragIcon","updateChildAriaLevel","sibEle","dragNode","dropData","draggedNodeData","newParent","dragLiParent","targetParent","indexValue","iconCss","iconClass","position","dropTar","parent_2","parent_3","hasAttribute","clonedNode","droppedNode","droppedNodeData","dropIndex","dropLevel","addFullRow","toAdd","rowDiv","addMultiSelect","liEles_1","liEles_2","collapseByLevel","excludeHiddenNodes","getVisibleNodes","collapseAllNodes","expandByLevel","expandAllNodes","eIcons","vNodes","removeNode","removeData","updateSelectedNodes","updateExpandedNodes","dm","newId","currId","doGivenAction","toExpand","addGivenNodes","isRemote","dropEle","updateMapper","createListItemFromJson","dropIcon1","offsetParent","refNode","returnValue","toUpperCase","url","navigateUrl","updated","childObj","nodeType","validID","checkValidId","doEnableAction","strNodes","filterNestedChild","updatePersistProp","removeField","sleNodes","l","slelen","enodes","nodelen","cnodes","m","names","field","getMapperProp","fieldName","touchEditObj","tap","isDoubleTapped","tapCount","wireClickEvent","touchClickObj","wireExpandOnEvent","touchExpandObj","mouseDownHandler","keyboardModule","keyAction","bind","eventName","unWireEvents","matched","el","secondTap","firstTap","width","setCheckedNodes","uncheckAll","setIndeterminate","checkAll","setChildCheckState","parent_4","a","updatePosition","isRefreshChild","childValue","updateChildPosition","currID","found","dynamicState","operation","newNode","prevent","matchedArr","crud","changes","addedRecords","deletedRecords","changedRecords","nodesID","fromTable","saveChanges","deleteSuccess","dmFailure","update","editSucess","insert","addSuccess","updatePreviousText","getHierarchicalParentId","parentsID","onPropertyChanged","newProp","oldProp","collapseAll","onLoaded","addNodes","beginEdit","disableNodes","enableNodes","ensureVisible","parentsId","expandAll","behavior","getAllCheckedNodes","getDisabledNodes","disabledNodes","moveNodes","sourceNodes","refreshNode","updatedChildValue","refreshData","newNodeData","parentData","newliEle","newTextEle","newIcon","fullEle","tooltip","htmlAttributes","attr","class","removeNodes","updateNode"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-navigations/src/treeview/treeview.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { Component, isUndefined, Browser, compile, isNullOrUndefined, SanitizeHtmlHelper, animationMode } from '@syncfusion/ej2-base';\r\nimport { Property, NotifyPropertyChanges, ChildProperty, Complex } from '@syncfusion/ej2-base';\r\nimport { Event, EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\r\nimport { rippleEffect, Animation, remove } from '@syncfusion/ej2-base';\r\nimport { Draggable, Droppable } from '@syncfusion/ej2-base';\r\nimport { getElement } from '@syncfusion/ej2-base';\r\nimport { addClass, removeClass, closest, matches, detach, select, selectAll, isVisible, append } from '@syncfusion/ej2-base';\r\nimport { DataManager, Query } from '@syncfusion/ej2-data';\r\nimport { isNullOrUndefined as isNOU, Touch, getValue, setValue, extend, merge, attributes } from '@syncfusion/ej2-base';\r\nimport { ListBase } from '@syncfusion/ej2-lists';\r\nimport { createCheckBox, rippleMouseHandler } from '@syncfusion/ej2-buttons';\r\nimport { Input } from '@syncfusion/ej2-inputs';\r\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\r\nvar ROOT = 'e-treeview';\r\nvar CONTROL = 'e-control';\r\nvar COLLAPSIBLE = 'e-icon-collapsible';\r\nvar EXPANDABLE = 'e-icon-expandable';\r\nvar LISTITEM = 'e-list-item';\r\nvar LISTTEXT = 'e-list-text';\r\nvar LISTWRAP = 'e-text-wrap';\r\nvar IELISTWRAP = 'e-ie-wrap';\r\nvar PARENTITEM = 'e-list-parent';\r\nvar HOVER = 'e-hover';\r\nvar ACTIVE = 'e-active';\r\nvar LOAD = 'e-icons-spinner';\r\nvar PROCESS = 'e-process';\r\nvar ICON = 'e-icons';\r\nvar TEXTWRAP = 'e-text-content';\r\nvar INPUT = 'e-input';\r\nvar INPUTGROUP = 'e-input-group';\r\nvar TREEINPUT = 'e-tree-input';\r\nvar EDITING = 'e-editing';\r\nvar RTL = 'e-rtl';\r\nvar INTERACTION = 'e-interaction';\r\nvar DRAGITEM = 'e-drag-item';\r\nvar DROPPABLE = 'e-droppable';\r\nvar DRAGGING = 'e-dragging';\r\nvar SIBLING = 'e-sibling';\r\nvar DROPIN = 'e-drop-in';\r\nvar DROPNEXT = 'e-drop-next';\r\nvar DROPOUT = 'e-drop-out';\r\nvar NODROP = 'e-no-drop';\r\nvar FULLROWWRAP = 'e-fullrow-wrap';\r\nvar FULLROW = 'e-fullrow';\r\nvar SELECTED = 'e-selected';\r\nvar EXPANDED = 'e-expanded';\r\nvar NODECOLLAPSED = 'e-node-collapsed';\r\nvar DISABLE = 'e-disable';\r\nvar DROPCOUNT = 'e-drop-count';\r\nvar CHECK = 'e-check';\r\nvar INDETERMINATE = 'e-stop';\r\nvar CHECKBOXWRAP = 'e-treeview-checkbox';\r\nvar CHECKBOXFRAME = 'e-frame';\r\nvar CHECKBOXRIPPLE = 'e-ripple-container';\r\nvar RIPPLE = 'e-ripple';\r\nvar RIPPLEELMENT = 'e-ripple-element';\r\nvar FOCUS = 'e-node-focus';\r\nvar IMAGE = 'e-list-img';\r\nvar BIGGER = 'e-bigger';\r\nvar SMALL = 'e-small';\r\nvar CHILD = 'e-has-child';\r\nvar ITEM_ANIMATION_ACTIVE = 'e-animation-active';\r\nvar DISABLED = 'e-disabled';\r\nvar PREVENTSELECT = 'e-prevent';\r\nvar treeAriaAttr = {\r\n    treeRole: 'group',\r\n    itemRole: 'treeitem',\r\n    listRole: 'group',\r\n    itemText: '',\r\n    wrapperRole: ''\r\n};\r\n/**\r\n * Configures the fields to bind to the properties of node in the TreeView component.\r\n */\r\nvar FieldsSettings = /** @class */ (function (_super) {\r\n    __extends(FieldsSettings, _super);\r\n    function FieldsSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property('child')\r\n    ], FieldsSettings.prototype, \"child\", void 0);\r\n    __decorate([\r\n        Property([])\r\n    ], FieldsSettings.prototype, \"dataSource\", void 0);\r\n    __decorate([\r\n        Property('expanded')\r\n    ], FieldsSettings.prototype, \"expanded\", void 0);\r\n    __decorate([\r\n        Property('hasChildren')\r\n    ], FieldsSettings.prototype, \"hasChildren\", void 0);\r\n    __decorate([\r\n        Property('htmlAttributes')\r\n    ], FieldsSettings.prototype, \"htmlAttributes\", void 0);\r\n    __decorate([\r\n        Property('iconCss')\r\n    ], FieldsSettings.prototype, \"iconCss\", void 0);\r\n    __decorate([\r\n        Property('id')\r\n    ], FieldsSettings.prototype, \"id\", void 0);\r\n    __decorate([\r\n        Property('imageUrl')\r\n    ], FieldsSettings.prototype, \"imageUrl\", void 0);\r\n    __decorate([\r\n        Property('isChecked')\r\n    ], FieldsSettings.prototype, \"isChecked\", void 0);\r\n    __decorate([\r\n        Property('parentID')\r\n    ], FieldsSettings.prototype, \"parentID\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], FieldsSettings.prototype, \"query\", void 0);\r\n    __decorate([\r\n        Property('selectable')\r\n    ], FieldsSettings.prototype, \"selectable\", void 0);\r\n    __decorate([\r\n        Property('selected')\r\n    ], FieldsSettings.prototype, \"selected\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], FieldsSettings.prototype, \"tableName\", void 0);\r\n    __decorate([\r\n        Property('text')\r\n    ], FieldsSettings.prototype, \"text\", void 0);\r\n    __decorate([\r\n        Property('tooltip')\r\n    ], FieldsSettings.prototype, \"tooltip\", void 0);\r\n    __decorate([\r\n        Property('navigateUrl')\r\n    ], FieldsSettings.prototype, \"navigateUrl\", void 0);\r\n    return FieldsSettings;\r\n}(ChildProperty));\r\nexport { FieldsSettings };\r\n/**\r\n * Configures animation settings for the TreeView component.\r\n */\r\nvar ActionSettings = /** @class */ (function (_super) {\r\n    __extends(ActionSettings, _super);\r\n    function ActionSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property('SlideDown')\r\n    ], ActionSettings.prototype, \"effect\", void 0);\r\n    __decorate([\r\n        Property(400)\r\n    ], ActionSettings.prototype, \"duration\", void 0);\r\n    __decorate([\r\n        Property('linear')\r\n    ], ActionSettings.prototype, \"easing\", void 0);\r\n    return ActionSettings;\r\n}(ChildProperty));\r\nexport { ActionSettings };\r\n/**\r\n * Configures the animation settings for expanding and collapsing nodes in TreeView.\r\n */\r\nvar NodeAnimationSettings = /** @class */ (function (_super) {\r\n    __extends(NodeAnimationSettings, _super);\r\n    function NodeAnimationSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Complex({ effect: 'SlideUp', duration: 400, easing: 'linear' }, ActionSettings)\r\n    ], NodeAnimationSettings.prototype, \"collapse\", void 0);\r\n    __decorate([\r\n        Complex({ effect: 'SlideDown', duration: 400, easing: 'linear' }, ActionSettings)\r\n    ], NodeAnimationSettings.prototype, \"expand\", void 0);\r\n    return NodeAnimationSettings;\r\n}(ChildProperty));\r\nexport { NodeAnimationSettings };\r\n/**\r\n * The TreeView component is used to represent hierarchical data in a tree like structure with advanced\r\n * functions to perform edit, drag and drop, selection with check-box, and more.\r\n * ```html\r\n * <div id=\"tree\"></div>\r\n * ```\r\n * ```typescript\r\n * let treeObj: TreeView = new TreeView();\r\n * treeObj.appendTo('#tree');\r\n * ```\r\n */\r\nvar TreeView = /** @class */ (function (_super) {\r\n    __extends(TreeView, _super);\r\n    function TreeView(options, element) {\r\n        var _this = _super.call(this, options, element) || this;\r\n        _this.isRefreshed = false;\r\n        _this.preventExpand = false;\r\n        _this.checkedElement = [];\r\n        _this.disableNode = [];\r\n        _this.validArr = [];\r\n        _this.validNodes = [];\r\n        _this.expandChildren = [];\r\n        _this.isFieldChange = false;\r\n        _this.changeDataSource = false;\r\n        _this.hasTemplate = false;\r\n        _this.isFirstRender = false;\r\n        // Specifies whether the node is dropped or not\r\n        _this.isNodeDropped = false;\r\n        _this.isInteracted = false;\r\n        _this.isRightClick = false;\r\n        _this.mouseDownStatus = false;\r\n        _this.isDropIn = false;\r\n        _this.OldCheckedData = [];\r\n        return _this;\r\n    }\r\n    TreeView_1 = TreeView;\r\n    /**\r\n     * Get component name.\r\n     *\r\n     * @returns {string} - returns module name.\r\n     * @private\r\n     */\r\n    TreeView.prototype.getModuleName = function () {\r\n        return 'treeview';\r\n    };\r\n    /**\r\n     * Initialize the event handler\r\n     *\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.preRender = function () {\r\n        var _this = this;\r\n        this.checkActionNodes = [];\r\n        this.parentNodeCheck = [];\r\n        this.dragStartAction = false;\r\n        this.isAnimate = false;\r\n        this.keyConfigs = {\r\n            escape: 'escape',\r\n            end: 'end',\r\n            enter: 'enter',\r\n            f2: 'f2',\r\n            home: 'home',\r\n            moveDown: 'downarrow',\r\n            moveLeft: 'leftarrow',\r\n            moveRight: 'rightarrow',\r\n            moveUp: 'uparrow',\r\n            ctrlDown: 'ctrl+downarrow',\r\n            ctrlUp: 'ctrl+uparrow',\r\n            ctrlEnter: 'ctrl+enter',\r\n            ctrlHome: 'ctrl+home',\r\n            ctrlEnd: 'ctrl+end',\r\n            ctrlA: 'ctrl+A',\r\n            shiftDown: 'shift+downarrow',\r\n            shiftUp: 'shift+uparrow',\r\n            shiftEnter: 'shift+enter',\r\n            shiftHome: 'shift+home',\r\n            shiftEnd: 'shift+end',\r\n            csDown: 'ctrl+shift+downarrow',\r\n            csUp: 'ctrl+shift+uparrow',\r\n            csEnter: 'ctrl+shift+enter',\r\n            csHome: 'ctrl+shift+home',\r\n            csEnd: 'ctrl+shift+end',\r\n            space: 'space',\r\n            shiftSpace: 'shift+space',\r\n            ctrlSpace: 'ctrl+space'\r\n        };\r\n        this.listBaseOption = {\r\n            expandCollapse: true,\r\n            showIcon: true,\r\n            expandIconClass: EXPANDABLE,\r\n            ariaAttributes: treeAriaAttr,\r\n            expandIconPosition: 'Left',\r\n            itemCreated: function (e) {\r\n                _this.beforeNodeCreate(e);\r\n            },\r\n            enableHtmlSanitizer: this.enableHtmlSanitizer,\r\n            itemNavigable: this.fullRowNavigable\r\n        };\r\n        this.updateListProp(this.fields);\r\n        this.aniObj = new Animation({});\r\n        this.treeList = [];\r\n        this.isLoaded = false;\r\n        this.isInitalExpand = false;\r\n        this.expandChildren = [];\r\n        this.index = 0;\r\n        this.setTouchClass();\r\n        this.DDTTreeData = JSON.parse(JSON.stringify(this.fields.dataSource));\r\n        if (isNOU(this.selectedNodes)) {\r\n            this.setProperties({ selectedNodes: [] }, true);\r\n        }\r\n        if (isNOU(this.checkedNodes)) {\r\n            this.setProperties({ checkedNodes: [] }, true);\r\n        }\r\n        if (isNOU(this.expandedNodes)) {\r\n            this.setProperties({ expandedNodes: [] }, true);\r\n        }\r\n        else {\r\n            this.isInitalExpand = true;\r\n        }\r\n    };\r\n    /**\r\n     * Get the properties to be maintained in the persisted state.\r\n     *\r\n     * @returns {string} - returns the persisted data\r\n     * @hidden\r\n     */\r\n    TreeView.prototype.getPersistData = function () {\r\n        var keyEntity = ['selectedNodes', 'checkedNodes', 'expandedNodes'];\r\n        return this.addOnPersist(keyEntity);\r\n    };\r\n    /**\r\n     * To Initialize the control rendering\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.render = function () {\r\n        this.initialRender = true;\r\n        this.initialize();\r\n        this.setDataBinding(false);\r\n        this.setDisabledMode();\r\n        this.setExpandOnType();\r\n        if (!this.disabled) {\r\n            this.setRipple();\r\n        }\r\n        this.wireEditingEvents(this.allowEditing);\r\n        this.setDragAndDrop(this.allowDragAndDrop);\r\n        if (!this.disabled) {\r\n            this.wireEvents();\r\n        }\r\n        this.initialRender = false;\r\n        this.renderComplete();\r\n    };\r\n    TreeView.prototype.initialize = function () {\r\n        this.element.setAttribute('role', 'tree');\r\n        this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\r\n        this.setCssClass(null, this.cssClass);\r\n        this.setEnableRtl();\r\n        this.setFullRow(this.fullRowSelect);\r\n        this.setTextWrap();\r\n        this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\r\n    };\r\n    TreeView.prototype.setDisabledMode = function () {\r\n        if (this.disabled) {\r\n            this.element.classList.add(DISABLED);\r\n            this.element.setAttribute('aria-disabled', 'true');\r\n        }\r\n        else {\r\n            this.element.classList.remove(DISABLED);\r\n            this.element.setAttribute('aria-disabled', 'false');\r\n        }\r\n    };\r\n    TreeView.prototype.setEnableRtl = function () {\r\n        (this.enableRtl ? addClass : removeClass)([this.element], RTL);\r\n    };\r\n    TreeView.prototype.setRipple = function () {\r\n        var tempStr = '.' + FULLROW + ',.' + TEXTWRAP;\r\n        var rippleModel = {\r\n            selector: tempStr,\r\n            ignore: '.' + TEXTWRAP + ' > .' + ICON + ',.' + INPUTGROUP + ',.' + INPUT + ', .' + CHECKBOXWRAP\r\n        };\r\n        this.rippleFn = rippleEffect(this.element, rippleModel);\r\n        var iconModel = {\r\n            selector: '.' + TEXTWRAP + ' > .' + ICON,\r\n            isCenterRipple: true\r\n        };\r\n        this.rippleIconFn = rippleEffect(this.element, iconModel);\r\n    };\r\n    TreeView.prototype.setFullRow = function (isEnabled) {\r\n        (isEnabled ? addClass : removeClass)([this.element], FULLROWWRAP);\r\n    };\r\n    TreeView.prototype.setMultiSelect = function (isEnabled) {\r\n        if (isEnabled) {\r\n            this.element.setAttribute('aria-multiselectable', 'true');\r\n        }\r\n        else {\r\n            this.element.setAttribute('aria-multiselectable', 'false');\r\n        }\r\n    };\r\n    TreeView.prototype.templateComplier = function (template) {\r\n        if (template) {\r\n            this.hasTemplate = true;\r\n            this.element.classList.add(INTERACTION);\r\n            try {\r\n                if (typeof template !== 'function' && document.querySelectorAll(template).length) {\r\n                    return compile(document.querySelector(template).innerHTML.trim());\r\n                }\r\n                else {\r\n                    return compile(template);\r\n                }\r\n            }\r\n            catch (e) {\r\n                return compile(template);\r\n            }\r\n        }\r\n        this.element.classList.remove(INTERACTION);\r\n        return undefined;\r\n    };\r\n    TreeView.prototype.setDataBinding = function (changeDataSource) {\r\n        var _this = this;\r\n        this.treeList.push('false');\r\n        if (this.fields.dataSource instanceof DataManager) {\r\n            this.isOffline = this.fields.dataSource.dataSource.offline;\r\n            if (this.fields.dataSource.ready) {\r\n                this.fields.dataSource.ready.then(function (e) {\r\n                    _this.isOffline = _this.fields.dataSource.dataSource.offline;\r\n                    if (_this.fields.dataSource instanceof DataManager && _this.isOffline) {\r\n                        _this.treeList.pop();\r\n                        _this.treeData = e.result;\r\n                        _this.isNumberTypeId = _this.getType();\r\n                        _this.setRootData();\r\n                        _this.renderItems(true);\r\n                        if (_this.treeList.length === 0 && !_this.isLoaded) {\r\n                            _this.finalize();\r\n                        }\r\n                    }\r\n                }).catch(function (e) {\r\n                    _this.trigger('actionFailure', { error: e });\r\n                });\r\n            }\r\n            else {\r\n                this.fields.dataSource.executeQuery(this.getQuery(this.fields)).then(function (e) {\r\n                    _this.treeList.pop();\r\n                    _this.treeData = e.result;\r\n                    _this.isNumberTypeId = _this.getType();\r\n                    _this.setRootData();\r\n                    if (changeDataSource) {\r\n                        _this.changeDataSource = true;\r\n                    }\r\n                    _this.renderItems(true);\r\n                    _this.changeDataSource = false;\r\n                    if (_this.treeList.length === 0 && !_this.isLoaded) {\r\n                        _this.finalize();\r\n                    }\r\n                }).catch(function (e) {\r\n                    _this.trigger('actionFailure', { error: e });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.treeList.pop();\r\n            if (isNOU(this.fields.dataSource)) {\r\n                this.rootData = this.treeData = [];\r\n            }\r\n            else {\r\n                this.treeData = JSON.parse(JSON.stringify(this.fields.dataSource));\r\n                this.setRootData();\r\n            }\r\n            this.isNumberTypeId = this.getType();\r\n            this.renderItems(false);\r\n        }\r\n        if (this.treeList.length === 0 && !this.isLoaded) {\r\n            this.finalize();\r\n        }\r\n    };\r\n    TreeView.prototype.getQuery = function (mapper, value) {\r\n        if (value === void 0) { value = null; }\r\n        var columns = [];\r\n        var query;\r\n        if (!mapper.query) {\r\n            query = new Query();\r\n            var prop = this.getActualProperties(mapper);\r\n            for (var _i = 0, _a = Object.keys(prop); _i < _a.length; _i++) {\r\n                var col = _a[_i];\r\n                if (col !== 'dataSource' && col !== 'tableName' && col !== 'child' && !!mapper[\"\" + col]\r\n                    && col !== 'url' && columns.indexOf(mapper[\"\" + col]) === -1) {\r\n                    columns.push(mapper[\"\" + col]);\r\n                }\r\n            }\r\n            query.select(columns);\r\n            if (Object.prototype.hasOwnProperty.call(prop, 'tableName')) {\r\n                query.from(mapper.tableName);\r\n            }\r\n        }\r\n        else {\r\n            query = mapper.query.clone();\r\n        }\r\n        ListBase.addSorting(this.sortOrder, mapper.text, query);\r\n        if (!isNOU(value) && !isNOU(mapper.parentID)) {\r\n            query.where(mapper.parentID, 'equal', (this.isNumberTypeId ? parseFloat(value) : value));\r\n        }\r\n        return query;\r\n    };\r\n    TreeView.prototype.getType = function () {\r\n        return this.treeData[0] ? ((typeof getValue(this.fields.id, this.treeData[0]) === 'number') ? true : false) : false;\r\n    };\r\n    TreeView.prototype.setRootData = function () {\r\n        this.dataType = this.getDataType(this.treeData, this.fields);\r\n        if (this.dataType === 1) {\r\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\r\n            var rootItems = this.getChildNodes(this.treeData, undefined, true);\r\n            if (isNOU(rootItems)) {\r\n                this.rootData = [];\r\n            }\r\n            else {\r\n                this.rootData = rootItems;\r\n            }\r\n        }\r\n        else {\r\n            this.rootData = this.treeData;\r\n        }\r\n    };\r\n    TreeView.prototype.isChildObject = function () {\r\n        if (typeof this.fields.child === 'object') {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    TreeView.prototype.renderItems = function (isSorted) {\r\n        this.listBaseOption.ariaAttributes.level = 1;\r\n        var sortedData = this.getSortedData(this.rootData);\r\n        this.ulElement = ListBase.createList(this.createElement, isSorted ? this.rootData : sortedData, this.listBaseOption);\r\n        this.element.appendChild(this.ulElement);\r\n        var rootNodes = this.ulElement.querySelectorAll('.e-list-item');\r\n        if (this.loadOnDemand === false) {\r\n            var i = 0;\r\n            while (i < rootNodes.length) {\r\n                this.renderChildNodes(rootNodes[parseInt(i.toString(), 10)], true, null, true);\r\n                i++;\r\n            }\r\n        }\r\n        var parentEle = selectAll('.' + PARENTITEM, this.element);\r\n        if ((parentEle.length === 1 && (rootNodes && rootNodes.length !== 0)) || this.loadOnDemand) {\r\n            this.finalizeNode(this.element);\r\n        }\r\n        this.parentNodeCheck = [];\r\n        this.parentCheckData = [];\r\n        this.updateCheckedStateFromDS();\r\n        if (this.autoCheck && this.showCheckBox && !this.isLoaded) {\r\n            this.updateParentCheckState();\r\n        }\r\n    };\r\n    /**\r\n     * Update the checkedNodes from datasource at initial rendering\r\n     *\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.updateCheckedStateFromDS = function () {\r\n        this.validNodes = [];\r\n        if (this.treeData && this.showCheckBox) {\r\n            if (this.dataType === 1) {\r\n                var mapper = this.fields;\r\n                var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\r\n                for (var i = 0; i < resultData.length; i++) {\r\n                    var resultId = resultData[parseInt(i.toString(), 10)][this.fields.id]\r\n                        ? resultData[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                        : null;\r\n                    if (this.checkedNodes.indexOf(resultId) === -1 && !(this.isLoaded)) {\r\n                        this.checkedNodes.push(resultId);\r\n                    }\r\n                    if (resultData[parseInt(i.toString(), 10)][this.fields.hasChildren]) {\r\n                        var id = resultData[parseInt(i.toString(), 10)][this.fields.id];\r\n                        var childData = new DataManager(this.treeData).\r\n                            executeLocal(new Query().where(mapper.parentID, 'equal', id, false));\r\n                        for (var child = 0; child < childData.length; child++) {\r\n                            var childId = childData[parseInt(child.toString(), 10)][this.fields.id]\r\n                                ? childData[parseInt(child.toString(), 10)][this.fields.id].toString()\r\n                                : null;\r\n                            if (this.checkedNodes.indexOf(childId) === -1 && this.autoCheck) {\r\n                                this.checkedNodes.push(childId);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (var i = 0; i < this.checkedNodes.length; i++) {\r\n                    var mapper_1 = this.fields;\r\n                    var checkState = new DataManager(this.treeData).\r\n                        executeLocal(new Query().where(mapper_1.id, 'equal', this.checkedNodes[parseInt(i.toString(), 10)], true));\r\n                    if (checkState[0] && this.autoCheck) {\r\n                        this.getCheckedNodeDetails(mapper_1, checkState);\r\n                        this.checkIndeterminateState(checkState[0]);\r\n                    }\r\n                    if (checkState.length > 0) {\r\n                        var checkedId = checkState[0][this.fields.id] ? checkState[0][this.fields.id].toString() : null;\r\n                        if (this.checkedNodes.indexOf(checkedId) > -1 && this.validNodes.indexOf(checkedId) === -1) {\r\n                            this.validNodes.push(checkedId);\r\n                        }\r\n                    }\r\n                    var checkedData = new DataManager(this.treeData).\r\n                        executeLocal(new Query().where(mapper_1.parentID, 'equal', this.checkedNodes[parseInt(i.toString(), 10)], true));\r\n                    for (var index = 0; index < checkedData.length; index++) {\r\n                        var checkedId = checkedData[parseInt(index.toString(), 10)][this.fields.id]\r\n                            ? checkedData[parseInt(index.toString(), 10)][this.fields.id].toString()\r\n                            : null;\r\n                        if (this.checkedNodes.indexOf(checkedId) === -1 && this.autoCheck) {\r\n                            this.checkedNodes.push(checkedId);\r\n                        }\r\n                        if (this.checkedNodes.indexOf(checkedId) > -1 && this.validNodes.indexOf(checkedId) === -1) {\r\n                            this.validNodes.push(checkedId);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (this.dataType === 2 || (this.fields.dataSource instanceof DataManager &&\r\n                this.isOffline)) {\r\n                for (var index = 0; index < this.treeData.length; index++) {\r\n                    var fieldId = this.treeData[parseInt(index.toString(), 10)][this.fields.id] ? this.treeData[parseInt(index.toString(), 10)][this.fields.id].toString() : '';\r\n                    if (this.treeData[parseInt(index.toString(), 10)][this.fields.isChecked] &&\r\n                        !(this.isLoaded) && this.checkedNodes.indexOf(fieldId) === -1) {\r\n                        this.checkedNodes.push(fieldId);\r\n                    }\r\n                    if (this.checkedNodes.indexOf(fieldId) > -1 && this.validNodes.indexOf(fieldId) === -1) {\r\n                        this.validNodes.push(fieldId);\r\n                    }\r\n                    var childItems = getValue(this.fields.child.toString(), this.treeData[parseInt(index.toString(), 10)]);\r\n                    if (childItems) {\r\n                        this.updateChildCheckState(childItems, this.treeData[parseInt(index.toString(), 10)]);\r\n                    }\r\n                }\r\n                this.validNodes = (this.enablePersistence) ? this.checkedNodes : this.validNodes;\r\n            }\r\n            this.setProperties({ checkedNodes: this.validNodes }, true);\r\n        }\r\n    };\r\n    /**\r\n     * To check whether the list data has sub child and to change the parent check state accordingly\r\n     *\r\n     * @param {FieldsSettingsModel} mapper - The mapper object containing field settings.\r\n     * @param {Object[]} checkNodes - The array of checked nodes.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.getCheckedNodeDetails = function (mapper, checkNodes) {\r\n        var id = checkNodes[0][this.fields.parentID] ? checkNodes[0][this.fields.parentID].toString() : null;\r\n        var count = 0;\r\n        var element = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.id] + '\"]');\r\n        var parentEle = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.parentID] + '\"]');\r\n        if (!element && !parentEle) {\r\n            if (this.parentNodeCheck.indexOf(id) === -1) {\r\n                this.parentNodeCheck.push(id);\r\n            }\r\n            var childNodes = this.getChildNodes(this.treeData, id);\r\n            for (var i = 0; i < childNodes.length; i++) {\r\n                var childId = childNodes[parseInt(i.toString(), 10)][this.fields.id]\r\n                    ? childNodes[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                    : null;\r\n                if (this.checkedNodes.indexOf(childId) !== -1) {\r\n                    count++;\r\n                }\r\n                if (count === childNodes.length && this.checkedNodes.indexOf(id) === -1) {\r\n                    this.checkedNodes.push(id);\r\n                }\r\n            }\r\n            var preElement = new DataManager(this.treeData).\r\n                executeLocal(new Query().where(mapper.id, 'equal', id, true));\r\n            this.getCheckedNodeDetails(mapper, preElement);\r\n        }\r\n        else if (parentEle) {\r\n            var check = select('.' + CHECK, parentEle);\r\n            if (!check) {\r\n                this.changeState(parentEle, 'indeterminate', null, true, true);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Update the checkedNodes and parent state when all the child Nodes are in checkedstate at initial rendering\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.updateParentCheckState = function () {\r\n        var indeterminate = selectAll('.' + INDETERMINATE, this.element);\r\n        var childCheckedElement;\r\n        var data = this.treeData;\r\n        if (this.element.classList.contains('e-filtering')) {\r\n            data = this.DDTTreeData;\r\n        }\r\n        for (var i = 0; i < indeterminate.length; i++) {\r\n            var node = closest(indeterminate[parseInt(i.toString(), 10)], '.' + LISTITEM);\r\n            var nodeId = node.getAttribute('data-uid').toString();\r\n            var OldCheckedNodes = void 0;\r\n            if (this.element.classList.contains('e-filtering')) {\r\n                OldCheckedNodes = new DataManager(this.OldCheckedData).executeLocal(new Query().where('parentID', 'equal', nodeId, true));\r\n            }\r\n            if (this.dataType === 1) {\r\n                childCheckedElement = new DataManager(data).\r\n                    executeLocal(new Query().where(this.fields.parentID, 'equal', nodeId, true));\r\n            }\r\n            else {\r\n                childCheckedElement = this.getChildNodes(data, nodeId);\r\n            }\r\n            var count = 0;\r\n            if (childCheckedElement) {\r\n                var _loop_1 = function (j) {\r\n                    var childId = childCheckedElement[parseInt(j.toString(), 10)][this_1.fields.id].toString();\r\n                    if (this_1.checkedNodes.indexOf(childId) !== -1) {\r\n                        count++;\r\n                    }\r\n                    else if (this_1.element.classList.contains('e-filtering') && OldCheckedNodes.findIndex(function (e) { return e['id'] === childId; }) !== -1) {\r\n                        count++;\r\n                    }\r\n                };\r\n                var this_1 = this;\r\n                for (var j = 0; j < childCheckedElement.length; j++) {\r\n                    _loop_1(j);\r\n                }\r\n                if (count === childCheckedElement.length) {\r\n                    var nodeCheck = node.getAttribute('data-uid');\r\n                    if (this.checkedNodes.indexOf(nodeCheck) === -1) {\r\n                        this.checkedNodes.push(nodeCheck);\r\n                    }\r\n                    this.changeState(node, 'check', null, true, true);\r\n                }\r\n                else if (count === 0 && this.checkedNodes.length === 0) {\r\n                    this.changeState(node, 'uncheck', null, true, true);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Change the parent to indeterminate state whenever the child is in checked state which is not rendered in DOM\r\n     *\r\n     * @param {Object} data - The data object to check for indeterminate state.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.checkIndeterminateState = function (data) {\r\n        var element;\r\n        if (this.dataType === 1) {\r\n            element = this.element.querySelector('[data-uid=\"' + data[this.fields.parentID] + '\"]');\r\n        }\r\n        else {\r\n            element = this.element.querySelector('[data-uid=\"' + data[this.fields.id] + '\"]');\r\n        }\r\n        if (element) {\r\n            var ariaChecked = element.getAttribute('aria-checked');\r\n            if (ariaChecked !== 'true') {\r\n                this.changeState(element, 'indeterminate', null, true, true);\r\n            }\r\n        }\r\n        else if (this.dataType === 2) {\r\n            if (this.parentNodeCheck.indexOf(data[this.fields.id].toString()) === -1) {\r\n                this.parentNodeCheck.push(data[this.fields.id].toString());\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Update the checkedNodes for child and subchild from datasource (hierarchical datasource) at initial rendering\r\n     *\r\n     * @param {Object[]} childItems - The array of child items to update the checked state.\r\n     * @param {Object} treeData - The tree data object containing field values.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.updateChildCheckState = function (childItems, treeData) {\r\n        var count = 0;\r\n        var checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\r\n        for (var index = 0; index < childItems.length; index++) {\r\n            var checkedChild = childItems[parseInt(index.toString(), 10)][this.fields.id] ? childItems[parseInt(index.toString(), 10)][this.fields.id].toString() : '';\r\n            if (childItems[parseInt(index.toString(), 10)][this.fields.isChecked] &&\r\n                !(this.isLoaded) && this.checkedNodes.indexOf(checkedChild) === -1) {\r\n                this.checkedNodes.push(checkedChild);\r\n            }\r\n            if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1 && this.autoCheck) {\r\n                this.checkedNodes.push(checkedChild);\r\n            }\r\n            if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\r\n                count++;\r\n            }\r\n            if (this.checkedNodes.indexOf(checkedChild) > -1 && this.validNodes.indexOf(checkedChild) === -1) {\r\n                this.validNodes.push(checkedChild);\r\n            }\r\n            var subChildItems = getValue(this.fields.child.toString(), childItems[parseInt(index.toString(), 10)]);\r\n            if (subChildItems && subChildItems.length) {\r\n                if (this.parentCheckData.indexOf(treeData) === -1) {\r\n                    this.parentCheckData.push(treeData);\r\n                }\r\n                this.updateChildCheckState(subChildItems, childItems[parseInt(index.toString(), 10)]);\r\n            }\r\n            if (count === childItems.length && this.autoCheck && this.checkedNodes.indexOf(checkedParent) === -1) {\r\n                this.checkedNodes.push(checkedParent);\r\n            }\r\n        }\r\n        if (count !== 0 && this.autoCheck) {\r\n            this.checkIndeterminateState(treeData);\r\n            for (var len = 0; len < this.parentCheckData.length; len++) {\r\n                if ((treeData !== this.parentCheckData[parseInt(len.toString(), 10)]) &&\r\n                    (this.parentCheckData[parseInt(len.toString(), 10)])) {\r\n                    this.checkIndeterminateState(this.parentCheckData[parseInt(len.toString(), 10)]);\r\n                }\r\n            }\r\n        }\r\n        this.parentCheckData = [];\r\n    };\r\n    TreeView.prototype.beforeNodeCreate = function (e) {\r\n        if (this.showCheckBox) {\r\n            var checkboxEle = createCheckBox(this.createElement, true, { cssClass: this.touchClass });\r\n            checkboxEle.classList.add(CHECKBOXWRAP);\r\n            var icon = select('div.' + ICON, e.item);\r\n            var id = e.item.getAttribute('data-uid');\r\n            e.item.childNodes[0].insertBefore(checkboxEle, e.item.childNodes[0].childNodes[isNOU(icon) ? 0 : 1]);\r\n            var checkValue = getValue(e.fields.isChecked, e.curData);\r\n            if (this.checkedNodes.indexOf(id) > -1) {\r\n                select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\r\n                e.item.setAttribute('aria-checked', 'true');\r\n                this.addCheck(e.item);\r\n            }\r\n            else if (!isNOU(checkValue) && checkValue.toString() === 'true') {\r\n                select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\r\n                e.item.setAttribute('aria-checked', 'true');\r\n                this.addCheck(e.item);\r\n            }\r\n            else {\r\n                e.item.setAttribute('aria-checked', 'false');\r\n            }\r\n            var frame = select('.' + CHECKBOXFRAME, checkboxEle);\r\n            EventHandler.add(frame, 'mousedown', this.frameMouseHandler, this);\r\n            EventHandler.add(frame, 'mouseup', this.frameMouseHandler, this);\r\n        }\r\n        if (this.fullRowSelect) {\r\n            this.createFullRow(e.item);\r\n        }\r\n        if (this.allowMultiSelection && !e.item.classList.contains(SELECTED)) {\r\n            e.item.setAttribute('aria-selected', 'false');\r\n        }\r\n        var fields = e.fields;\r\n        this.addActionClass(e, fields.selected, SELECTED);\r\n        this.addActionClass(e, fields.expanded, EXPANDED);\r\n        e.item.setAttribute('tabindex', '-1');\r\n        EventHandler.add(e.item, 'focus', this.focusIn, this);\r\n        if (!isNOU(this.nodeTemplateFn)) {\r\n            var textEle = e.item.querySelector('.' + LISTTEXT);\r\n            var dataId = e.item.getAttribute('data-uid');\r\n            textEle.innerHTML = '';\r\n            this.renderNodeTemplate(e.curData, textEle, dataId);\r\n        }\r\n        var eventArgs = {\r\n            node: e.item,\r\n            nodeData: e.curData,\r\n            text: e.text\r\n        };\r\n        if (!this.isRefreshed) {\r\n            this.trigger('drawNode', eventArgs);\r\n            if (e.curData[this.fields.selectable] === false && !this.showCheckBox) {\r\n                e.item.classList.add(PREVENTSELECT);\r\n                e.item.firstElementChild.setAttribute('style', 'cursor: not-allowed');\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.frameMouseHandler = function (e) {\r\n        var rippleSpan = select('.' + CHECKBOXRIPPLE, e.target.parentElement);\r\n        rippleMouseHandler(e, rippleSpan);\r\n    };\r\n    TreeView.prototype.addActionClass = function (e, action, cssClass) {\r\n        var data = e.curData;\r\n        var actionValue = getValue(action, data);\r\n        if (!isNOU(actionValue) && actionValue.toString() !== 'false') {\r\n            e.item.classList.add(cssClass);\r\n        }\r\n    };\r\n    TreeView.prototype.getDataType = function (ds, mapper) {\r\n        if (this.fields.dataSource instanceof DataManager) {\r\n            for (var i = 0; i < ds.length; i++) {\r\n                if (this.isOffline) {\r\n                    if ((typeof mapper.child === 'string') && isNOU(getValue(mapper.child, ds[parseInt(i.toString(), 10)])) && !isNOU(getValue(mapper.parentID, ds[parseInt(i.toString(), 10)]))) {\r\n                        return 1;\r\n                    }\r\n                }\r\n                else if ((typeof mapper.child === 'string') && isNOU(getValue(mapper.child, ds[parseInt(i.toString(), 10)]))) {\r\n                    return 1;\r\n                }\r\n            }\r\n            return 2;\r\n        }\r\n        for (var i = 0, len = ds.length; i < len; i++) {\r\n            if ((typeof mapper.child === 'string') && (!isNOU(getValue(mapper.child, ds[parseInt(i.toString(), 10)])) || (Object.prototype.hasOwnProperty.call(ds[parseInt(i.toString(), 10)], mapper.child)))) {\r\n                return 2;\r\n            }\r\n            if (this.isChildObject()) {\r\n                return 2;\r\n            }\r\n            if (!isNOU(getValue(mapper.parentID, ds[parseInt(i.toString(), 10)])) ||\r\n                !isNOU(getValue(mapper.hasChildren, ds[parseInt(i.toString(), 10)]))) {\r\n                return 1;\r\n            }\r\n        }\r\n        return 1;\r\n    };\r\n    TreeView.prototype.getGroupedData = function (dataSource, groupBy) {\r\n        var cusQuery = new Query().group(groupBy);\r\n        var ds = ListBase.getDataSource(dataSource, cusQuery);\r\n        var grpItem = [];\r\n        for (var j = 0; j < ds.length; j++) {\r\n            var itemObj = ds[parseInt(j.toString(), 10)].items;\r\n            grpItem.push(itemObj);\r\n        }\r\n        return grpItem;\r\n    };\r\n    TreeView.prototype.getSortedData = function (list) {\r\n        if (list && this.sortOrder !== 'None') {\r\n            list = ListBase.getDataSource(list, ListBase.addSorting(this.sortOrder, this.fields.text));\r\n        }\r\n        return list;\r\n    };\r\n    TreeView.prototype.finalizeNode = function (element) {\r\n        var _this = this;\r\n        var iNodes = selectAll('.' + IMAGE, element);\r\n        for (var k = 0; k < iNodes.length; k++) {\r\n            iNodes[parseInt(k.toString(), 10)].setAttribute('alt', IMAGE);\r\n        }\r\n        if (this.isLoaded) {\r\n            var sNodes = selectAll('.' + SELECTED, element);\r\n            for (var i = 0; i < sNodes.length; i++) {\r\n                this.selectNode(sNodes[parseInt(i.toString(), 10)], null);\r\n                break;\r\n            }\r\n            removeClass(sNodes, SELECTED);\r\n        }\r\n        var cNodes = selectAll('.' + LISTITEM + ':not(.' + EXPANDED + ')', element);\r\n        for (var j = 0; j < cNodes.length; j++) {\r\n            var icon = select('div.' + ICON, cNodes[parseInt(j.toString(), 10)]);\r\n            if (icon && icon.classList.contains(EXPANDABLE)) {\r\n                this.disableExpandAttr(cNodes[parseInt(j.toString(), 10)]);\r\n            }\r\n        }\r\n        var eNodes = selectAll('.' + EXPANDED, element);\r\n        if (!this.loadOnDemand && this.fields.dataSource instanceof DataManager) {\r\n            this.isInitalExpand = this.treeData.filter(function (e) { return e[_this.fields.expanded] === true; }).length > 0\r\n                ? true\r\n                : this.isInitalExpand;\r\n        }\r\n        if (!this.isInitalExpand) {\r\n            for (var i = 0; i < eNodes.length; i++) {\r\n                this.renderChildNodes(eNodes[parseInt(i.toString(), 10)]);\r\n            }\r\n        }\r\n        removeClass(eNodes, EXPANDED);\r\n        this.updateList();\r\n        if (this.isLoaded) {\r\n            this.updateCheckedProp();\r\n        }\r\n    };\r\n    TreeView.prototype.updateCheckedProp = function () {\r\n        if (this.showCheckBox) {\r\n            var nodes = [].concat([], this.checkedNodes);\r\n            this.setProperties({ checkedNodes: nodes }, true);\r\n        }\r\n    };\r\n    TreeView.prototype.ensureIndeterminate = function () {\r\n        if (this.autoCheck) {\r\n            var liElement = selectAll('li', this.element);\r\n            var ulElement = void 0;\r\n            for (var i = 0; i < liElement.length; i++) {\r\n                if (liElement[parseInt(i.toString(), 10)].classList.contains(LISTITEM)) {\r\n                    ulElement = select('.' + PARENTITEM, liElement[parseInt(i.toString(), 10)]);\r\n                    if (ulElement) {\r\n                        this.ensureParentCheckState(liElement[parseInt(i.toString(), 10)]);\r\n                    }\r\n                    else {\r\n                        this.ensureChildCheckState(liElement[parseInt(i.toString(), 10)]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var indeterminate = selectAll('.' + INDETERMINATE, this.element);\r\n            for (var i = 0; i < indeterminate.length; i++) {\r\n                indeterminate[parseInt(i.toString(), 10)].classList.remove(INDETERMINATE);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.ensureParentCheckState = function (element) {\r\n        if (!isNOU(element)) {\r\n            if (element.classList.contains(ROOT)) {\r\n                return;\r\n            }\r\n            var ulElement = element;\r\n            if (element.classList.contains(LISTITEM)) {\r\n                ulElement = select('.' + PARENTITEM, element);\r\n            }\r\n            var checkedNodes = selectAll('.' + CHECKBOXWRAP + ' .' + CHECK, ulElement);\r\n            var indeterminateNodes = selectAll('.' + INDETERMINATE, ulElement);\r\n            var nodes = selectAll('.' + LISTITEM, ulElement);\r\n            var checkBoxEle = element.getElementsByClassName(CHECKBOXWRAP)[0];\r\n            var count = nodes.length;\r\n            var checkedCount = checkedNodes.length;\r\n            var dataUid = element.getAttribute('data-uid');\r\n            if (this.element.classList.contains('e-filtering')) {\r\n                var oldCheckedNodes = new DataManager(this.OldCheckedData).executeLocal(new Query().where('parentID', 'equal', dataUid, true));\r\n                checkedCount = oldCheckedNodes.length;\r\n                var childItems = [];\r\n                if (this.dataType === 1) {\r\n                    childItems = new DataManager(this.DDTTreeData).executeLocal(new Query().where(this.fields.parentID, 'equal', dataUid, true));\r\n                }\r\n                else {\r\n                    childItems = this.getChildNodes(this.DDTTreeData, dataUid);\r\n                }\r\n                count = childItems.length;\r\n            }\r\n            if (count === checkedCount) {\r\n                this.changeState(checkBoxEle, 'check', null, true, true);\r\n            }\r\n            else if (checkedCount > 0 || indeterminateNodes.length > 0) {\r\n                this.changeState(checkBoxEle, 'indeterminate', null, true, true);\r\n            }\r\n            else if (checkedCount === 0) {\r\n                this.changeState(checkBoxEle, 'uncheck', null, true, true);\r\n            }\r\n            var parentUL = closest(element, '.' + PARENTITEM);\r\n            if (!isNOU(parentUL)) {\r\n                var currentParent = closest(parentUL, '.' + LISTITEM);\r\n                this.ensureParentCheckState(currentParent);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.ensureChildCheckState = function (element, e) {\r\n        if (!isNOU(element)) {\r\n            var childElement = select('.' + PARENTITEM, element);\r\n            var checkBoxes = void 0;\r\n            if (!isNOU(childElement)) {\r\n                checkBoxes = selectAll('.' + CHECKBOXWRAP, childElement);\r\n                var isChecked = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\r\n                var parentCheck = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(INDETERMINATE);\r\n                var childCheck = childElement.querySelectorAll('li');\r\n                var checkedState = void 0;\r\n                for (var index = 0; index < checkBoxes.length; index++) {\r\n                    var childId = childCheck[parseInt(index.toString(), 10)].getAttribute('data-uid');\r\n                    if (!isNOU(this.currentLoadData) &&\r\n                        !isNOU(getValue(this.fields.isChecked, this.currentLoadData[parseInt(index.toString(), 10)]))) {\r\n                        checkedState = getValue(this.fields.isChecked, this.currentLoadData[parseInt(index.toString(), 10)]) ? 'check' : 'uncheck';\r\n                        if (this.ele !== -1) {\r\n                            checkedState = isChecked ? 'check' : 'uncheck';\r\n                        }\r\n                        if ((checkedState === 'uncheck') && (!isUndefined(this.parentNodeCheck) && this.autoCheck\r\n                            && this.parentNodeCheck.indexOf(childId) !== -1)) {\r\n                            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\r\n                            checkedState = 'indeterminate';\r\n                        }\r\n                    }\r\n                    else {\r\n                        var isNodeChecked = checkBoxes[parseInt(index.toString(), 10)]\r\n                            .getElementsByClassName(CHECKBOXFRAME)[0]\r\n                            .classList.contains(CHECK);\r\n                        if (isChecked) {\r\n                            checkedState = 'check';\r\n                        }\r\n                        else if (isNodeChecked && !this.isLoaded) {\r\n                            checkedState = 'check';\r\n                        }\r\n                        else if (this.checkedNodes.indexOf(childId) !== -1 && this.isLoaded && (parentCheck || isChecked)) {\r\n                            checkedState = 'check';\r\n                        }\r\n                        else if (childCheck[parseInt(index.toString(), 10)].classList.contains(CHILD) &&\r\n                            (!isUndefined(this.parentNodeCheck) && this.autoCheck\r\n                                && (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1)) {\r\n                            checkedState = 'indeterminate';\r\n                            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\r\n                        }\r\n                        else if (this.dataType === 1 && (!isUndefined(this.parentNodeCheck) && this.autoCheck &&\r\n                            (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1)) {\r\n                            checkedState = 'indeterminate';\r\n                            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\r\n                        }\r\n                        else {\r\n                            checkedState = 'uncheck';\r\n                        }\r\n                    }\r\n                    this.changeState(checkBoxes[parseInt(index.toString(), 10)], checkedState, e, true, true);\r\n                }\r\n            }\r\n            if (this.autoCheck && this.isLoaded) {\r\n                this.updateParentCheckState();\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.doCheckBoxAction = function (nodes, doCheck) {\r\n        if (!isNOU(nodes)) {\r\n            nodes.reverse();\r\n            for (var len = nodes.length - 1; len >= 0; len--) {\r\n                var liEle = this.getElement(nodes[parseInt(len.toString(), 10)]);\r\n                if (isNOU(liEle)) {\r\n                    var node = nodes[len - nodes.length] ? nodes[len - nodes.length].toString()\r\n                        : nodes[parseInt(len.toString(), 10)]\r\n                            ? nodes[parseInt(len.toString(), 10)].toString()\r\n                            : null;\r\n                    if (node !== '' && doCheck && node) {\r\n                        this.setValidCheckedNode(node);\r\n                        this.dynamicCheckState(node, doCheck);\r\n                    }\r\n                    else if (this.checkedNodes.indexOf(node) !== -1 && node !== '' && !doCheck) {\r\n                        this.checkedNodes.splice(this.checkedNodes.indexOf(node), 1);\r\n                        var childItems = this.getChildNodes(this.treeData, node);\r\n                        if (childItems) {\r\n                            for (var i = 0; i < childItems.length; i++) {\r\n                                var id = childItems[parseInt(i.toString(), 10)][this.fields.id]\r\n                                    ? childItems[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                                    : null;\r\n                                if (this.checkedNodes.indexOf(id) !== -1) {\r\n                                    this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\r\n                                    var ele = this.element.querySelector('[data-uid=\"' + id + '\"]');\r\n                                    if (ele) {\r\n                                        this.changeState(ele, 'uncheck', null);\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (this.parentNodeCheck.indexOf(node) !== -1) {\r\n                                this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(node), 1);\r\n                            }\r\n                        }\r\n                        if (node) {\r\n                            this.dynamicCheckState(node, doCheck);\r\n                        }\r\n                        this.updateField(this.treeData, this.fields, node, 'isChecked', null);\r\n                    }\r\n                    continue;\r\n                }\r\n                var checkBox = select('.' + PARENTITEM + ' .' + CHECKBOXWRAP, liEle);\r\n                this.validateCheckNode(checkBox, !doCheck, liEle, null);\r\n            }\r\n        }\r\n        else {\r\n            var checkBoxes = selectAll('.' + CHECKBOXWRAP, this.element);\r\n            if (this.loadOnDemand) {\r\n                for (var index = 0; index < checkBoxes.length; index++) {\r\n                    this.updateFieldChecked(checkBoxes[parseInt(index.toString(), 10)], doCheck);\r\n                    this.changeState(checkBoxes[parseInt(index.toString(), 10)], doCheck ? 'check' : 'uncheck', null, null, null, doCheck);\r\n                }\r\n            }\r\n            else {\r\n                for (var index = 0; index < checkBoxes.length; index++) {\r\n                    this.updateFieldChecked(checkBoxes[parseInt(index.toString(), 10)], doCheck);\r\n                    this.changeState(checkBoxes[parseInt(index.toString(), 10)], doCheck ? 'check' : 'uncheck');\r\n                }\r\n            }\r\n        }\r\n        if (nodes) {\r\n            for (var j = 0; j < nodes.length - 1; j++) {\r\n                var node = nodes[parseInt(j.toString(), 10)] ? nodes[parseInt(j.toString(), 10)].toString() : '';\r\n                if (!doCheck) {\r\n                    this.updateField(this.treeData, this.fields, node, 'isChecked', null);\r\n                }\r\n            }\r\n        }\r\n        if (this.autoCheck) {\r\n            this.updateParentCheckState();\r\n        }\r\n    };\r\n    TreeView.prototype.updateFieldChecked = function (checkbox, doCheck) {\r\n        var currLi = closest(checkbox, '.' + LISTITEM);\r\n        var id = currLi.getAttribute('data-uid');\r\n        var nodeDetails = this.getNodeData(currLi);\r\n        if (nodeDetails.isChecked === 'true' && !doCheck) {\r\n            this.updateField(this.treeData, this.fields, id, 'isChecked', null);\r\n        }\r\n    };\r\n    /**\r\n     * Changes the parent and child  check state while changing the checkedNodes via setmodel\r\n     *\r\n     * @param {string} node - The unique identifier of the node.\r\n     * @param {boolean} doCheck - A boolean value indicating whether to check or uncheck the node.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.dynamicCheckState = function (node, doCheck) {\r\n        if (this.dataType === 1) {\r\n            var count = 0;\r\n            var resultId = new DataManager(this.treeData).executeLocal(new Query().where(this.fields.id, 'equal', node, true));\r\n            if (resultId[0]) {\r\n                var id = resultId[0][this.fields.id] ? resultId[0][this.fields.id].toString() : null;\r\n                var parent_1 = resultId[0][this.fields.parentID] ? resultId[0][this.fields.parentID].toString() : null;\r\n                var parentElement = this.element.querySelector('[data-uid=\"' + parent_1 + '\"]');\r\n                var element = this.element.querySelector('[data-uid=\"' + id + '\"]');\r\n                var childNodes = this.getChildNodes(this.treeData, parent_1);\r\n                if (childNodes) {\r\n                    for (var i = 0; i < childNodes.length; i++) {\r\n                        var childId = childNodes[parseInt(i.toString(), 10)][this.fields.id]\r\n                            ? childNodes[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                            : null;\r\n                        if (this.checkedNodes.indexOf(childId) !== -1) {\r\n                            count++;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.checkedNodes.indexOf(node) !== -1 && parentElement && (id === node) && this.autoCheck) {\r\n                    this.changeState(parentElement, 'indeterminate', null);\r\n                }\r\n                else if (this.checkedNodes.indexOf(node) === -1 && element && (id === node) && !doCheck) {\r\n                    this.changeState(element, 'uncheck', null);\r\n                }\r\n                else if (this.checkedNodes.indexOf(node) !== -1 && element && (id === node) && doCheck) {\r\n                    this.changeState(element, 'check', null);\r\n                }\r\n                else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && (id === node) && this.autoCheck\r\n                    && count !== 0) {\r\n                    this.changeState(parentElement, 'indeterminate', null);\r\n                }\r\n                else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && (id === node) && this.autoCheck\r\n                    && count === 0) {\r\n                    this.changeState(parentElement, 'uncheck', null);\r\n                }\r\n                else if (!element && !parentElement && (id === node) && this.autoCheck) {\r\n                    this.updateIndeterminate(node, doCheck);\r\n                }\r\n            }\r\n        }\r\n        else if (this.dataType === 2 || (this.fields.dataSource instanceof DataManager &&\r\n            this.isOffline)) {\r\n            var id = void 0;\r\n            var parentElement = void 0;\r\n            var check = void 0;\r\n            for (var i = 0; i < this.treeData.length; i++) {\r\n                id = this.treeData[parseInt(i.toString(), 10)][this.fields.id] ? this.treeData[parseInt(i.toString(), 10)][this.fields.id].toString() : '';\r\n                parentElement = this.element.querySelector('[data-uid=\"' + id + '\"]');\r\n                check = parentElement ? select('.' + CHECK, parentElement) : null;\r\n                if (this.checkedNodes.indexOf(id) === -1 && parentElement && check && !doCheck) {\r\n                    this.changeState(parentElement, 'uncheck', null);\r\n                }\r\n                var subChild = getValue(this.fields.child.toString(), this.treeData[parseInt(i.toString(), 10)]);\r\n                if (subChild) {\r\n                    this.updateChildIndeterminate(subChild, id, node, doCheck, id);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * updates the parent and child  check state while changing the checkedNodes via setmodel for listData\r\n     *\r\n     * @param {string} node - The unique identifier of the node.\r\n     * @param {boolean} doCheck - A boolean value indicating whether to check or uncheck the node.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.updateIndeterminate = function (node, doCheck) {\r\n        var indeterminateData = this.getTreeData(node);\r\n        var count = 0;\r\n        var parent;\r\n        if (this.dataType === 1) {\r\n            parent = indeterminateData[0][this.fields.parentID] ? indeterminateData[0][this.fields.parentID].toString() : null;\r\n        }\r\n        var childNodes = this.getChildNodes(this.treeData, parent);\r\n        if (childNodes) {\r\n            for (var i = 0; i < childNodes.length; i++) {\r\n                var childId = childNodes[parseInt(i.toString(), 10)][this.fields.id]\r\n                    ? childNodes[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                    : null;\r\n                if (this.checkedNodes.indexOf(childId) !== -1) {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\r\n        if (parentElement && doCheck) {\r\n            this.changeState(parentElement, 'indeterminate', null);\r\n        }\r\n        else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count !== 0) {\r\n            this.changeState(parentElement, 'indeterminate', null);\r\n        }\r\n        else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count === 0) {\r\n            this.changeState(parentElement, 'uncheck', null);\r\n        }\r\n        else if (!parentElement) {\r\n            if (!doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) !== -1) {\r\n                this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent), 1);\r\n            }\r\n            else if (doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) === -1) {\r\n                this.parentNodeCheck.push(parent);\r\n            }\r\n            else if (!doCheck && this.checkedNodes.indexOf(parent) !== -1 && this.parentNodeCheck.indexOf(parent) === -1\r\n                && count !== 0) {\r\n                this.parentNodeCheck.push(parent);\r\n            }\r\n            this.updateIndeterminate(parent, doCheck);\r\n            if (this.checkedNodes.indexOf(parent) !== -1 && !doCheck) {\r\n                this.checkedNodes.splice(this.checkedNodes.indexOf(parent), 1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * updates the parent and child  check state while changing the checkedNodes via setmodel for hierarchical data\r\n     *\r\n     * @param {Object[]} subChild - Array of child nodes\r\n     * @param {string} parent - Parent identifier\r\n     * @param {string} node - Current node identifier\r\n     * @param {boolean} doCheck - Boolean indicating whether to perform a check\r\n     * @param {string} [child] - Optional child identifier\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.updateChildIndeterminate = function (subChild, parent, node, doCheck, child) {\r\n        var count = 0;\r\n        for (var j = 0; j < subChild.length; j++) {\r\n            var subId = subChild[parseInt(j.toString(), 10)][this.fields.id] ? subChild[parseInt(j.toString(), 10)][this.fields.id].toString() : '';\r\n            if (this.checkedNodes.indexOf(subId) !== -1) {\r\n                count++;\r\n            }\r\n            var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\r\n            var indeterminate = parentElement ? select('.' + INDETERMINATE, parentElement) : null;\r\n            var check = parentElement ? select('.' + CHECK, parentElement) : null;\r\n            var element = this.element.querySelector('[data-uid=\"' + subId + '\"]');\r\n            var childElementCheck = element ? select('.' + CHECK, element) : null;\r\n            if (this.checkedNodes.indexOf(node) !== -1 && parentElement && (subId === node) && this.autoCheck) {\r\n                this.changeState(parentElement, 'indeterminate', null);\r\n            }\r\n            else if (this.checkedNodes.indexOf(node) === -1 && parentElement && !element && (subId === node) && !doCheck) {\r\n                if (this.autoCheck) {\r\n                    this.changeState(parentElement, 'uncheck', null);\r\n                }\r\n                else {\r\n                    if (count !== 0) {\r\n                        this.changeState(parentElement, 'indeterminate', null);\r\n                    }\r\n                    else {\r\n                        this.changeState(parentElement, 'uncheck', null);\r\n                    }\r\n                }\r\n            }\r\n            else if (this.checkedNodes.indexOf(node) === -1 && element && (subId === node) && !doCheck) {\r\n                this.changeState(element, 'uncheck', null);\r\n            }\r\n            else if (this.checkedNodes.indexOf(node) === -1 && indeterminate && (subId === node) && this.autoCheck && count === 0\r\n                && !doCheck) {\r\n                indeterminate.classList.remove(INDETERMINATE);\r\n            }\r\n            else if (this.checkedNodes.indexOf(node) === -1 && !element && check && (subId === node) && count === 0) {\r\n                this.changeState(parentElement, 'uncheck', null);\r\n            }\r\n            else if (this.checkedNodes.indexOf(subId) === -1 && element && childElementCheck && count === 0) {\r\n                this.changeState(element, 'uncheck', null);\r\n            }\r\n            else if (!element && !parentElement && (subId === node) || (this.parentNodeCheck.indexOf(parent) !== -1) && this.autoCheck) {\r\n                var childElement = this.element.querySelector('[data-uid=\"' + child + '\"]');\r\n                if (doCheck && count !== 0) {\r\n                    this.changeState(childElement, 'indeterminate', null);\r\n                }\r\n                else if (doCheck && count === subChild.length && this.checkedNodes.indexOf(parent) === -1) {\r\n                    this.checkedNodes.push(parent);\r\n                }\r\n                else if (!doCheck && count === 0 && this.parentNodeCheck.indexOf(parent) !== -1) {\r\n                    this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent));\r\n                }\r\n                if (this.parentNodeCheck.indexOf(parent) === -1) {\r\n                    this.parentNodeCheck.push(parent);\r\n                }\r\n            }\r\n            var innerChild = getValue(this.fields.child.toString(), subChild[parseInt(j.toString(), 10)]);\r\n            if (innerChild) {\r\n                this.updateChildIndeterminate(innerChild, subId, node, doCheck, child);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.changeState = function (wrapper, state, e, isPrevent, isAdd, doCheck) {\r\n        var _this = this;\r\n        var eventArgs;\r\n        var currLi = closest(wrapper, '.' + LISTITEM);\r\n        if (wrapper === currLi) {\r\n            wrapper = select('.' + CHECKBOXWRAP, currLi);\r\n        }\r\n        if (!isPrevent) {\r\n            this.checkActionNodes = [];\r\n            eventArgs = this.getCheckEvent(currLi, state, e);\r\n            this.trigger('nodeChecking', eventArgs, function (observedArgs) {\r\n                if (!observedArgs.cancel) {\r\n                    _this.nodeCheckAction(wrapper, state, currLi, observedArgs, e, isPrevent, isAdd, doCheck);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.nodeCheckAction(wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck);\r\n        }\r\n    };\r\n    TreeView.prototype.nodeCheckAction = function (wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck) {\r\n        var ariaState;\r\n        var frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME)[0];\r\n        if (state === 'check' && !frameSpan.classList.contains(CHECK)) {\r\n            frameSpan.classList.remove(INDETERMINATE);\r\n            frameSpan.classList.add(CHECK);\r\n            this.addCheck(currLi);\r\n            ariaState = 'true';\r\n        }\r\n        else if (state === 'uncheck' && (frameSpan.classList.contains(CHECK) || frameSpan.classList.contains(INDETERMINATE))) {\r\n            removeClass([frameSpan], [CHECK, INDETERMINATE]);\r\n            this.removeCheck(currLi);\r\n            ariaState = 'false';\r\n        }\r\n        else if (state === 'indeterminate' && this.autoCheck) {\r\n            frameSpan.classList.remove(CHECK);\r\n            frameSpan.classList.add(INDETERMINATE);\r\n            this.removeCheck(currLi);\r\n            ariaState = 'mixed';\r\n        }\r\n        ariaState = state === 'check' ? 'true' : state === 'uncheck' ? 'false' : ariaState;\r\n        if (!isNOU(ariaState)) {\r\n            currLi.setAttribute('aria-checked', ariaState);\r\n        }\r\n        if (isAdd) {\r\n            var data = [].concat([], this.checkActionNodes);\r\n            eventArgs = this.getCheckEvent(currLi, state, e);\r\n            if (isUndefined(isPrevent)) {\r\n                eventArgs.data = data;\r\n            }\r\n        }\r\n        if (doCheck !== undefined) {\r\n            this.ensureStateChange(currLi, doCheck);\r\n        }\r\n        if (!isPrevent) {\r\n            if (!isNOU(ariaState)) {\r\n                currLi.setAttribute('aria-checked', ariaState);\r\n                eventArgs.data[0].checked = ariaState;\r\n                this.trigger('nodeChecked', eventArgs);\r\n                this.checkActionNodes = [];\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.addCheck = function (liEle) {\r\n        var id = liEle.getAttribute('data-uid');\r\n        if (!isNOU(id) && this.checkedNodes.indexOf(id) === -1) {\r\n            this.checkedNodes.push(id);\r\n        }\r\n    };\r\n    TreeView.prototype.removeCheck = function (liEle) {\r\n        var index = this.checkedNodes.indexOf(liEle.getAttribute('data-uid'));\r\n        if (index > -1) {\r\n            this.checkedNodes.splice(index, 1);\r\n        }\r\n    };\r\n    TreeView.prototype.getCheckEvent = function (currLi, action, e) {\r\n        this.checkActionNodes.push(this.getNodeData(currLi));\r\n        var nodeData = this.checkActionNodes;\r\n        return { action: action, cancel: false, isInteracted: isNOU(e) ? false : true, node: currLi, data: nodeData };\r\n    };\r\n    TreeView.prototype.finalize = function () {\r\n        var firstUl = select('.' + PARENTITEM, this.element);\r\n        if (!isNullOrUndefined(firstUl)) {\r\n            firstUl.setAttribute('role', treeAriaAttr.treeRole);\r\n            this.setMultiSelect(this.allowMultiSelection);\r\n            var firstNode = select('.' + LISTITEM, this.element);\r\n            if (firstNode) {\r\n                firstNode.setAttribute('tabindex', '0');\r\n                this.updateIdAttr(null, firstNode);\r\n            }\r\n            if (this.allowTextWrap) {\r\n                this.updateWrap();\r\n            }\r\n            this.renderReactTemplates();\r\n            this.hasPid = this.rootData[0] ? Object.prototype.hasOwnProperty.call(this.rootData[0], this.fields.parentID) : false;\r\n            this.doExpandAction();\r\n        }\r\n    };\r\n    TreeView.prototype.setTextWrap = function () {\r\n        (this.allowTextWrap ? addClass : removeClass)([this.element], LISTWRAP);\r\n        if (Browser.isIE) {\r\n            (this.allowTextWrap ? addClass : removeClass)([this.element], IELISTWRAP);\r\n        }\r\n    };\r\n    TreeView.prototype.updateWrap = function (ulEle) {\r\n        if (!this.fullRowSelect) {\r\n            return;\r\n        }\r\n        var liEle = ulEle ? selectAll('.' + LISTITEM, ulEle) : this.liList;\r\n        var length = liEle.length;\r\n        for (var i = 0; i < length; i++) {\r\n            this.calculateWrap(liEle[parseInt(i.toString(), 10)]);\r\n        }\r\n    };\r\n    TreeView.prototype.calculateWrap = function (liEle) {\r\n        var element = select('.' + FULLROW, liEle);\r\n        if (element && element.nextElementSibling) {\r\n            element.style.height = this.allowTextWrap ? element.nextElementSibling.offsetHeight + 'px' : '';\r\n        }\r\n    };\r\n    TreeView.prototype.doExpandAction = function () {\r\n        var _this = this;\r\n        var eUids = this.expandedNodes;\r\n        if (!this.loadOnDemand && this.fields.dataSource instanceof DataManager) {\r\n            this.isInitalExpand = this.treeData.filter(function (e) { return e[_this.fields.expanded] === true; }).length > 0\r\n                ? true\r\n                : this.isInitalExpand;\r\n        }\r\n        if (this.isInitalExpand && eUids.length > 0) {\r\n            this.setProperties({ expandedNodes: [] }, true);\r\n            if (this.fields.dataSource instanceof DataManager) {\r\n                this.expandGivenNodes(eUids);\r\n            }\r\n            else {\r\n                for (var i = 0; i < eUids.length; i++) {\r\n                    var eNode = select('[data-uid=\"' + eUids[parseInt(i.toString(), 10)] + '\"]', this.element);\r\n                    if (!isNOU(eNode)) {\r\n                        var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\r\n                        if (!isNOU(icon)) {\r\n                            this.expandAction(eNode, icon, null);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (eUids[parseInt(i.toString(), 10)] && this.expandChildren.indexOf(eUids[parseInt(i.toString(), 10)]) === -1) {\r\n                            this.expandChildren.push(eUids[parseInt(i.toString(), 10)].toString());\r\n                        }\r\n                        continue;\r\n                    }\r\n                }\r\n                this.afterFinalized();\r\n            }\r\n        }\r\n        else {\r\n            this.afterFinalized();\r\n        }\r\n    };\r\n    TreeView.prototype.expandGivenNodes = function (arr) {\r\n        var _this = this;\r\n        this.expandCallback(arr[this.index], function () {\r\n            _this.index++;\r\n            if (_this.index < arr.length) {\r\n                _this.expandGivenNodes(arr);\r\n            }\r\n            else {\r\n                _this.afterFinalized();\r\n            }\r\n        });\r\n        if (this.index > 0) {\r\n            this.index = 0;\r\n        }\r\n    };\r\n    TreeView.prototype.expandCallback = function (eUid, callback) {\r\n        var eNode = select('[data-uid=\"' + eUid + '\"]', this.element);\r\n        if (!isNOU(eNode)) {\r\n            var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\r\n            if (!isNOU(icon)) {\r\n                this.expandAction(eNode, icon, null, false, callback);\r\n            }\r\n            callback();\r\n        }\r\n        else {\r\n            callback();\r\n        }\r\n    };\r\n    TreeView.prototype.afterFinalized = function () {\r\n        this.doSelectionAction();\r\n        this.updateCheckedProp();\r\n        this.isAnimate = true;\r\n        this.isInitalExpand = false;\r\n        if ((!this.isLoaded || this.isFieldChange) && !this.isNodeDropped) {\r\n            var eventArgs = { data: this.treeData };\r\n            this.trigger('dataBound', eventArgs);\r\n        }\r\n        this.isLoaded = true;\r\n        this.isNodeDropped = false;\r\n    };\r\n    TreeView.prototype.doSelectionAction = function () {\r\n        var sNodes = selectAll('.' + SELECTED, this.element);\r\n        var sUids = this.selectedNodes;\r\n        if (sUids.length > 0) {\r\n            this.setProperties({ selectedNodes: [] }, true);\r\n            for (var i = 0; i < sUids.length; i++) {\r\n                var sNode = select('[data-uid=\"' + sUids[parseInt(i.toString(), 10)] + '\"]', this.element);\r\n                if (sNode && !(sNode.classList.contains('e-active'))) {\r\n                    this.selectNode(sNode, null, true);\r\n                }\r\n                else {\r\n                    this.selectedNodes.push(sUids[parseInt(i.toString(), 10)]);\r\n                }\r\n                if (!this.allowMultiSelection) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.selectGivenNodes(sNodes);\r\n        }\r\n        removeClass(sNodes, SELECTED);\r\n    };\r\n    TreeView.prototype.selectGivenNodes = function (sNodes) {\r\n        for (var i = 0; i < sNodes.length; i++) {\r\n            if (!sNodes[parseInt(i.toString(), 10)].classList.contains('e-disable')) {\r\n                this.selectNode(sNodes[parseInt(i.toString(), 10)], null, true);\r\n            }\r\n            if (!this.allowMultiSelection) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.clickHandler = function (event) {\r\n        var target = Browser.isDevice && event.originalEvent.changedTouches && !Browser.isIos\r\n            ? document.elementFromPoint(event.originalEvent.changedTouches[0].clientX, event.originalEvent.changedTouches[0].clientY)\r\n            : event.originalEvent.target;\r\n        EventHandler.remove(this.element, 'contextmenu', this.preventContextMenu);\r\n        if (!target || this.dragStartAction) {\r\n            return;\r\n        }\r\n        else {\r\n            var classList = target.classList;\r\n            var li = closest(target, '.' + LISTITEM);\r\n            if (!li || (li.classList.contains(PREVENTSELECT) && !(classList.contains(EXPANDABLE) || classList.contains(COLLAPSIBLE)))) {\r\n                return;\r\n            }\r\n            else if (event.originalEvent.which !== 3) {\r\n                var rippleElement = select('.' + RIPPLEELMENT, li);\r\n                var rippleIcons = select('.' + ICON, li);\r\n                this.removeHover();\r\n                this.setFocusElement(li);\r\n                if (this.showCheckBox && !li.classList.contains('e-disable')) {\r\n                    var checkWrapper = closest(target, '.' + CHECKBOXWRAP);\r\n                    if (!isNOU(checkWrapper)) {\r\n                        var checkElement = select('.' + CHECKBOXFRAME, checkWrapper);\r\n                        this.validateCheckNode(checkWrapper, checkElement.classList.contains(CHECK), li, event.originalEvent);\r\n                        this.triggerClickEvent(event.originalEvent, li);\r\n                        return;\r\n                    }\r\n                }\r\n                if (classList.contains(EXPANDABLE)) {\r\n                    this.expandAction(li, target, event);\r\n                }\r\n                else if (classList.contains(COLLAPSIBLE)) {\r\n                    this.collapseNode(li, target, event);\r\n                }\r\n                else if (rippleElement && rippleIcons) {\r\n                    if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(EXPANDABLE)) {\r\n                        this.expandAction(li, rippleIcons, event);\r\n                    }\r\n                    else if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(COLLAPSIBLE)) {\r\n                        this.collapseNode(li, rippleIcons, event);\r\n                    }\r\n                    else if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\r\n                        this.toggleSelect(li, event.originalEvent, false);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\r\n                        this.toggleSelect(li, event.originalEvent, false);\r\n                    }\r\n                }\r\n            }\r\n            if (event.originalEvent.which === 3) {\r\n                this.isRightClick = true;\r\n            }\r\n            this.triggerClickEvent(event.originalEvent, li);\r\n        }\r\n    };\r\n    TreeView.prototype.nodeCheckedEvent = function (wrapper, isCheck, e) {\r\n        var eventArgs = this.getCheckEvent(wrapper, isCheck ? 'uncheck' : 'check', e);\r\n        eventArgs.data = eventArgs.data.splice(0, eventArgs.data.length - 1);\r\n        this.trigger('nodeChecked', eventArgs);\r\n    };\r\n    TreeView.prototype.updateOldCheckedData = function (data) {\r\n        var dataManager = new DataManager(data);\r\n        var childItems = dataManager.executeLocal(new Query().where('isChecked', 'equal', 'true', true));\r\n        var uncheckedItems = dataManager.executeLocal(new Query().where('isChecked', 'equal', 'false', true));\r\n        if (uncheckedItems.length > 0) {\r\n            var index = this.OldCheckedData.findIndex(function (e) { return e['id'] === uncheckedItems[0]['id']; });\r\n            if (index !== -1) {\r\n                this.OldCheckedData.splice(index, 1);\r\n                return;\r\n            }\r\n        }\r\n        if (childItems.length > 0) {\r\n            var index = this.OldCheckedData.findIndex(function (e) { return e['id'] === childItems[0]['id']; });\r\n            if (index === -1) {\r\n                this.OldCheckedData.push(childItems[0]);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.triggerClickEvent = function (e, li) {\r\n        var eventArgs = {\r\n            event: e,\r\n            node: li\r\n        };\r\n        this.trigger('nodeClicked', eventArgs);\r\n    };\r\n    TreeView.prototype.expandNode = function (currLi, icon, loaded) {\r\n        var _this = this;\r\n        this.renderReactTemplates();\r\n        if (icon.classList.contains(LOAD)) {\r\n            this.hideSpinner(icon);\r\n        }\r\n        if (!this.initialRender) {\r\n            icon.classList.add('interaction');\r\n        }\r\n        if (loaded !== true || (loaded === true && currLi.classList.contains('e-expanded'))) {\r\n            if (this.preventExpand !== true) {\r\n                removeClass([icon], EXPANDABLE);\r\n                addClass([icon], COLLAPSIBLE);\r\n                var start_1 = 0;\r\n                var end_1 = 0;\r\n                var ul_1 = select('.' + PARENTITEM, currLi);\r\n                var liEle_1 = currLi;\r\n                this.setHeight(liEle_1, ul_1);\r\n                var activeElement_1 = select('.' + LISTITEM + '.' + ACTIVE, currLi);\r\n                if (this.isAnimate && !this.isRefreshed) {\r\n                    this.aniObj.animate(ul_1, {\r\n                        name: this.animation.expand.effect,\r\n                        duration: (this.animation.expand.duration === 0 && animationMode === 'Enable') ? 400 : this.animation.expand.duration,\r\n                        timingFunction: this.animation.expand.easing,\r\n                        begin: function () {\r\n                            liEle_1.style.overflow = 'hidden';\r\n                            if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\r\n                                activeElement_1.classList.add(ITEM_ANIMATION_ACTIVE);\r\n                            }\r\n                            start_1 = liEle_1.offsetHeight;\r\n                            end_1 = select('.' + TEXTWRAP, currLi).offsetHeight;\r\n                        },\r\n                        progress: function (args) {\r\n                            args.element.style.display = 'block';\r\n                            _this.animateHeight(args, start_1, end_1);\r\n                        },\r\n                        end: function (args) {\r\n                            args.element.style.display = 'block';\r\n                            if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\r\n                                activeElement_1.classList.remove(ITEM_ANIMATION_ACTIVE);\r\n                            }\r\n                            _this.expandedNode(liEle_1, ul_1, icon);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    this.expandedNode(liEle_1, ul_1, icon);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var ul = select('.' + PARENTITEM, currLi);\r\n            ul.style.display = 'none';\r\n            if (this.fields.dataSource instanceof DataManager === true) {\r\n                this.preventExpand = false;\r\n            }\r\n        }\r\n        if (this.initialRender) {\r\n            icon.classList.add('interaction');\r\n        }\r\n    };\r\n    TreeView.prototype.expandedNode = function (currLi, ul, icon) {\r\n        ul.style.display = 'block';\r\n        currLi.style.display = 'block';\r\n        currLi.style.overflow = '';\r\n        currLi.style.height = '';\r\n        removeClass([icon], PROCESS);\r\n        this.addExpand(currLi);\r\n        if (this.allowTextWrap && this.isLoaded && this.isFirstRender) {\r\n            this.updateWrap(currLi);\r\n            this.isFirstRender = false;\r\n        }\r\n        if (this.isLoaded && this.expandArgs && !this.isRefreshed) {\r\n            this.expandArgs = this.getExpandEvent(currLi, null);\r\n            this.expandArgs.isInteracted = this.isInteracted;\r\n            this.trigger('nodeExpanded', this.expandArgs);\r\n        }\r\n    };\r\n    TreeView.prototype.addExpand = function (liEle) {\r\n        liEle.setAttribute('aria-expanded', 'true');\r\n        removeClass([liEle], NODECOLLAPSED);\r\n        var id = liEle.getAttribute('data-uid');\r\n        if (!isNOU(id) && this.expandedNodes.indexOf(id) === -1) {\r\n            this.expandedNodes.push(id);\r\n        }\r\n    };\r\n    TreeView.prototype.collapseNode = function (currLi, icon, e) {\r\n        var _this = this;\r\n        if (icon.classList.contains(PROCESS)) {\r\n            return;\r\n        }\r\n        else {\r\n            addClass([icon], PROCESS);\r\n        }\r\n        var colArgs;\r\n        if (this.isLoaded) {\r\n            colArgs = this.getExpandEvent(currLi, e);\r\n            this.isInteracted = colArgs.isInteracted;\r\n            this.trigger('nodeCollapsing', colArgs, function (observedArgs) {\r\n                if (observedArgs.cancel) {\r\n                    removeClass([icon], PROCESS);\r\n                }\r\n                else {\r\n                    _this.nodeCollapseAction(currLi, icon, observedArgs);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.nodeCollapseAction(currLi, icon, colArgs);\r\n        }\r\n    };\r\n    TreeView.prototype.nodeCollapseAction = function (currLi, icon, colArgs) {\r\n        var _this = this;\r\n        removeClass([icon], COLLAPSIBLE);\r\n        addClass([icon], EXPANDABLE);\r\n        var start = 0;\r\n        var end = 0;\r\n        var ul = select('.' + PARENTITEM, currLi);\r\n        var liEle = currLi;\r\n        var activeElement = select('.' + LISTITEM + '.' + ACTIVE, currLi);\r\n        if (this.isAnimate) {\r\n            this.aniObj.animate(ul, {\r\n                name: this.animation.collapse.effect,\r\n                duration: (this.animation.collapse.duration === 0 && animationMode === 'Enable') ? 400 : this.animation.collapse.duration,\r\n                timingFunction: this.animation.collapse.easing,\r\n                begin: function () {\r\n                    liEle.style.overflow = 'hidden';\r\n                    if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\r\n                        activeElement.classList.add(ITEM_ANIMATION_ACTIVE);\r\n                    }\r\n                    start = select('.' + TEXTWRAP, currLi).offsetHeight;\r\n                    end = liEle.offsetHeight;\r\n                },\r\n                progress: function (args) {\r\n                    _this.animateHeight(args, start, end);\r\n                },\r\n                end: function (args) {\r\n                    args.element.style.display = 'none';\r\n                    if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\r\n                        activeElement.classList.remove(ITEM_ANIMATION_ACTIVE);\r\n                    }\r\n                    _this.collapsedNode(liEle, ul, icon, colArgs);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.collapsedNode(liEle, ul, icon, colArgs);\r\n        }\r\n    };\r\n    TreeView.prototype.collapsedNode = function (liEle, ul, icon, colArgs) {\r\n        ul.style.display = 'none';\r\n        liEle.style.overflow = '';\r\n        liEle.style.height = '';\r\n        removeClass([icon], PROCESS);\r\n        this.removeExpand(liEle);\r\n        if (this.isLoaded) {\r\n            colArgs = this.getExpandEvent(liEle, null);\r\n            colArgs.isInteracted = this.isInteracted;\r\n            this.trigger('nodeCollapsed', colArgs);\r\n        }\r\n    };\r\n    TreeView.prototype.removeExpand = function (liEle, toRemove) {\r\n        if (toRemove) {\r\n            liEle.removeAttribute('aria-expanded');\r\n        }\r\n        else {\r\n            this.disableExpandAttr(liEle);\r\n        }\r\n        var index = this.expandedNodes.indexOf(liEle.getAttribute('data-uid'));\r\n        if (index > -1) {\r\n            this.expandedNodes.splice(index, 1);\r\n        }\r\n    };\r\n    TreeView.prototype.disableExpandAttr = function (liEle) {\r\n        liEle.setAttribute('aria-expanded', 'false');\r\n        addClass([liEle], NODECOLLAPSED);\r\n    };\r\n    TreeView.prototype.setHeight = function (currLi, ul) {\r\n        ul.style.display = 'block';\r\n        ul.style.visibility = 'hidden';\r\n        currLi.style.height = currLi.offsetHeight + 'px';\r\n        ul.style.display = 'none';\r\n        ul.style.visibility = '';\r\n    };\r\n    TreeView.prototype.animateHeight = function (args, start, end) {\r\n        var remaining = (args.duration - args.timeStamp) / args.duration;\r\n        var currentHeight = (end - start) * remaining + start;\r\n        args.element.parentElement.style.height = currentHeight + 'px';\r\n    };\r\n    TreeView.prototype.renderChildNodes = function (parentLi, expandChild, callback, loaded) {\r\n        var _this = this;\r\n        var eicon = select('div.' + ICON, parentLi);\r\n        if (isNOU(eicon)) {\r\n            return;\r\n        }\r\n        this.showSpinner(eicon);\r\n        var childItems;\r\n        if (this.fields.dataSource instanceof DataManager) {\r\n            var level = this.parents(parentLi, '.' + PARENTITEM).length;\r\n            var mapper_2 = this.getChildFields(this.fields, level, 1);\r\n            if (isNOU(mapper_2) || isNOU(mapper_2.dataSource)) {\r\n                detach(eicon);\r\n                this.removeExpand(parentLi, true);\r\n                return;\r\n            }\r\n            this.treeList.push('false');\r\n            if (this.fields.dataSource instanceof DataManager && this.isOffline) {\r\n                this.treeList.pop();\r\n                childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'));\r\n                this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\r\n            }\r\n            else {\r\n                mapper_2.dataSource.executeQuery(this.getQuery(mapper_2, parentLi.getAttribute('data-uid'))).then(function (e) {\r\n                    _this.treeList.pop();\r\n                    childItems = e.result;\r\n                    if (_this.dataType === 1) {\r\n                        _this.dataType = 2;\r\n                    }\r\n                    _this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\r\n                }).catch(function (e) {\r\n                    _this.trigger('actionFailure', { error: e });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'), false, parseFloat(parentLi.getAttribute('aria-level')) + 1);\r\n            this.currentLoadData = this.getSortedData(childItems);\r\n            if (isNOU(childItems) || childItems.length === 0) {\r\n                detach(eicon);\r\n                if (eicon.classList.contains(LOAD)) {\r\n                    this.hideSpinner(eicon);\r\n                }\r\n                this.removeExpand(parentLi, true);\r\n                return;\r\n            }\r\n            else {\r\n                this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\r\n                parentLi.appendChild(ListBase.createList(this.createElement, this.currentLoadData, this.listBaseOption));\r\n                this.expandNode(parentLi, eicon, loaded);\r\n                this.setSelectionForChildNodes(childItems);\r\n                this.ensureCheckNode(parentLi);\r\n                this.finalizeNode(parentLi);\r\n                this.disableTreeNodes(childItems);\r\n                this.renderSubChild(parentLi, expandChild, loaded);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.loadChild = function (childItems, mapper, eicon, parentLi, expandChild, callback, loaded) {\r\n        this.currentLoadData = childItems;\r\n        if (isNOU(childItems) || childItems.length === 0) {\r\n            detach(eicon);\r\n            this.removeExpand(parentLi, true);\r\n        }\r\n        else {\r\n            this.updateListProp(mapper);\r\n            if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\r\n                var id = parentLi.getAttribute('data-uid');\r\n                var nodeData = this.getNodeObject(id);\r\n                setValue('child', childItems, nodeData);\r\n            }\r\n            this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\r\n            parentLi.appendChild(ListBase.createList(this.createElement, childItems, this.listBaseOption));\r\n            this.expandNode(parentLi, eicon, loaded);\r\n            this.setSelectionForChildNodes(childItems);\r\n            this.ensureCheckNode(parentLi);\r\n            this.finalizeNode(parentLi);\r\n            this.disableTreeNodes(childItems);\r\n            this.renderSubChild(parentLi, expandChild, loaded);\r\n        }\r\n        if (callback) {\r\n            callback();\r\n        }\r\n        if (expandChild) {\r\n            this.expandedNodes.push(parentLi.getAttribute('data-uid'));\r\n        }\r\n        if (this.treeList.length === 0 && !this.isLoaded) {\r\n            this.finalize();\r\n        }\r\n    };\r\n    TreeView.prototype.disableTreeNodes = function (childItems) {\r\n        var i = 0;\r\n        while (i < childItems.length) {\r\n            var id = childItems[parseInt(i.toString(), 10)][this.fields.id]\r\n                ? childItems[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                : null;\r\n            if (this.disableNode !== undefined && this.disableNode.indexOf(id) !== -1) {\r\n                this.doDisableAction([id]);\r\n            }\r\n            i++;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the child Item in selectedState while rendering the child node\r\n     *\r\n     * @param {Object[]} nodes - Array of nodes\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.setSelectionForChildNodes = function (nodes) {\r\n        var i;\r\n        for (i = 0; i < nodes.length; i++) {\r\n            var id = nodes[parseInt(i.toString(), 10)][this.fields.id]\r\n                ? nodes[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                : null;\r\n            if (this.selectedNodes !== undefined && this.selectedNodes.indexOf(id) !== -1) {\r\n                this.doSelectionAction();\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.ensureCheckNode = function (element) {\r\n        if (this.showCheckBox) {\r\n            this.ele = (this.checkedElement) ? this.checkedElement.indexOf(element.getAttribute('data-uid')) : null;\r\n            if (this.autoCheck) {\r\n                this.ensureChildCheckState(element);\r\n                this.ensureParentCheckState(element);\r\n            }\r\n        }\r\n        this.currentLoadData = null;\r\n    };\r\n    TreeView.prototype.getFields = function (mapper, nodeLevel, dataLevel) {\r\n        if (nodeLevel === dataLevel) {\r\n            return mapper;\r\n        }\r\n        else {\r\n            return this.getFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\r\n        }\r\n    };\r\n    TreeView.prototype.getChildFields = function (mapper, nodeLevel, dataLevel) {\r\n        if (nodeLevel === dataLevel) {\r\n            return this.getChildMapper(mapper);\r\n        }\r\n        else {\r\n            return this.getChildFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\r\n        }\r\n    };\r\n    TreeView.prototype.getChildMapper = function (mapper) {\r\n        return (typeof mapper.child === 'string' || isNOU(mapper.child)) ? mapper : mapper.child;\r\n    };\r\n    TreeView.prototype.getChildNodes = function (obj, parentId, isRoot, level) {\r\n        var _this = this;\r\n        if (isRoot === void 0) { isRoot = false; }\r\n        var childNodes;\r\n        if (isNOU(obj)) {\r\n            return childNodes;\r\n        }\r\n        else if (this.dataType === 1) {\r\n            return this.getChildGroup(this.groupedData, parentId, isRoot);\r\n        }\r\n        else {\r\n            if (typeof this.fields.child === 'string') {\r\n                var index = obj.findIndex(function (data) {\r\n                    return getValue(_this.fields.id, data) &&\r\n                        getValue(_this.fields.id, data).toString() === parentId;\r\n                });\r\n                if (index !== -1) {\r\n                    return getValue(this.fields.child, obj[parseInt(index.toString(), 10)]);\r\n                }\r\n                if (index === -1) {\r\n                    for (var i = 0, objlen = obj.length; i < objlen; i++) {\r\n                        var tempArray = getValue(this.fields.child, obj[parseInt(i.toString(), 10)]);\r\n                        var childIndex = !isNOU(tempArray)\r\n                            ? tempArray.findIndex(function (data) {\r\n                                return getValue(_this.fields.id, data) &&\r\n                                    getValue(_this.fields.id, data).toString() === parentId;\r\n                            })\r\n                            : -1;\r\n                        if (childIndex !== -1) {\r\n                            return getValue(this.fields.child, tempArray[parseInt(childIndex.toString(), 10)]);\r\n                        }\r\n                        else if (!isNOU(tempArray)) {\r\n                            childNodes = this.getChildNodes(tempArray, parentId);\r\n                            if (childNodes !== undefined) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (this.isChildObject()) {\r\n                var tempField = !isNOU(level) ? this.fields : this.fields.child;\r\n                var i = 1;\r\n                while (i < level) {\r\n                    if (!isNOU(tempField.child)) {\r\n                        tempField = tempField.child;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                    i++;\r\n                }\r\n                this.updateListProp(tempField);\r\n                var index = obj.findIndex(function (data) {\r\n                    return getValue(_this.fields.id, data) &&\r\n                        getValue(_this.fields.id, data).toString() === parentId;\r\n                });\r\n                if (index !== -1) {\r\n                    return getValue('child', obj[parseInt(index.toString(), 10)]);\r\n                }\r\n                if (index === -1) {\r\n                    for (var i_1 = 0, objlen = obj.length; i_1 < objlen; i_1++) {\r\n                        var tempArray = getValue('child', obj[parseInt(i_1.toString(), 10)]);\r\n                        var childIndex = !isNOU(tempArray)\r\n                            ? tempArray.findIndex(function (data) {\r\n                                return getValue(_this.fields.child.id, data) &&\r\n                                    getValue(_this.fields.child.id, data).toString() === parentId;\r\n                            })\r\n                            : -1;\r\n                        if (childIndex !== -1) {\r\n                            return getValue('child', tempArray[parseInt(childIndex.toString(), 10)]);\r\n                        }\r\n                        else if (!isNOU(tempArray)) {\r\n                            childNodes = this.getChildNodes(tempArray, parentId, false, level);\r\n                            if (childNodes !== undefined) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return childNodes;\r\n    };\r\n    TreeView.prototype.getChildGroup = function (data, parentId, isRoot) {\r\n        var childNodes;\r\n        if (isNOU(data)) {\r\n            return childNodes;\r\n        }\r\n        for (var i = 0, objlen = data.length; i < objlen; i++) {\r\n            if (!isNOU(data[parseInt(i.toString(), 10)][0]) &&\r\n                !isNOU(getValue(this.fields.parentID, data[parseInt(i.toString(), 10)][0]))) {\r\n                if (getValue(this.fields.parentID, data[parseInt(i.toString(), 10)][0]).toString() === parentId) {\r\n                    return data[parseInt(i.toString(), 10)];\r\n                }\r\n            }\r\n            else if (isRoot) {\r\n                return data[parseInt(i.toString(), 10)];\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n        return childNodes;\r\n    };\r\n    TreeView.prototype.renderSubChild = function (element, expandChild, loaded) {\r\n        if (expandChild) {\r\n            var cIcons = selectAll('.' + EXPANDABLE, element);\r\n            for (var i = 0, len = cIcons.length; i < len; i++) {\r\n                var icon = cIcons[parseInt(i.toString(), 10)];\r\n                if (element.querySelector('.e-icons') !== cIcons[parseInt(i.toString(), 10)]) {\r\n                    var curLi = closest(icon, '.' + LISTITEM);\r\n                    this.expandArgs = this.getExpandEvent(curLi, null);\r\n                    if (loaded !== true) {\r\n                        this.trigger('nodeExpanding', this.expandArgs);\r\n                    }\r\n                    this.renderChildNodes(curLi, expandChild, null, loaded);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.toggleSelect = function (li, e, multiSelect) {\r\n        if (!li.classList.contains('e-disable')) {\r\n            if (this.allowMultiSelection && ((e && e.ctrlKey) || multiSelect) && this.isActive(li)) {\r\n                this.unselectNode(li, e);\r\n            }\r\n            else {\r\n                this.selectNode(li, e, multiSelect);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.isActive = function (li) {\r\n        return li.classList.contains(ACTIVE) ? true : false;\r\n    };\r\n    TreeView.prototype.selectNode = function (li, e, multiSelect) {\r\n        var _this = this;\r\n        if (isNOU(li) || (!this.allowMultiSelection && this.isActive(li) && !isNOU(e))) {\r\n            this.setFocusElement(li);\r\n            return;\r\n        }\r\n        var eventArgs;\r\n        if (this.isLoaded) {\r\n            eventArgs = this.getSelectEvent(li, 'select', e);\r\n            this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\r\n                if ((!observedArgs.cancel) && !observedArgs.node.classList.contains(PREVENTSELECT)) {\r\n                    _this.nodeSelectAction(li, e, observedArgs, multiSelect);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.nodeSelectAction(li, e, eventArgs, multiSelect);\r\n        }\r\n    };\r\n    TreeView.prototype.nodeSelectAction = function (li, e, eventArgs, multiSelect) {\r\n        if (!this.allowMultiSelection || (!multiSelect && (!e || (e && !(e.ctrlKey || e.metaKey))))) {\r\n            this.removeSelectAll();\r\n        }\r\n        if (this.allowMultiSelection && e && e.shiftKey) {\r\n            if (!this.startNode) {\r\n                this.startNode = li;\r\n            }\r\n            var startIndex = this.liList.indexOf(this.startNode);\r\n            var endIndex = this.liList.indexOf(li);\r\n            if (startIndex > endIndex) {\r\n                var temp = startIndex;\r\n                startIndex = endIndex;\r\n                endIndex = temp;\r\n            }\r\n            for (var i = startIndex; i <= endIndex; i++) {\r\n                var currNode = this.liList[parseInt(i.toString(), 10)];\r\n                if (isVisible(currNode) && !currNode.classList.contains('e-disable')) {\r\n                    this.addSelect(currNode);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.startNode = li;\r\n            this.addSelect(li);\r\n        }\r\n        if (this.isLoaded) {\r\n            eventArgs.nodeData = this.getNodeData(li);\r\n            this.trigger('nodeSelected', eventArgs);\r\n            this.isRightClick = false;\r\n        }\r\n        this.isRightClick = false;\r\n    };\r\n    TreeView.prototype.unselectNode = function (li, e) {\r\n        var _this = this;\r\n        var eventArgs;\r\n        if (this.isLoaded) {\r\n            eventArgs = this.getSelectEvent(li, 'un-select', e);\r\n            this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\r\n                if (!observedArgs.cancel) {\r\n                    _this.nodeUnselectAction(li, observedArgs);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.nodeUnselectAction(li, eventArgs);\r\n        }\r\n    };\r\n    TreeView.prototype.nodeUnselectAction = function (li, eventArgs) {\r\n        this.removeSelect(li);\r\n        this.setFocusElement(li);\r\n        if (this.isLoaded) {\r\n            eventArgs.nodeData = this.getNodeData(li);\r\n            this.trigger('nodeSelected', eventArgs);\r\n        }\r\n    };\r\n    TreeView.prototype.setFocusElement = function (li) {\r\n        if (!isNOU(li)) {\r\n            var focusedNode = this.getFocusedNode();\r\n            if (focusedNode) {\r\n                removeClass([focusedNode], FOCUS);\r\n                focusedNode.setAttribute('tabindex', '-1');\r\n            }\r\n            addClass([li], FOCUS);\r\n            li.setAttribute('tabindex', '0');\r\n            EventHandler.add(li, 'blur', this.focusOut, this);\r\n            this.updateIdAttr(focusedNode, li);\r\n        }\r\n    };\r\n    TreeView.prototype.addSelect = function (liEle) {\r\n        liEle.setAttribute('aria-selected', 'true');\r\n        addClass([liEle], ACTIVE);\r\n        var id = liEle.getAttribute('data-uid');\r\n        if (!isNOU(id) && this.selectedNodes.indexOf(id) === -1) {\r\n            this.selectedNodes.push(id);\r\n        }\r\n    };\r\n    TreeView.prototype.removeSelect = function (liEle) {\r\n        if (this.allowMultiSelection) {\r\n            liEle.setAttribute('aria-selected', 'false');\r\n        }\r\n        else {\r\n            liEle.removeAttribute('aria-selected');\r\n        }\r\n        removeClass([liEle], ACTIVE);\r\n        var index = this.selectedNodes.indexOf(liEle.getAttribute('data-uid'));\r\n        if (index > -1) {\r\n            this.selectedNodes.splice(index, 1);\r\n        }\r\n    };\r\n    TreeView.prototype.removeSelectAll = function () {\r\n        var selectedLI = this.element.querySelectorAll('.' + ACTIVE);\r\n        for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\r\n            var ele = selectedLI_1[_i];\r\n            if (this.allowMultiSelection) {\r\n                ele.setAttribute('aria-selected', 'false');\r\n            }\r\n            else {\r\n                ele.removeAttribute('aria-selected');\r\n            }\r\n        }\r\n        removeClass(selectedLI, ACTIVE);\r\n        this.setProperties({ selectedNodes: [] }, true);\r\n    };\r\n    TreeView.prototype.getSelectEvent = function (currLi, action, e) {\r\n        var nodeData = this.getNodeData(currLi);\r\n        return { action: action, cancel: false, isInteracted: isNOU(e) ? false : true, node: currLi, nodeData: nodeData };\r\n    };\r\n    TreeView.prototype.setExpandOnType = function () {\r\n        this.expandOnType = (this.expandOn === 'Auto') ? (Browser.isDevice ? 'Click' : 'DblClick') : this.expandOn;\r\n    };\r\n    TreeView.prototype.expandHandler = function (e) {\r\n        var target = Browser.isDevice && e.originalEvent.changedTouches && !Browser.isIos\r\n            ? document.elementFromPoint(e.originalEvent.changedTouches[0].clientX, e.originalEvent.changedTouches[0].clientY)\r\n            : e.originalEvent.target;\r\n        if (!target || target.classList.contains(INPUT) || target.classList.contains(ROOT) ||\r\n            target.classList.contains(PARENTITEM) || target.classList.contains(LISTITEM) ||\r\n            target.classList.contains(ICON) || this.showCheckBox && closest(target, '.' + CHECKBOXWRAP)) {\r\n            return;\r\n        }\r\n        else {\r\n            this.expandCollapseAction(closest(target, '.' + LISTITEM), e);\r\n        }\r\n    };\r\n    TreeView.prototype.expandCollapseAction = function (currLi, e) {\r\n        var icon = select('div.' + ICON, currLi);\r\n        if (!icon || icon.classList.contains(PROCESS)) {\r\n            return;\r\n        }\r\n        else {\r\n            var classList = icon.classList;\r\n            if (classList.contains(EXPANDABLE)) {\r\n                this.expandAction(currLi, icon, e);\r\n            }\r\n            else if (classList.contains(COLLAPSIBLE)) {\r\n                this.collapseNode(currLi, icon, e);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.expandAction = function (currLi, icon, e, expandChild, callback) {\r\n        var _this = this;\r\n        if (icon.classList.contains(PROCESS)) {\r\n            return;\r\n        }\r\n        else {\r\n            addClass([icon], PROCESS);\r\n        }\r\n        if (this.isLoaded && !this.isRefreshed) {\r\n            this.expandArgs = this.getExpandEvent(currLi, e);\r\n            this.isInteracted = this.expandArgs.isInteracted;\r\n            this.trigger('nodeExpanding', this.expandArgs, function (observedArgs) {\r\n                if (observedArgs.cancel) {\r\n                    removeClass([icon], PROCESS);\r\n                }\r\n                else {\r\n                    _this.nodeExpandAction(currLi, icon, expandChild, callback);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.nodeExpandAction(currLi, icon, expandChild, callback);\r\n        }\r\n    };\r\n    TreeView.prototype.nodeExpandAction = function (currLi, icon, expandChild, callback) {\r\n        var ul = select('.' + PARENTITEM, currLi);\r\n        if (ul && ul.nodeName === 'UL') {\r\n            this.expandNode(currLi, icon);\r\n        }\r\n        else {\r\n            this.isFirstRender = true;\r\n            this.renderChildNodes(currLi, expandChild, callback);\r\n            var liEles = selectAll('.' + LISTITEM, currLi);\r\n            for (var i = 0; i < liEles.length; i++) {\r\n                var id = this.getId(liEles[parseInt(i.toString(), 10)]);\r\n                if (this.expandChildren.indexOf(id) !== -1 && this.expandChildren !== undefined) {\r\n                    var icon_1 = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEles[parseInt(i.toString(), 10)]));\r\n                    if (!isNOU(icon_1)) {\r\n                        this.expandAction(liEles[parseInt(i.toString(), 10)], icon_1, null);\r\n                    }\r\n                    this.expandChildren.splice(this.expandChildren.indexOf(id), 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.keyActionHandler = function (e) {\r\n        var _this = this;\r\n        var target = e.target;\r\n        var focusedNode = this.getFocusedNode();\r\n        if (target && target.classList.contains(INPUT)) {\r\n            var inpEle = target;\r\n            if (e.action === 'enter') {\r\n                inpEle.blur();\r\n            }\r\n            else if (e.action === 'escape') {\r\n                inpEle.value = this.oldText;\r\n                inpEle.blur();\r\n            }\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        var eventArgs = {\r\n            cancel: false,\r\n            event: e,\r\n            node: focusedNode\r\n        };\r\n        this.trigger('keyPress', eventArgs, function (observedArgs) {\r\n            if (!observedArgs.cancel) {\r\n                switch (e.action) {\r\n                    case 'space':\r\n                        if (_this.showCheckBox) {\r\n                            _this.checkNode(e);\r\n                        }\r\n                        else {\r\n                            _this.toggleSelect(focusedNode, e);\r\n                        }\r\n                        break;\r\n                    case 'moveRight':\r\n                        _this.openNode(_this.enableRtl ? false : true, e);\r\n                        break;\r\n                    case 'moveLeft':\r\n                        _this.openNode(_this.enableRtl ? true : false, e);\r\n                        break;\r\n                    case 'shiftDown':\r\n                        _this.shiftKeySelect(true, e);\r\n                        break;\r\n                    case 'moveDown':\r\n                    case 'ctrlDown':\r\n                    case 'csDown':\r\n                        _this.navigateNode(true);\r\n                        break;\r\n                    case 'shiftUp':\r\n                        _this.shiftKeySelect(false, e);\r\n                        break;\r\n                    case 'moveUp':\r\n                    case 'ctrlUp':\r\n                    case 'csUp':\r\n                        _this.navigateNode(false);\r\n                        break;\r\n                    case 'home':\r\n                    case 'shiftHome':\r\n                    case 'ctrlHome':\r\n                    case 'csHome':\r\n                        _this.navigateRootNode(true);\r\n                        break;\r\n                    case 'end':\r\n                    case 'shiftEnd':\r\n                    case 'ctrlEnd':\r\n                    case 'csEnd':\r\n                        _this.navigateRootNode(false);\r\n                        break;\r\n                    case 'enter':\r\n                    case 'ctrlEnter':\r\n                    case 'shiftEnter':\r\n                    case 'csEnter':\r\n                    case 'shiftSpace':\r\n                    case 'ctrlSpace':\r\n                        _this.toggleSelect(focusedNode, e);\r\n                        break;\r\n                    case 'f2':\r\n                        if (_this.allowEditing && !focusedNode.classList.contains('e-disable')) {\r\n                            _this.createTextbox(focusedNode);\r\n                        }\r\n                        break;\r\n                    case 'ctrlA':\r\n                        if (_this.allowMultiSelection) {\r\n                            var sNodes = selectAll('.' + LISTITEM + ':not(.' + ACTIVE + ')', _this.element);\r\n                            _this.selectGivenNodes(sNodes);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    TreeView.prototype.navigateToFocus = function (isUp) {\r\n        var focusNode = this.getFocusedNode().querySelector('.' + TEXTWRAP);\r\n        var pos = focusNode.getBoundingClientRect();\r\n        var parent = this.getScrollParent(this.element);\r\n        if (!isNOU(parent)) {\r\n            var parentPos = parent.getBoundingClientRect();\r\n            if (pos.bottom > parentPos.bottom) {\r\n                parent.scrollTop += pos.bottom - parentPos.bottom;\r\n            }\r\n            else if (pos.top < parentPos.top) {\r\n                parent.scrollTop -= parentPos.top - pos.top;\r\n            }\r\n        }\r\n        var isVisible = this.isVisibleInViewport(focusNode);\r\n        if (!isVisible) {\r\n            focusNode.scrollIntoView(isUp);\r\n        }\r\n    };\r\n    TreeView.prototype.isVisibleInViewport = function (txtWrap) {\r\n        var pos = txtWrap.getBoundingClientRect();\r\n        return (pos.top >= 0 && pos.left >= 0 && pos.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n            pos.right <= (window.innerWidth || document.documentElement.clientWidth));\r\n    };\r\n    TreeView.prototype.getScrollParent = function (node) {\r\n        if (isNOU(node)) {\r\n            return null;\r\n        }\r\n        return (node.scrollHeight > node.clientHeight) ? node : this.getScrollParent(node.parentElement);\r\n    };\r\n    TreeView.prototype.shiftKeySelect = function (isTowards, e) {\r\n        if (this.allowMultiSelection) {\r\n            var focusedNode = this.getFocusedNode();\r\n            var nextNode = isTowards ? this.getNextNode(focusedNode) : this.getPrevNode(focusedNode);\r\n            this.removeHover();\r\n            this.setFocusElement(nextNode);\r\n            this.toggleSelect(nextNode, e, false);\r\n            this.navigateToFocus(!isTowards);\r\n        }\r\n        else {\r\n            this.navigateNode(isTowards);\r\n        }\r\n    };\r\n    TreeView.prototype.checkNode = function (e) {\r\n        var focusedNode = this.getFocusedNode();\r\n        var checkWrap = select('.' + CHECKBOXWRAP, focusedNode);\r\n        var isChecked = select(' .' + CHECKBOXFRAME, checkWrap).classList.contains(CHECK);\r\n        if (!focusedNode.classList.contains('e-disable')) {\r\n            if (focusedNode.getElementsByClassName('e-checkbox-disabled').length === 0) {\r\n                this.validateCheckNode(checkWrap, isChecked, focusedNode, e);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.validateCheckNode = function (checkWrap, isCheck, li, e) {\r\n        var _this = this;\r\n        var currLi = closest(checkWrap, '.' + LISTITEM);\r\n        this.checkActionNodes = [];\r\n        var ariaState = !isCheck ? 'true' : 'false';\r\n        if (!isNOU(ariaState)) {\r\n            currLi.setAttribute('aria-checked', ariaState);\r\n        }\r\n        var eventArgs = this.getCheckEvent(currLi, isCheck ? 'uncheck' : 'check', e);\r\n        this.trigger('nodeChecking', eventArgs, function (observedArgs) {\r\n            if (!observedArgs.cancel) {\r\n                _this.nodeCheckingAction(checkWrap, isCheck, li, observedArgs, e);\r\n            }\r\n        });\r\n    };\r\n    TreeView.prototype.nodeCheckingAction = function (checkWrap, isCheck, li, eventArgs, e) {\r\n        if (this.checkedElement.indexOf(li.getAttribute('data-uid')) === -1) {\r\n            this.checkedElement.push(li.getAttribute('data-uid'));\r\n            if (this.autoCheck) {\r\n                var child = this.getChildNodes(this.treeData, li.getAttribute('data-uid'));\r\n                if (child !== null) {\r\n                    this.allCheckNode(child, this.checkedElement, null, null, false);\r\n                }\r\n                else {\r\n                    child = null;\r\n                }\r\n            }\r\n        }\r\n        this.changeState(checkWrap, isCheck ? 'uncheck' : 'check', e, true);\r\n        if (this.autoCheck) {\r\n            this.ensureChildCheckState(li);\r\n            this.updateOldCheckedData([this.getNodeData(li)]);\r\n            this.ensureParentCheckState(closest(closest(li, '.' + PARENTITEM), '.' + LISTITEM));\r\n            var doCheck = void 0;\r\n            if (eventArgs.action === 'check') {\r\n                doCheck = true;\r\n            }\r\n            else if (eventArgs.action === 'uncheck') {\r\n                doCheck = false;\r\n            }\r\n            this.ensureStateChange(li, doCheck);\r\n        }\r\n        this.nodeCheckedEvent(checkWrap, isCheck, e);\r\n    };\r\n    /**\r\n     * Update checkedNodes when UI interaction happens before the child node renders in DOM\r\n     *\r\n     * @param {Element} li - The list item element\r\n     * @param {boolean} [doCheck] - Optional parameter to specify whether to perform a check\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.ensureStateChange = function (li, doCheck) {\r\n        var childElement = select('.' + PARENTITEM, li);\r\n        var parentIndex = li.getAttribute('data-uid');\r\n        var mapper = this.fields;\r\n        if (this.dataType === 1 && this.autoCheck) {\r\n            var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.parentID, 'equal', parentIndex, true));\r\n            for (var i = 0; i < resultData.length; i++) {\r\n                var resultId = resultData[parseInt(i.toString(), 10)][this.fields.id]\r\n                    ? resultData[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                    : null;\r\n                var isCheck = resultData[parseInt(i.toString(), 10)][this.fields.isChecked]\r\n                    ? resultData[parseInt(i.toString(), 10)][this.fields.isChecked].toString()\r\n                    : null;\r\n                if (this.checkedNodes.indexOf(parentIndex) !== -1 && this.checkedNodes.indexOf(resultId) === -1) {\r\n                    this.checkedNodes.push(resultId);\r\n                    var childItems = this.getChildNodes(this.treeData, resultId);\r\n                    this.getChildItems(childItems, doCheck);\r\n                    if (this.parentNodeCheck.indexOf(resultId) !== -1) {\r\n                        this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\r\n                    }\r\n                }\r\n                else if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null &&\r\n                    this.checkedNodes.indexOf(resultId) !== -1) {\r\n                    this.checkedNodes.splice(this.checkedNodes.indexOf(resultId), 1);\r\n                    if (isCheck === 'true') {\r\n                        this.updateField(this.treeData, this.fields, resultId, 'isChecked', null);\r\n                    }\r\n                    if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null ||\r\n                        this.parentNodeCheck.indexOf(resultId) !== -1) {\r\n                        var childNodes = this.getChildNodes(this.treeData, resultId);\r\n                        this.getChildItems(childNodes, doCheck);\r\n                        if (this.parentNodeCheck.indexOf(resultId) !== -1) {\r\n                            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var childItems = this.getChildNodes(this.treeData, resultId);\r\n                    this.getChildItems(childItems, doCheck);\r\n                }\r\n            }\r\n        }\r\n        else if (this.dataType === 1 && !this.autoCheck) {\r\n            if (!doCheck) {\r\n                var checkedData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\r\n                for (var i = 0; i < checkedData.length; i++) {\r\n                    var id = checkedData[parseInt(i.toString(), 10)][this.fields.id]\r\n                        ? checkedData[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                        : null;\r\n                    if (this.checkedNodes.indexOf(id) !== -1) {\r\n                        this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\r\n                    }\r\n                    this.updateField(this.treeData, this.fields, id, 'isChecked', null);\r\n                }\r\n                this.checkedNodes = [];\r\n            }\r\n            else {\r\n                for (var i = 0; i < this.treeData.length; i++) {\r\n                    var checkedId = this.treeData[parseInt(i.toString(), 10)][this.fields.id]\r\n                        ? this.treeData[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                        : null;\r\n                    if (this.checkedNodes.indexOf(checkedId) === -1) {\r\n                        this.checkedNodes.push(checkedId);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var childItems = this.getChildNodes(this.treeData, parentIndex);\r\n            if (childItems) {\r\n                this.childStateChange(childItems, parentIndex, childElement, doCheck);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.getChildItems = function (childItems, doCheck) {\r\n        for (var i = 0; i < childItems.length; i++) {\r\n            var childId = childItems[parseInt(i.toString(), 10)][this.fields.id]\r\n                ? childItems[parseInt(i.toString(), 10)][this.fields.id].toString()\r\n                : null;\r\n            var childIsCheck = childItems[parseInt(i.toString(), 10)][this.fields.isChecked]\r\n                ? childItems[parseInt(i.toString(), 10)][this.fields.isChecked].toString()\r\n                : null;\r\n            if (this.checkedNodes.indexOf(childId) !== -1 && !doCheck) {\r\n                this.checkedNodes.splice(this.checkedNodes.indexOf(childId), 1);\r\n            }\r\n            if (this.checkedNodes.indexOf(childId) === -1 && doCheck) {\r\n                this.checkedNodes.push(childId);\r\n            }\r\n            if (childIsCheck === 'true' && !doCheck) {\r\n                this.updateField(this.treeData, this.fields, childId, 'isChecked', null);\r\n            }\r\n            var subChildItems = this.getChildNodes(this.treeData, childId);\r\n            if (subChildItems.length > 0) {\r\n                this.getChildItems(subChildItems, doCheck);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Update checkedNodes when UI interaction happens before the child node renders in DOM for hierarchical DS\r\n     *\r\n     * @param {Object[]} childItems - Array of child items\r\n     * @param {string} parent - Parent identifier\r\n     * @param {Element} childElement - Child DOM element\r\n     * @param {boolean} [doCheck] - Optional parameter to specify whether to perform a check\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.childStateChange = function (childItems, parent, childElement, doCheck) {\r\n        for (var i = 0; i < childItems.length; i++) {\r\n            var checkedChild = childItems[parseInt(i.toString(), 10)][this.fields.id] ? childItems[parseInt(i.toString(), 10)][this.fields.id].toString() : '';\r\n            var isCheck = childItems[parseInt(i.toString(), 10)][this.fields.isChecked]\r\n                ? childItems[parseInt(i.toString(), 10)][this.fields.isChecked].toString()\r\n                : null;\r\n            if (this.autoCheck) {\r\n                if (this.checkedNodes.indexOf(parent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\r\n                    this.checkedNodes.push(checkedChild);\r\n                    if (this.parentNodeCheck.indexOf(checkedChild) !== -1) {\r\n                        this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(checkedChild), 1);\r\n                    }\r\n                }\r\n                else if (this.checkedNodes.indexOf(parent) === -1 && this.checkedNodes.indexOf(checkedChild) !== -1 && !doCheck) {\r\n                    this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\r\n                    if (isCheck === 'true') {\r\n                        this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\r\n                    }\r\n                }\r\n            }\r\n            else if (!this.autoCheck) {\r\n                if (!doCheck) {\r\n                    if (this.checkedNodes.indexOf(checkedChild) !== -1) {\r\n                        this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\r\n                    }\r\n                    this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\r\n                    this.checkedNodes = [];\r\n                }\r\n                else {\r\n                    if (this.checkedNodes.indexOf(checkedChild) === -1) {\r\n                        this.checkedNodes.push(checkedChild);\r\n                    }\r\n                }\r\n            }\r\n            var subChild = this.getChildNodes([childItems[parseInt(i.toString(), 10)]], checkedChild);\r\n            if (subChild) {\r\n                this.childStateChange(subChild, parent, childElement, doCheck);\r\n            }\r\n        }\r\n    };\r\n    //This method can be used to get all child nodes of a parent by passing the children of a parent along with 'validateCheck' set to false\r\n    TreeView.prototype.allCheckNode = function (child, newCheck, checked, childCheck, validateCheck) {\r\n        if (child) {\r\n            for (var length_1 = 0; length_1 < child.length; length_1++) {\r\n                var childId = getValue(this.fields.id, child[parseInt(length_1.toString(), 10)]);\r\n                var check = this.element.querySelector('[data-uid=\"' + childId + '\"]');\r\n                //Validates isChecked case while no UI interaction has been performed on the node or it's parent\r\n                if (validateCheck !== false && this.checkedElement.indexOf(childId.toString()) === -1) {\r\n                    if (((check === null && !isNOU(child[parseInt(length_1.toString(), 10)][this.fields.isChecked]) &&\r\n                        newCheck.indexOf(childId.toString()) === -1)\r\n                        || childCheck === 0 || checked === 2)) {\r\n                        if (child[parseInt(length_1.toString(), 10)][this.fields.isChecked] !== false || checked === 2) {\r\n                            newCheck.push(childId.toString());\r\n                        }\r\n                        else {\r\n                            childCheck = null;\r\n                        }\r\n                        childCheck = (child[parseInt(length_1.toString(), 10)][this.fields.isChecked] !== false || checked === 2) ? 0 : null;\r\n                    }\r\n                }\r\n                //Pushes child checked node done thro' UI interaction\r\n                if (newCheck.indexOf(childId.toString()) === -1 && isNOU(checked)) {\r\n                    newCheck.push(childId.toString());\r\n                }\r\n                var hierChildId = getValue(this.fields.child.toString(), child[parseInt(length_1.toString(), 10)]);\r\n                //Gets if any next level children are available for child nodes\r\n                if (getValue(this.fields.hasChildren, child[parseInt(length_1.toString(), 10)]) === true || hierChildId) {\r\n                    var id = getValue(this.fields.id, child[parseInt(length_1.toString(), 10)]);\r\n                    var childId_1 = void 0;\r\n                    if (this.dataType === 1) {\r\n                        childId_1 = this.getChildNodes(this.treeData, id.toString());\r\n                    }\r\n                    else {\r\n                        childId_1 = hierChildId;\r\n                    }\r\n                    if (childId_1) {\r\n                        if (isNOU(validateCheck)) {\r\n                            this.allCheckNode(childId_1, newCheck, checked, childCheck);\r\n                        }\r\n                        else {\r\n                            this.allCheckNode(childId_1, newCheck, checked, childCheck, validateCheck);\r\n                        }\r\n                        childCheck = null;\r\n                    }\r\n                }\r\n                childCheck = null;\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.openNode = function (toBeOpened, e) {\r\n        var focusedNode = this.getFocusedNode();\r\n        var icon = select('div.' + ICON, focusedNode);\r\n        if (toBeOpened) {\r\n            if (!icon) {\r\n                return;\r\n            }\r\n            else if (icon.classList.contains(EXPANDABLE)) {\r\n                this.expandAction(focusedNode, icon, e);\r\n            }\r\n            else {\r\n                this.focusNextNode(focusedNode, true);\r\n            }\r\n        }\r\n        else {\r\n            if (icon && icon.classList.contains(COLLAPSIBLE)) {\r\n                this.collapseNode(focusedNode, icon, e);\r\n            }\r\n            else {\r\n                var parentLi = closest(closest(focusedNode, '.' + PARENTITEM), '.' + LISTITEM);\r\n                if (!parentLi) {\r\n                    return;\r\n                }\r\n                else {\r\n                    if (!parentLi.classList.contains('e-disable')) {\r\n                        this.setFocus(focusedNode, parentLi);\r\n                        this.navigateToFocus(true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.navigateNode = function (isTowards) {\r\n        var focusedNode = this.getFocusedNode();\r\n        this.focusNextNode(focusedNode, isTowards);\r\n    };\r\n    TreeView.prototype.navigateRootNode = function (isBackwards) {\r\n        var focusedNode = this.getFocusedNode();\r\n        var rootNode = isBackwards ? this.getRootNode() : this.getEndNode();\r\n        if (!rootNode.classList.contains('e-disable')) {\r\n            this.setFocus(focusedNode, rootNode);\r\n            this.navigateToFocus(isBackwards);\r\n        }\r\n    };\r\n    TreeView.prototype.getFocusedNode = function () {\r\n        var selectedItem;\r\n        var fNode = select('.' + LISTITEM + '[tabindex=\"0\"]', this.element);\r\n        if (isNOU(fNode)) {\r\n            selectedItem = select('.' + LISTITEM, this.element);\r\n        }\r\n        return isNOU(fNode) ? (isNOU(selectedItem) ? this.element.firstElementChild : selectedItem) : fNode;\r\n    };\r\n    TreeView.prototype.focusNextNode = function (li, isTowards) {\r\n        var nextNode = isTowards ? this.getNextNode(li) : this.getPrevNode(li);\r\n        this.setFocus(li, nextNode);\r\n        this.navigateToFocus(!isTowards);\r\n        if (nextNode.classList.contains('e-disable') || nextNode.classList.contains('e-prevent')) {\r\n            var lastChild = nextNode.lastChild;\r\n            if (nextNode.previousSibling == null && nextNode.classList.contains('e-level-1')) {\r\n                this.focusNextNode(nextNode, true);\r\n            }\r\n            else if (nextNode.nextSibling == null && nextNode.classList.contains('e-node-collapsed')) {\r\n                this.focusNextNode(nextNode, false);\r\n            }\r\n            else if (nextNode.nextSibling == null && lastChild.classList.contains(TEXTWRAP)) {\r\n                this.focusNextNode(nextNode, false);\r\n            }\r\n            else {\r\n                this.focusNextNode(nextNode, isTowards);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.getNextNode = function (li) {\r\n        var index = this.liList.indexOf(li);\r\n        var nextNode;\r\n        do {\r\n            index++;\r\n            nextNode = this.liList[parseInt(index.toString(), 10)];\r\n            if (isNOU(nextNode)) {\r\n                return li;\r\n            }\r\n        } while (!isVisible(nextNode));\r\n        return nextNode;\r\n    };\r\n    TreeView.prototype.getPrevNode = function (li) {\r\n        var index = this.liList.indexOf(li);\r\n        var prevNode;\r\n        do {\r\n            index--;\r\n            prevNode = this.liList[parseInt(index.toString(), 10)];\r\n            if (isNOU(prevNode)) {\r\n                return li;\r\n            }\r\n        } while (!isVisible(prevNode));\r\n        return prevNode;\r\n    };\r\n    TreeView.prototype.getRootNode = function () {\r\n        var index = 0;\r\n        var rootNode;\r\n        do {\r\n            rootNode = this.liList[parseInt(index.toString(), 10)];\r\n            index++;\r\n        } while (!isVisible(rootNode));\r\n        return rootNode;\r\n    };\r\n    TreeView.prototype.getEndNode = function () {\r\n        var index = this.liList.length - 1;\r\n        var endNode;\r\n        do {\r\n            endNode = this.liList[parseInt(index.toString(), 10)];\r\n            index--;\r\n        } while (!isVisible(endNode));\r\n        return endNode;\r\n    };\r\n    TreeView.prototype.setFocus = function (preNode, nextNode) {\r\n        removeClass([preNode], FOCUS);\r\n        preNode.setAttribute('tabindex', '-1');\r\n        if (!nextNode.classList.contains('e-disable') && !nextNode.classList.contains(PREVENTSELECT)) {\r\n            addClass([nextNode], FOCUS);\r\n            nextNode.setAttribute('tabindex', '0');\r\n            nextNode.focus();\r\n            EventHandler.add(nextNode, 'blur', this.focusOut, this);\r\n            this.updateIdAttr(preNode, nextNode);\r\n        }\r\n    };\r\n    TreeView.prototype.updateIdAttr = function (preNode, nextNode) {\r\n        this.element.removeAttribute('aria-activedescendant');\r\n        if (preNode) {\r\n            preNode.removeAttribute('id');\r\n        }\r\n        nextNode.setAttribute('id', this.element.id + '_active');\r\n        this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\r\n    };\r\n    TreeView.prototype.focusIn = function () {\r\n        if (!this.mouseDownStatus) {\r\n            var focusedElement = this.getFocusedNode();\r\n            if (focusedElement.classList.contains('e-disable') || focusedElement.classList.contains('e-prevent')) {\r\n                focusedElement.setAttribute('tabindex', '-1');\r\n                this.navigateNode(true);\r\n            }\r\n            else {\r\n                focusedElement.setAttribute('tabindex', '0');\r\n                addClass([focusedElement], FOCUS);\r\n                EventHandler.add(focusedElement, 'blur', this.focusOut, this);\r\n            }\r\n            this.mouseDownStatus = false;\r\n        }\r\n    };\r\n    TreeView.prototype.focusOut = function (event) {\r\n        var focusedElement = this.getFocusedNode();\r\n        if (event.target === focusedElement) {\r\n            removeClass([focusedElement], FOCUS);\r\n            EventHandler.remove(focusedElement, 'blur', this.focusOut);\r\n        }\r\n    };\r\n    TreeView.prototype.onMouseOver = function (e) {\r\n        if (Browser.isDevice) {\r\n            return;\r\n        }\r\n        var target = e.target;\r\n        var classList = target.classList;\r\n        var currentLi = closest(target, '.' + LISTITEM);\r\n        if (!currentLi || classList.contains(PARENTITEM) || classList.contains(LISTITEM)) {\r\n            this.removeHover();\r\n            return;\r\n        }\r\n        else {\r\n            if (currentLi && !currentLi.classList.contains('e-disable')) {\r\n                this.setHover(currentLi);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.setHover = function (li) {\r\n        if (!li.classList.contains(HOVER) && !li.classList.contains(PREVENTSELECT)) {\r\n            this.removeHover();\r\n            addClass([li], HOVER);\r\n        }\r\n    };\r\n    TreeView.prototype.onMouseLeave = function () {\r\n        this.removeHover();\r\n    };\r\n    TreeView.prototype.removeHover = function () {\r\n        var hoveredNode = selectAll('.' + HOVER, this.element);\r\n        if (hoveredNode && hoveredNode.length) {\r\n            removeClass(hoveredNode, HOVER);\r\n        }\r\n    };\r\n    TreeView.prototype.getNodeData = function (currLi, fromDS) {\r\n        if (!isNOU(currLi) && currLi.classList.contains(LISTITEM) &&\r\n            !isNOU(closest(currLi, '.' + CONTROL)) && closest(currLi, '.' + CONTROL).classList.contains(ROOT)) {\r\n            var id = currLi.getAttribute('data-uid');\r\n            var text = this.getText(currLi, fromDS);\r\n            var pNode = closest(currLi.parentNode, '.' + LISTITEM);\r\n            var pid = pNode ? pNode.getAttribute('data-uid') : null;\r\n            var selected = currLi.classList.contains(ACTIVE);\r\n            var selectable = currLi.classList.contains(PREVENTSELECT) ? false : true;\r\n            var expanded = (currLi.getAttribute('aria-expanded') === 'true') ? true : false;\r\n            var hasChildren = currLi.getAttribute('aria-expanded') !== null ? true : (select('.' + EXPANDABLE, currLi) || select('.' + COLLAPSIBLE, currLi)) != null ? true : false;\r\n            var checked = null;\r\n            var checkboxElement = select('.' + CHECKBOXWRAP, currLi);\r\n            if (this.showCheckBox && checkboxElement) {\r\n                checked = currLi.getAttribute('aria-checked');\r\n            }\r\n            return {\r\n                id: id, text: text, parentID: pid, selected: selected, selectable: selectable, expanded: expanded,\r\n                isChecked: checked, hasChildren: hasChildren\r\n            };\r\n        }\r\n        return { id: '', text: '', parentID: '', selected: false, expanded: false, isChecked: '', hasChildren: false };\r\n    };\r\n    TreeView.prototype.getText = function (currLi, fromDS) {\r\n        if (fromDS) {\r\n            var nodeData = this.getNodeObject(currLi.getAttribute('data-uid'));\r\n            var level = parseFloat(currLi.getAttribute('aria-level'));\r\n            var nodeFields = this.getFields(this.fields, level, 1);\r\n            return getValue(nodeFields.text, nodeData);\r\n        }\r\n        return select('.' + LISTTEXT, currLi).textContent;\r\n    };\r\n    TreeView.prototype.getExpandEvent = function (currLi, e) {\r\n        var nodeData = this.getNodeData(currLi);\r\n        return { cancel: false, isInteracted: isNOU(e) ? false : true, node: currLi, nodeData: nodeData, event: e };\r\n    };\r\n    TreeView.prototype.renderNodeTemplate = function (data, textEle, dataId) {\r\n        var tempArr = this.nodeTemplateFn(data, this, 'nodeTemplate' + dataId, this.element.id + 'nodeTemplate', this.isStringTemplate, undefined, textEle, this.root);\r\n        if (tempArr) {\r\n            tempArr = Array.prototype.slice.call(tempArr);\r\n            append(tempArr, textEle);\r\n        }\r\n    };\r\n    TreeView.prototype.destroyTemplate = function (liEle) {\r\n        this.clearTemplate(['nodeTemplate' + liEle.getAttribute('data-uid')]);\r\n    };\r\n    TreeView.prototype.reRenderNodes = function () {\r\n        this.updateListProp(this.fields);\r\n        if (Browser.isIE) {\r\n            this.ulElement = this.element.querySelector('.e-list-parent.e-ul');\r\n            this.ulElement.parentElement.removeChild(this.ulElement);\r\n        }\r\n        else {\r\n            this.element.innerHTML = '';\r\n        }\r\n        if (!isNOU(this.nodeTemplateFn)) {\r\n            this.clearTemplate();\r\n        }\r\n        this.setTouchClass();\r\n        this.setProperties({ selectedNodes: [], checkedNodes: [], expandedNodes: [] }, true);\r\n        this.checkedElement = [];\r\n        this.isLoaded = false;\r\n        this.setDataBinding(true);\r\n    };\r\n    TreeView.prototype.setCssClass = function (oldClass, newClass) {\r\n        if (!isNOU(oldClass) && oldClass !== '') {\r\n            removeClass([this.element], oldClass.split(' '));\r\n        }\r\n        if (!isNOU(newClass) && newClass !== '') {\r\n            addClass([this.element], newClass.split(' '));\r\n        }\r\n    };\r\n    TreeView.prototype.editingHandler = function (e) {\r\n        var target = e.target;\r\n        if (!target || target.classList.contains(ROOT) || target.classList.contains(PARENTITEM) ||\r\n            target.classList.contains(LISTITEM) || target.classList.contains(ICON) ||\r\n            target.classList.contains(INPUT) || target.classList.contains(INPUTGROUP)) {\r\n            return;\r\n        }\r\n        else {\r\n            var liEle = closest(target, '.' + LISTITEM);\r\n            this.createTextbox(liEle);\r\n        }\r\n    };\r\n    TreeView.prototype.createTextbox = function (liEle) {\r\n        var _this = this;\r\n        var oldInpEle = select('.' + TREEINPUT, this.element);\r\n        if (oldInpEle) {\r\n            oldInpEle.blur();\r\n        }\r\n        var textEle = select('.' + LISTTEXT, liEle);\r\n        this.updateOldText(liEle);\r\n        var innerEle = this.createElement('input', { className: TREEINPUT, attrs: { value: this.oldText } });\r\n        var eventArgs = this.getEditEvent(liEle, null, innerEle.outerHTML);\r\n        this.trigger('nodeEditing', eventArgs, function (observedArgs) {\r\n            if (!observedArgs.cancel) {\r\n                var inpWidth = textEle.offsetWidth + 5;\r\n                var style_1 = 'width:' + inpWidth + 'px';\r\n                addClass([liEle], EDITING);\r\n                if (!isNOU(_this.nodeTemplateFn)) {\r\n                    _this.destroyTemplate(liEle);\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (_this.isReact) {\r\n                    setTimeout(function () {\r\n                        _this.renderTextBox(eventArgs, textEle, style_1);\r\n                    }, 5);\r\n                }\r\n                else {\r\n                    _this.renderTextBox(eventArgs, textEle, style_1);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    TreeView.prototype.renderTextBox = function (eventArgs, textEle, style) {\r\n        textEle.innerHTML = eventArgs.innerHtml;\r\n        var inpEle = select('.' + TREEINPUT, textEle);\r\n        this.inputObj = Input.createInput({\r\n            element: inpEle,\r\n            properties: {\r\n                enableRtl: this.enableRtl\r\n            }\r\n        }, this.createElement);\r\n        this.inputObj.container.setAttribute('style', style);\r\n        inpEle.focus();\r\n        var inputEle = inpEle;\r\n        inputEle.setSelectionRange(0, inputEle.value.length);\r\n        this.wireInputEvents(inpEle);\r\n    };\r\n    TreeView.prototype.updateOldText = function (liEle) {\r\n        var id = liEle.getAttribute('data-uid');\r\n        this.editData = this.getNodeObject(id);\r\n        var level = parseFloat(liEle.getAttribute('aria-level'));\r\n        this.editFields = this.getFields(this.fields, level, 1);\r\n        this.oldText = getValue(this.editFields.text, this.editData);\r\n    };\r\n    TreeView.prototype.inputFocusOut = function (e) {\r\n        if (!select('.' + TREEINPUT, this.element)) {\r\n            return;\r\n        }\r\n        var target = e.target;\r\n        var newText = target.value;\r\n        var txtEle = closest(target, '.' + LISTTEXT);\r\n        var liEle = closest(target, '.' + LISTITEM);\r\n        detach(this.inputObj.container);\r\n        Input.destroy({ element: target, properties: this.properties });\r\n        if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\r\n            this.crudOperation('update', null, liEle, newText, null, null, true);\r\n        }\r\n        else {\r\n            this.appendNewText(liEle, txtEle, newText, true);\r\n        }\r\n        EventHandler.remove(target, 'blur', this.inputFocusOut);\r\n    };\r\n    TreeView.prototype.appendNewText = function (liEle, txtEle, newText, isInput) {\r\n        var _this = this;\r\n        var eventArgs = this.getEditEvent(liEle, newText, null);\r\n        this.trigger('nodeEdited', eventArgs, function (observedArgs) {\r\n            newText = observedArgs.cancel ? observedArgs.oldText : observedArgs.newText;\r\n            _this.updateText(liEle, txtEle, newText, isInput);\r\n            if (observedArgs.oldText !== newText) {\r\n                _this.triggerEvent('nodeEdited', [_this.getNode(liEle)]);\r\n            }\r\n        });\r\n    };\r\n    TreeView.prototype.updateText = function (liEle, txtEle, newText, isInput) {\r\n        var newData = setValue(this.editFields.text, newText, this.editData);\r\n        if (!isNOU(this.nodeTemplateFn)) {\r\n            txtEle.innerText = '';\r\n            var dataId = liEle.getAttribute('data-uid');\r\n            this.renderNodeTemplate(newData, txtEle, dataId);\r\n            this.renderReactTemplates();\r\n        }\r\n        else {\r\n            if (this.enableHtmlSanitizer) {\r\n                txtEle.innerText = SanitizeHtmlHelper.sanitize(newText);\r\n            }\r\n            else {\r\n                txtEle.innerHTML = newText;\r\n            }\r\n        }\r\n        if (isInput) {\r\n            removeClass([liEle], EDITING);\r\n            liEle.focus();\r\n            EventHandler.add(liEle, 'blur', this.focusOut, this);\r\n            addClass([liEle], FOCUS);\r\n        }\r\n        if (this.allowTextWrap) {\r\n            this.calculateWrap(liEle);\r\n        }\r\n    };\r\n    TreeView.prototype.getElement = function (ele) {\r\n        if (isNOU(ele)) {\r\n            return null;\r\n        }\r\n        else if (typeof ele === 'string') {\r\n            return this.element.querySelector('[data-uid=\"' + ele + '\"]');\r\n        }\r\n        else if (typeof ele === 'object') {\r\n            return getElement(ele);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TreeView.prototype.getId = function (ele) {\r\n        if (isNOU(ele)) {\r\n            return null;\r\n        }\r\n        else if (typeof ele === 'string') {\r\n            return ele;\r\n        }\r\n        else if (typeof ele === 'object') {\r\n            return (getElement(ele)).getAttribute('data-uid');\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TreeView.prototype.getEditEvent = function (liEle, newText, inpEle) {\r\n        var data = this.getNodeData(liEle);\r\n        return { cancel: false, newText: newText, node: liEle, nodeData: data, oldText: this.oldText, innerHtml: inpEle };\r\n    };\r\n    TreeView.prototype.getNodeObject = function (id) {\r\n        var childNodes;\r\n        if (isNOU(id)) {\r\n            return childNodes;\r\n        }\r\n        else if (this.dataType === 1) {\r\n            for (var i = 0, objlen = this.treeData.length; i < objlen; i++) {\r\n                var dataId = getValue(this.fields.id, this.treeData[parseInt(i.toString(), 10)]);\r\n                if (!isNOU(this.treeData[parseInt(i.toString(), 10)]) && !isNOU(dataId) && dataId.toString() === id) {\r\n                    return this.treeData[parseInt(i.toString(), 10)];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return this.getChildNodeObject(this.treeData, this.fields, id);\r\n        }\r\n        return childNodes;\r\n    };\r\n    TreeView.prototype.getChildNodeObject = function (obj, mapper, id) {\r\n        var newList;\r\n        if (isNOU(obj)) {\r\n            return newList;\r\n        }\r\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\r\n            var dataId = getValue(mapper.id, obj[parseInt(i.toString(), 10)]);\r\n            if (obj[parseInt(i.toString(), 10)] && dataId && dataId.toString() === id) {\r\n                return obj[parseInt(i.toString(), 10)];\r\n            }\r\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\r\n                var childData = getValue(mapper.child, obj[parseInt(i.toString(), 10)]);\r\n                newList = this.getChildNodeObject(childData, this.getChildMapper(mapper), id);\r\n                if (newList !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\r\n                var child = 'child';\r\n                newList = this.getChildNodeObject(getValue(child, obj[parseInt(i.toString(), 10)]), this.getChildMapper(mapper), id);\r\n                if (newList !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            else if (this.isChildObject()) {\r\n                var children = 'child';\r\n                var childData = getValue(children, obj[parseInt(i.toString(), 10)]);\r\n                newList = this.getChildNodeObject(childData, this.getChildMapper(mapper), id);\r\n                if (newList !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return newList;\r\n    };\r\n    TreeView.prototype.setDragAndDrop = function (toBind) {\r\n        if (toBind && !this.disabled) {\r\n            this.initializeDrag();\r\n        }\r\n        else {\r\n            this.destroyDrag();\r\n        }\r\n    };\r\n    TreeView.prototype.initializeDrag = function () {\r\n        var _this = this;\r\n        var virtualEle;\r\n        this.dragObj = new Draggable(this.element, {\r\n            enableTailMode: true, enableAutoScroll: true,\r\n            dragArea: this.dragArea,\r\n            dragTarget: '.' + TEXTWRAP,\r\n            enableTapHold: true,\r\n            tapHoldThreshold: 100,\r\n            helper: function (e) {\r\n                _this.dragTarget = e.sender.target;\r\n                var dragRoot = closest(_this.dragTarget, '.' + ROOT);\r\n                var dragWrap = closest(_this.dragTarget, '.' + TEXTWRAP);\r\n                _this.dragLi = closest(_this.dragTarget, '.' + LISTITEM);\r\n                if (_this.fullRowSelect && !dragWrap && _this.dragTarget.classList.contains(FULLROW)) {\r\n                    dragWrap = _this.dragTarget.nextElementSibling;\r\n                }\r\n                if (!_this.dragTarget || !e.element.isSameNode(dragRoot) || !dragWrap ||\r\n                    _this.dragTarget.classList.contains(ROOT) || _this.dragTarget.classList.contains(PARENTITEM) ||\r\n                    _this.dragTarget.classList.contains(LISTITEM) || _this.dragLi.classList.contains('e-disable')) {\r\n                    return false;\r\n                }\r\n                var cloneEle = (dragWrap.cloneNode(true));\r\n                if (isNOU(select('div.' + ICON, cloneEle))) {\r\n                    var icon = _this.createElement('div', { className: ICON + ' ' + EXPANDABLE });\r\n                    cloneEle.insertBefore(icon, cloneEle.children[0]);\r\n                }\r\n                var cssClass = DRAGITEM + ' ' + ROOT + ' ' + _this.cssClass + ' ' + (_this.enableRtl ? RTL : '');\r\n                virtualEle = _this.createElement('div', { className: cssClass });\r\n                virtualEle.appendChild(cloneEle);\r\n                var nLen = _this.selectedNodes.length;\r\n                if (nLen > 1 && _this.allowMultiSelection && _this.dragLi.classList.contains(ACTIVE)) {\r\n                    var cNode = _this.createElement('span', { className: DROPCOUNT, innerHTML: '' + nLen });\r\n                    virtualEle.appendChild(cNode);\r\n                }\r\n                document.body.appendChild(virtualEle);\r\n                document.body.style.cursor = '';\r\n                _this.dragData = _this.getNodeData(_this.dragLi);\r\n                return virtualEle;\r\n            },\r\n            dragStart: function (e) {\r\n                addClass([_this.element], DRAGGING);\r\n                var listItem = closest(e.target, '.e-list-item');\r\n                var level;\r\n                if (listItem) {\r\n                    level = parseInt(listItem.getAttribute('aria-level'), 10);\r\n                }\r\n                var eventArgs = _this.getDragEvent(e.event, _this, null, e.target, null, virtualEle, level);\r\n                if (eventArgs.draggedNode.classList.contains(EDITING)) {\r\n                    _this.dragObj.intDestroy(e.event);\r\n                    _this.dragCancelAction(virtualEle);\r\n                }\r\n                else {\r\n                    _this.trigger('nodeDragStart', eventArgs, function (observedArgs) {\r\n                        if (observedArgs.cancel) {\r\n                            _this.dragObj.intDestroy(e.event);\r\n                            _this.dragCancelAction(virtualEle);\r\n                        }\r\n                        else {\r\n                            _this.dragStartAction = true;\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            drag: function (e) {\r\n                _this.dragObj.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20 } });\r\n                _this.dragAction(e, virtualEle);\r\n            },\r\n            dragStop: function (e) {\r\n                removeClass([_this.element], DRAGGING);\r\n                if (!e.target.classList.contains('e-sibling')) {\r\n                    _this.removeVirtualEle();\r\n                }\r\n                var dropTarget = e.target;\r\n                var preventTargetExpand = false;\r\n                var dropRoot = (closest(dropTarget, '.' + DROPPABLE));\r\n                // eslint-disable-next-line\r\n                var isHelperElement = true;\r\n                if (!dropTarget || !dropRoot) {\r\n                    detach(e.helper);\r\n                    document.body.style.cursor = '';\r\n                }\r\n                var listItem = closest(dropTarget, '.e-list-item');\r\n                var level;\r\n                if (listItem) {\r\n                    level = parseInt(listItem.getAttribute('aria-level'), 10);\r\n                }\r\n                var eventArgs = _this.getDragEvent(e.event, _this, dropTarget, dropTarget, null, e.helper, level);\r\n                eventArgs.preventTargetExpand = preventTargetExpand;\r\n                _this.trigger('nodeDragStop', eventArgs, function (observedArgs) {\r\n                    _this.dragParent = observedArgs.draggedParentNode;\r\n                    _this.preventExpand = observedArgs.preventTargetExpand;\r\n                    if (observedArgs.cancel) {\r\n                        if (e.helper.parentNode) {\r\n                            detach(e.helper);\r\n                        }\r\n                        document.body.style.cursor = '';\r\n                        isHelperElement = false;\r\n                        if (dropTarget.classList.contains('e-sibling')) {\r\n                            _this.removeVirtualEle();\r\n                        }\r\n                    }\r\n                    _this.dragStartAction = false;\r\n                });\r\n            }\r\n        });\r\n        this.dropObj = new Droppable(this.element, {\r\n            out: function (e) {\r\n                if (!isNOU(e) && !e.target.classList.contains(SIBLING) &&\r\n                    (_this.dropObj.dragData.default && _this.dropObj.dragData.default.helper.classList.contains(ROOT))) {\r\n                    document.body.style.cursor = 'not-allowed';\r\n                }\r\n            },\r\n            over: function () {\r\n                document.body.style.cursor = '';\r\n            },\r\n            drop: function (e) {\r\n                _this.dropAction(e);\r\n                _this.removeVirtualEle();\r\n            }\r\n        });\r\n    };\r\n    TreeView.prototype.dragCancelAction = function (virtualEle) {\r\n        detach(virtualEle);\r\n        removeClass([this.element], DRAGGING);\r\n        this.dragStartAction = false;\r\n    };\r\n    TreeView.prototype.dragAction = function (e, virtualEle) {\r\n        var dropRoot = closest(e.target, '.' + DROPPABLE);\r\n        var dropWrap = closest(e.target, '.' + TEXTWRAP);\r\n        var icon = select('div.' + ICON, virtualEle);\r\n        removeClass([icon], [DROPIN, DROPNEXT, DROPOUT, NODROP]);\r\n        this.isDropIn = false;\r\n        this.removeVirtualEle();\r\n        document.body.style.cursor = '';\r\n        var classList = e.target.classList;\r\n        if (this.fullRowSelect && !dropWrap && !isNOU(classList) && classList.contains(FULLROW)) {\r\n            dropWrap = e.target.nextElementSibling;\r\n        }\r\n        if (dropRoot) {\r\n            var dropLi = closest(e.target, '.' + LISTITEM);\r\n            var checkWrapper = closest(e.target, '.' + CHECKBOXWRAP);\r\n            var collapse = closest(e.target, '.' + COLLAPSIBLE);\r\n            var expand = closest(e.target, '.' + EXPANDABLE);\r\n            if (!dropRoot.classList.contains(ROOT) || (dropWrap &&\r\n                (!dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi)))) {\r\n                if (this.hasTemplate && dropLi) {\r\n                    var templateTarget = select(this.fullRowSelect ? '.' + FULLROW : '.' + TEXTWRAP, dropLi);\r\n                    if ((e && (!expand && !collapse) && e.event.offsetY < 7 && !checkWrapper) ||\r\n                        (((expand && e.event.offsetY < 5) || (collapse && e.event.offsetX < 3)))) {\r\n                        var index = this.fullRowSelect ? (1) : (0);\r\n                        this.appendIndicator(dropLi, icon, index);\r\n                    }\r\n                    else if ((e && (!expand && !collapse) &&\r\n                        !checkWrapper && templateTarget && e.event.offsetY > templateTarget.offsetHeight - 10) ||\r\n                        ((expand && e.event.offsetY > 19) || (collapse && e.event.offsetX > 19))) {\r\n                        var index = this.fullRowSelect ? (2) : (1);\r\n                        this.appendIndicator(dropLi, icon, index);\r\n                    }\r\n                    else {\r\n                        addClass([icon], DROPIN);\r\n                        this.isDropIn = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if ((dropLi && e && (!expand && !collapse) && (e.event.offsetY < 7) && !checkWrapper) ||\r\n                        (((expand && e.event.offsetY < 5) || (collapse && e.event.offsetX < 3)))) {\r\n                        var index = this.fullRowSelect ? (1) : (0);\r\n                        this.appendIndicator(dropLi, icon, index);\r\n                    }\r\n                    else if ((dropLi && e && (!expand && !collapse) &&\r\n                        (e.target.offsetHeight > 0 && e.event.offsetY > (e.target.offsetHeight - 10)) && !checkWrapper) ||\r\n                        (((expand && e.event.offsetY > 19) || (collapse && e.event.offsetX > 19)))) {\r\n                        var index = this.fullRowSelect ? (2) : (1);\r\n                        this.appendIndicator(dropLi, icon, index);\r\n                    }\r\n                    else {\r\n                        addClass([icon], DROPIN);\r\n                        this.isDropIn = true;\r\n                    }\r\n                }\r\n            }\r\n            else if (e.target.nodeName === 'LI' && (!dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi))) {\r\n                addClass([icon], DROPNEXT);\r\n                this.renderVirtualEle(e);\r\n            }\r\n            else if (e.target.classList.contains(SIBLING)) {\r\n                addClass([icon], DROPNEXT);\r\n            }\r\n            else {\r\n                addClass([icon], DROPOUT);\r\n            }\r\n        }\r\n        else {\r\n            addClass([icon], NODROP);\r\n            document.body.style.cursor = 'not-allowed';\r\n        }\r\n        var listItem = closest(e.target, '.e-list-item');\r\n        var level;\r\n        if (listItem) {\r\n            level = parseInt(listItem.getAttribute('aria-level'), 10);\r\n        }\r\n        var eventArgs = this.getDragEvent(e.event, this, e.target, e.target, null, virtualEle, level);\r\n        if (eventArgs.dropIndicator) {\r\n            removeClass([icon], eventArgs.dropIndicator);\r\n        }\r\n        this.trigger('nodeDragging', eventArgs);\r\n        if (eventArgs.dropIndicator) {\r\n            addClass([icon], eventArgs.dropIndicator);\r\n        }\r\n    };\r\n    TreeView.prototype.appendIndicator = function (dropLi, icon, index) {\r\n        addClass([icon], DROPNEXT);\r\n        var virEle = this.createElement('div', { className: SIBLING });\r\n        dropLi.insertBefore(virEle, dropLi.children[parseInt(index.toString(), 10)]);\r\n    };\r\n    TreeView.prototype.dropAction = function (e) {\r\n        var offsetY = e.event.offsetY;\r\n        var dropTarget = e.target;\r\n        var dragObj;\r\n        var level;\r\n        var drop = false;\r\n        var nodeData = [];\r\n        var liArray = [];\r\n        var dragInstance = e.dragData.draggable;\r\n        for (var i = 0; i < dragInstance.ej2_instances.length; i++) {\r\n            if (dragInstance.ej2_instances[parseInt(i.toString(), 10)] instanceof TreeView_1) {\r\n                dragObj = dragInstance.ej2_instances[parseInt(i.toString(), 10)];\r\n                break;\r\n            }\r\n        }\r\n        if (dragObj && dragObj.dragTarget) {\r\n            var dragTarget = dragObj.dragTarget;\r\n            var dragLi = (closest(dragTarget, '.' + LISTITEM));\r\n            var dropLi = (closest(dropTarget, '.' + LISTITEM));\r\n            liArray.push(dragLi);\r\n            if (dropLi == null && dropTarget.classList.contains(ROOT)) {\r\n                dropLi = dropTarget.firstElementChild;\r\n            }\r\n            detach(e.droppedElement);\r\n            document.body.style.cursor = '';\r\n            if (!dropLi || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\r\n                if (this.fields.dataSource instanceof DataManager === false) {\r\n                    this.preventExpand = false;\r\n                }\r\n                return;\r\n            }\r\n            if (dragObj.allowMultiSelection && dragLi.classList.contains(ACTIVE)) {\r\n                var sNodes = selectAll('.' + ACTIVE, dragObj.element);\r\n                liArray = sNodes;\r\n                if (e.target.offsetHeight <= 33 && offsetY > e.target.offsetHeight - 10 && offsetY > 6) {\r\n                    for (var i = sNodes.length - 1; i >= 0; i--) {\r\n                        if (dropLi.isSameNode(sNodes[parseInt(i.toString(), 10)]) ||\r\n                            this.isDescendant(sNodes[parseInt(i.toString(), 10)], dropLi)) {\r\n                            continue;\r\n                        }\r\n                        this.appendNode(dropTarget, sNodes[parseInt(i.toString(), 10)], dropLi, e, dragObj, offsetY);\r\n                    }\r\n                }\r\n                else {\r\n                    for (var i = 0; i < sNodes.length; i++) {\r\n                        if (dropLi.isSameNode(sNodes[parseInt(i.toString(), 10)]) ||\r\n                            this.isDescendant(sNodes[parseInt(i.toString(), 10)], dropLi)) {\r\n                            continue;\r\n                        }\r\n                        this.appendNode(dropTarget, sNodes[parseInt(i.toString(), 10)], dropLi, e, dragObj, offsetY);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.appendNode(dropTarget, dragLi, dropLi, e, dragObj, offsetY);\r\n            }\r\n            level = parseInt(dragLi.getAttribute('aria-level'), 10);\r\n            drop = true;\r\n        }\r\n        if (this.fields.dataSource instanceof DataManager === false) {\r\n            this.preventExpand = false;\r\n        }\r\n        for (var i = 0; i < liArray.length; i++) {\r\n            nodeData.push(this.getNode(liArray[parseInt(i.toString(), 10)]));\r\n        }\r\n        this.trigger('nodeDropped', this.getDragEvent(e.event, dragObj, dropTarget, e.target, e.dragData.draggedElement, null, level, drop));\r\n        if (dragObj.element.id !== this.element.id) {\r\n            dragObj.triggerEvent('nodeDropped', nodeData);\r\n            this.isNodeDropped = true;\r\n            this.fields.dataSource = this.treeData;\r\n        }\r\n        this.triggerEvent('nodeDropped', nodeData);\r\n    };\r\n    TreeView.prototype.appendNode = function (dropTarget, dragLi, dropLi, e, dragObj, offsetY) {\r\n        var checkWrapper = closest(dropTarget, '.' + CHECKBOXWRAP);\r\n        var collapse = closest(e.target, '.' + COLLAPSIBLE);\r\n        var expand = closest(e.target, '.' + EXPANDABLE);\r\n        if (!dragLi.classList.contains('e-disable') && !checkWrapper && ((expand && e.event.offsetY < 5) || (collapse && e.event.offsetX < 3) || (expand && e.event.offsetY > 19) || (collapse && e.event.offsetX > 19) || (!expand && !collapse))) {\r\n            if (dropTarget.nodeName === 'LI') {\r\n                this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\r\n            }\r\n            else if (dropTarget.firstElementChild && dropTarget.classList.contains(ROOT)) {\r\n                if (dropTarget.firstElementChild.nodeName === 'UL') {\r\n                    this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\r\n                }\r\n            }\r\n            else if ((dropTarget.classList.contains('e-icon-collapsible')) || (dropTarget.classList.contains('e-icon-expandable'))) {\r\n                this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\r\n            }\r\n            else {\r\n                this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY, null, dropTarget);\r\n            }\r\n        }\r\n        else {\r\n            this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY, true, dropTarget);\r\n        }\r\n        if (this.showCheckBox) {\r\n            this.ensureIndeterminate();\r\n        }\r\n    };\r\n    TreeView.prototype.dropAsSiblingNode = function (dragLi, dropLi, e, dragObj) {\r\n        var dropUl = closest(dropLi, '.' + PARENTITEM);\r\n        var dragParentUl = closest(dragLi, '.' + PARENTITEM);\r\n        var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\r\n        var pre;\r\n        if (e.target.offsetHeight > 0 && e.event.offsetY > e.target.offsetHeight - 2) {\r\n            pre = false;\r\n        }\r\n        else if (e.event.offsetY < 2) {\r\n            pre = true;\r\n        }\r\n        else if (e.target.classList.contains('e-icon-expandable') || (e.target.classList.contains('e-icon-collapsible'))) {\r\n            if ((e.event.offsetY < 5) || (e.event.offsetX < 3)) {\r\n                pre = true;\r\n            }\r\n            else if ((e.event.offsetY > 15) || (e.event.offsetX > 17)) {\r\n                pre = false;\r\n            }\r\n        }\r\n        if ((e.target.classList.contains('e-icon-expandable')) || (e.target.classList.contains('e-icon-collapsible'))) {\r\n            var target = e.target.closest('li');\r\n            dropUl.insertBefore(dragLi, pre ? target : target.nextElementSibling);\r\n        }\r\n        else {\r\n            dropUl.insertBefore(dragLi, pre ? e.target : e.target.nextElementSibling);\r\n        }\r\n        this.moveData(dragLi, dropLi, dropUl, pre, dragObj);\r\n        this.updateElement(dragParentUl, dragParentLi);\r\n        this.updateAriaLevel(dragLi);\r\n        if (dragObj.element.id === this.element.id) {\r\n            this.updateList();\r\n        }\r\n        else {\r\n            dragObj.updateInstance();\r\n            this.updateInstance();\r\n        }\r\n    };\r\n    TreeView.prototype.dropAsChildNode = function (dragLi, dropLi, dragObj, index, e, pos, isCheck, dropTarget) {\r\n        var dragParentUl = closest(dragLi, '.' + PARENTITEM);\r\n        var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\r\n        var dropParentUl = closest(dropLi, '.' + PARENTITEM);\r\n        var templateTarget;\r\n        if (e && e.target) {\r\n            templateTarget = select(this.fullRowSelect ? '.' + FULLROW : '.' + TEXTWRAP, dropLi);\r\n        }\r\n        if (e && ((pos < 7 && !dropTarget.classList.contains('e-sibling')) || (dropTarget.classList.contains('e-sibling') && !dropLi.lastChild.classList.contains('e-sibling'))) && !isCheck) {\r\n            dropParentUl.insertBefore(dragLi, dropLi);\r\n            this.moveData(dragLi, dropLi, dropParentUl, true, dragObj);\r\n        }\r\n        else if (e && (e.target.offsetHeight > 0 && pos > (e.target.offsetHeight - 10)) && !isCheck && !this.hasTemplate) {\r\n            dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\r\n            this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\r\n        }\r\n        else if (this.hasTemplate && templateTarget && pos > templateTarget.offsetHeight - 10 && !isCheck) {\r\n            dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\r\n            this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\r\n        }\r\n        else {\r\n            var dropUl = this.expandParent(dropLi);\r\n            var childLi = !isNullOrUndefined(index) ? dropUl.childNodes[parseInt(index.toString(), 10)] : null;\r\n            dropUl.insertBefore(dragLi, childLi);\r\n            this.moveData(dragLi, childLi, dropUl, true, dragObj);\r\n        }\r\n        this.updateElement(dragParentUl, dragParentLi);\r\n        this.updateAriaLevel(dragLi);\r\n        if (dragObj.element.id === this.element.id) {\r\n            this.updateList();\r\n        }\r\n        else {\r\n            dragObj.updateInstance();\r\n            this.updateInstance();\r\n        }\r\n    };\r\n    TreeView.prototype.moveData = function (dragLi, dropLi, dropUl, pre, dragObj) {\r\n        var dropParentLi = closest(dropUl, '.' + LISTITEM);\r\n        var id = this.getId(dragLi);\r\n        var removedData = dragObj.updateChildField(dragObj.treeData, dragObj.fields, id, null, null, true);\r\n        var refId = this.getId(dropLi);\r\n        var index = this.getDataPos(this.treeData, this.fields, refId);\r\n        var parentId = this.getId(dropParentLi);\r\n        if (this.dataType === 1) {\r\n            this.updateField(this.treeData, this.fields, parentId, 'hasChildren', true);\r\n            var pos = isNOU(index) ? this.treeData.length : (pre ? index : index + 1);\r\n            if (isNOU(parentId) && !this.hasPid) {\r\n                delete removedData[0][this.fields.parentID];\r\n            }\r\n            else {\r\n                var currPid = this.isNumberTypeId ? parseFloat(parentId) : parentId;\r\n                setValue(this.fields.parentID, currPid, removedData[0]);\r\n            }\r\n            this.treeData.splice(pos, 0, removedData[0]);\r\n            if (dragObj.element.id !== this.element.id) {\r\n                var childData = dragObj.removeChildNodes(id);\r\n                pos++;\r\n                for (var i = 0, len = childData.length; i < len; i++) {\r\n                    this.treeData.splice(pos, 0, childData[parseInt(i.toString(), 10)]);\r\n                    pos++;\r\n                }\r\n                dragObj.groupedData = dragObj.getGroupedData(dragObj.treeData, dragObj.fields.parentID);\r\n            }\r\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\r\n        }\r\n        else {\r\n            this.addChildData(this.treeData, this.fields, parentId, removedData, pre ? index : index + 1);\r\n        }\r\n    };\r\n    TreeView.prototype.expandParent = function (dropLi) {\r\n        var dropIcon = select('div.' + ICON, dropLi);\r\n        if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && this.preventExpand !== true) {\r\n            this.expandAction(dropLi, dropIcon, null);\r\n        }\r\n        var dropUl = select('.' + PARENTITEM, dropLi);\r\n        if (this.preventExpand === true && !dropUl && dropIcon) {\r\n            this.renderChildNodes(dropLi);\r\n        }\r\n        dropUl = select('.' + PARENTITEM, dropLi);\r\n        if (!isNOU(dropUl) && this.preventExpand === true) {\r\n            dropUl.style.display = 'none';\r\n        }\r\n        if (!isNOU(dropUl) && this.preventExpand === false) {\r\n            dropUl.style.display = 'block';\r\n        }\r\n        if (isNOU(dropUl) && this.preventExpand === true) {\r\n            if (isNOU(dropIcon)) {\r\n                ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\r\n            }\r\n            var icon = select('div.' + ICON, dropLi);\r\n            if (icon) {\r\n                icon.classList.add('e-icon-expandable');\r\n            }\r\n            dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\r\n            dropLi.appendChild(dropUl);\r\n            if (icon) {\r\n                removeClass([icon], COLLAPSIBLE);\r\n            }\r\n            else {\r\n                ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\r\n            }\r\n            dropLi.setAttribute('aria-expanded', 'false');\r\n            dropUl.style.display = 'none';\r\n        }\r\n        if (isNOU(dropUl)) {\r\n            var args = this.expandArgs;\r\n            if (isNOU(args) || (args && args.name !== 'nodeExpanding')) {\r\n                this.trigger('nodeExpanding', this.getExpandEvent(dropLi, null));\r\n            }\r\n            if (isNOU(dropIcon)) {\r\n                ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\r\n            }\r\n            var icon = select('div.' + ICON, dropLi);\r\n            if (icon) {\r\n                removeClass([icon], EXPANDABLE);\r\n            }\r\n            else {\r\n                ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\r\n                icon = select('div.' + ICON, dropLi);\r\n                removeClass([icon], EXPANDABLE);\r\n            }\r\n            dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\r\n            dropLi.appendChild(dropUl);\r\n            this.addExpand(dropLi);\r\n            this.trigger('nodeExpanded', this.getExpandEvent(dropLi, null));\r\n        }\r\n        return dropUl;\r\n    };\r\n    TreeView.prototype.updateElement = function (dragParentUl, dragParentLi) {\r\n        if (dragParentLi && dragParentUl.childElementCount === 0) {\r\n            var dragIcon = select('div.' + ICON, dragParentLi);\r\n            detach(dragParentUl);\r\n            detach(dragIcon);\r\n            var parentId = this.getId(dragParentLi);\r\n            this.updateField(this.treeData, this.fields, parentId, 'hasChildren', false);\r\n            this.removeExpand(dragParentLi, true);\r\n        }\r\n    };\r\n    TreeView.prototype.updateAriaLevel = function (dragLi) {\r\n        var level = this.parents(dragLi, '.' + PARENTITEM).length;\r\n        dragLi.setAttribute('aria-level', '' + level);\r\n        this.updateChildAriaLevel(select('.' + PARENTITEM, dragLi), level + 1);\r\n    };\r\n    TreeView.prototype.updateChildAriaLevel = function (element, level) {\r\n        if (!isNOU(element)) {\r\n            var cNodes = element.childNodes;\r\n            for (var i = 0, len = cNodes.length; i < len; i++) {\r\n                var liEle = cNodes[parseInt(i.toString(), 10)];\r\n                liEle.setAttribute('aria-level', '' + level);\r\n                this.updateChildAriaLevel(select('.' + PARENTITEM, liEle), level + 1);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.renderVirtualEle = function (e) {\r\n        var pre;\r\n        if (e.event.offsetY > e.target.offsetHeight - 2) {\r\n            pre = false;\r\n        }\r\n        else if (e.event.offsetY < 2) {\r\n            pre = true;\r\n        }\r\n        var virEle = this.createElement('div', { className: SIBLING });\r\n        var index = this.fullRowSelect ? (pre ? 1 : 2) : (pre ? 0 : 1);\r\n        e.target.insertBefore(virEle, e.target.children[parseInt(index.toString(), 10)]);\r\n    };\r\n    TreeView.prototype.removeVirtualEle = function () {\r\n        var sibEle = select('.' + SIBLING);\r\n        if (sibEle) {\r\n            detach(sibEle);\r\n        }\r\n    };\r\n    TreeView.prototype.destroyDrag = function () {\r\n        if (this.dragObj && this.dropObj) {\r\n            this.dragObj.destroy();\r\n            this.dropObj.destroy();\r\n        }\r\n    };\r\n    TreeView.prototype.getDragEvent = function (event, obj, dropTarget, target, dragNode, cloneEle, level, drop) {\r\n        var dropLi = dropTarget ? closest(dropTarget, '.' + LISTITEM) : null;\r\n        var dropData = dropLi ? this.getNodeData(dropLi) : null;\r\n        var draggedNode = obj ? obj.dragLi : dragNode;\r\n        var draggedNodeData = obj ? obj.dragData : null;\r\n        var newParent = dropTarget ? this.parents(dropTarget, '.' + LISTITEM) : null;\r\n        var dragLiParent = obj.dragLi.parentElement;\r\n        var dragParent = obj.dragLi ? closest(dragLiParent, '.' + LISTITEM) : null;\r\n        var targetParent = null;\r\n        var indexValue = null;\r\n        var iconCss = [DROPNEXT, DROPIN, DROPOUT, NODROP];\r\n        var iconClass = null;\r\n        var node = (drop === true) ? draggedNode : dropLi;\r\n        var index = node ? closest(node, '.e-list-parent') : null;\r\n        var i = 0;\r\n        var position = null;\r\n        dragParent = (obj.dragLi && dragParent === null) ? closest(dragLiParent, '.' + ROOT) : dragParent;\r\n        dragParent = (drop === true) ? this.dragParent : dragParent;\r\n        if (cloneEle) {\r\n            while (i < 4) {\r\n                if (select('.' + ICON, cloneEle).classList.contains(iconCss[parseInt(i.toString(), 10)])) {\r\n                    iconClass = iconCss[parseInt(i.toString(), 10)];\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n        if (index) {\r\n            var dropTar = 0;\r\n            for (i = 0; i < index.childElementCount; i++) {\r\n                dropTar = (drop !== true && index.children[parseInt(i.toString(), 10)] === draggedNode && dropLi !== draggedNode)\r\n                    ? ++dropTar\r\n                    : dropTar;\r\n                if ((drop !== true && index.children[parseInt(i.toString(), 10)].classList.contains('e-hover'))) {\r\n                    indexValue = (event.offsetY >= 23) ? i + 1 : i;\r\n                    break;\r\n                }\r\n                else if (index.children[parseInt(i.toString(), 10)] === node) {\r\n                    indexValue = (event.offsetY >= 23) ? i : i;\r\n                    break;\r\n                }\r\n            }\r\n            indexValue = (dropTar !== 0) ? --indexValue : indexValue;\r\n            position = this.isDropIn ? 'Inside' : ((event.offsetY < 7) ? 'Before' : 'After');\r\n        }\r\n        if (dropTarget) {\r\n            if (newParent.length === 0) {\r\n                targetParent = null;\r\n            }\r\n            else if (dropTarget.classList.contains(LISTITEM)) {\r\n                targetParent = newParent[0];\r\n            }\r\n            else {\r\n                targetParent = newParent[1];\r\n            }\r\n        }\r\n        if (dropLi === draggedNode) {\r\n            targetParent = dropLi;\r\n        }\r\n        if (dropTarget && target.offsetHeight <= 33 && event.offsetY < target.offsetHeight - 10 && event.offsetY > 6) {\r\n            targetParent = dropLi;\r\n            if (drop !== true) {\r\n                level = ++level;\r\n                var parent_2 = targetParent ? select('.e-list-parent', targetParent) : null;\r\n                indexValue = (parent_2) ? parent_2.children.length : 0;\r\n                if (!(this.fields.dataSource instanceof DataManager) && parent_2 === null && targetParent) {\r\n                    var parent_3 = targetParent.hasAttribute('data-uid') ?\r\n                        this.getChildNodes(this.fields.dataSource, targetParent.getAttribute('data-uid').toString()) : null;\r\n                    indexValue = (parent_3) ? parent_3.length : 0;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            cancel: false,\r\n            clonedNode: cloneEle,\r\n            event: event,\r\n            draggedNode: draggedNode,\r\n            draggedNodeData: draggedNodeData,\r\n            droppedNode: dropLi,\r\n            droppedNodeData: dropData,\r\n            dropIndex: indexValue,\r\n            dropLevel: level,\r\n            draggedParentNode: dragParent,\r\n            dropTarget: targetParent,\r\n            dropIndicator: iconClass,\r\n            target: target,\r\n            position: position\r\n        };\r\n    };\r\n    TreeView.prototype.addFullRow = function (toAdd) {\r\n        var len = this.liList.length;\r\n        if (toAdd) {\r\n            for (var i = 0; i < len; i++) {\r\n                this.createFullRow(this.liList[parseInt(i.toString(), 10)]);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < len; i++) {\r\n                var rowDiv = select('.' + FULLROW, this.liList[parseInt(i.toString(), 10)]);\r\n                detach(rowDiv);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.createFullRow = function (item) {\r\n        var rowDiv = this.createElement('div', { className: FULLROW });\r\n        item.insertBefore(rowDiv, item.childNodes[0]);\r\n    };\r\n    TreeView.prototype.addMultiSelect = function (toAdd) {\r\n        if (toAdd) {\r\n            var liEles = selectAll('.' + LISTITEM + ':not([aria-selected=\"true\"])', this.element);\r\n            for (var _i = 0, liEles_1 = liEles; _i < liEles_1.length; _i++) {\r\n                var ele = liEles_1[_i];\r\n                ele.setAttribute('aria-selected', 'false');\r\n            }\r\n        }\r\n        else {\r\n            var liEles = selectAll('.' + LISTITEM + '[aria-selected=\"false\"]', this.element);\r\n            for (var _a = 0, liEles_2 = liEles; _a < liEles_2.length; _a++) {\r\n                var ele = liEles_2[_a];\r\n                ele.removeAttribute('aria-selected');\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.collapseByLevel = function (element, level, excludeHiddenNodes) {\r\n        if (level > 0 && !isNOU(element)) {\r\n            var cNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\r\n            for (var i = 0, len = cNodes.length; i < len; i++) {\r\n                var liEle = cNodes[parseInt(i.toString(), 10)];\r\n                var icon = select('.' + COLLAPSIBLE, select('.' + TEXTWRAP, liEle));\r\n                if (!isNOU(icon)) {\r\n                    this.collapseNode(liEle, icon, null);\r\n                }\r\n                this.collapseByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.collapseAllNodes = function (excludeHiddenNodes) {\r\n        var cIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + COLLAPSIBLE, this.element));\r\n        for (var i = 0, len = cIcons.length; i < len; i++) {\r\n            var icon = cIcons[parseInt(i.toString(), 10)];\r\n            var liEle = closest(icon, '.' + LISTITEM);\r\n            this.collapseNode(liEle, icon, null);\r\n        }\r\n    };\r\n    TreeView.prototype.expandByLevel = function (element, level, excludeHiddenNodes) {\r\n        if (level > 0 && !isNOU(element)) {\r\n            var eNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\r\n            for (var i = 0, len = eNodes.length; i < len; i++) {\r\n                var liEle = eNodes[parseInt(i.toString(), 10)];\r\n                var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEle));\r\n                if (!isNOU(icon)) {\r\n                    this.expandAction(liEle, icon, null);\r\n                }\r\n                this.expandByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.expandAllNodes = function (excludeHiddenNodes) {\r\n        var eIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + EXPANDABLE, this.element));\r\n        for (var i = 0, len = eIcons.length; i < len; i++) {\r\n            var icon = eIcons[parseInt(i.toString(), 10)];\r\n            var liEle = closest(icon, '.' + LISTITEM);\r\n            this.expandAction(liEle, icon, null, true);\r\n        }\r\n    };\r\n    TreeView.prototype.getVisibleNodes = function (excludeHiddenNodes, nodes) {\r\n        var vNodes = Array.prototype.slice.call(nodes);\r\n        if (excludeHiddenNodes) {\r\n            for (var i = 0; i < vNodes.length; i++) {\r\n                if (!isVisible(vNodes[parseInt(i.toString(), 10)])) {\r\n                    vNodes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n        return vNodes;\r\n    };\r\n    TreeView.prototype.removeNode = function (node) {\r\n        var dragParentUl = closest(node, '.' + PARENTITEM);\r\n        var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\r\n        if (!isNOU(this.nodeTemplateFn)) {\r\n            this.destroyTemplate(node);\r\n        }\r\n        detach(node);\r\n        this.updateElement(dragParentUl, dragParentLi);\r\n        this.removeData(node);\r\n    };\r\n    TreeView.prototype.updateInstance = function () {\r\n        this.updateList();\r\n        this.updateSelectedNodes();\r\n        this.updateExpandedNodes();\r\n    };\r\n    TreeView.prototype.updateList = function () {\r\n        this.liList = Array.prototype.slice.call(selectAll('.' + LISTITEM, this.element));\r\n    };\r\n    TreeView.prototype.updateSelectedNodes = function () {\r\n        this.setProperties({ selectedNodes: [] }, true);\r\n        var sNodes = selectAll('.' + ACTIVE, this.element);\r\n        this.selectGivenNodes(sNodes);\r\n    };\r\n    TreeView.prototype.updateExpandedNodes = function () {\r\n        this.setProperties({ expandedNodes: [] }, true);\r\n        var eNodes = selectAll('[aria-expanded=\"true\"]', this.element);\r\n        for (var i = 0, len = eNodes.length; i < len; i++) {\r\n            this.addExpand(eNodes[parseInt(i.toString(), 10)]);\r\n        }\r\n    };\r\n    TreeView.prototype.removeData = function (node) {\r\n        if (this.dataType === 1) {\r\n            var dm = new DataManager(this.treeData);\r\n            var id = this.getId(node);\r\n            var data = {};\r\n            var newId = this.isNumberTypeId ? parseFloat(id) : id;\r\n            data[this.fields.id] = newId;\r\n            dm.remove(this.fields.id, data);\r\n            this.removeChildNodes(id);\r\n        }\r\n        else {\r\n            var id = this.getId(node);\r\n            this.updateChildField(this.treeData, this.fields, id, null, null, true);\r\n        }\r\n    };\r\n    TreeView.prototype.removeChildNodes = function (parentId) {\r\n        var cNodes = this.getChildGroup(this.groupedData, parentId, false);\r\n        var childData = [];\r\n        if (cNodes) {\r\n            for (var i = 0, len = cNodes.length; i < len; i++) {\r\n                var dm = new DataManager(this.treeData);\r\n                var id = getValue(this.fields.id, cNodes[parseInt(i.toString(), 10)]).toString();\r\n                var data = {};\r\n                var currId = this.isNumberTypeId ? parseFloat(id) : id;\r\n                data[this.fields.id] = currId;\r\n                var nodeData = dm.remove(this.fields.id, data);\r\n                childData.push(nodeData[0]);\r\n                this.removeChildNodes(id);\r\n            }\r\n        }\r\n        return childData;\r\n    };\r\n    TreeView.prototype.doGivenAction = function (nodes, selector, toExpand) {\r\n        for (var i = 0, len = nodes.length; i < len; i++) {\r\n            var liEle = this.getElement(nodes[parseInt(i.toString(), 10)]);\r\n            if (isNOU(liEle)) {\r\n                continue;\r\n            }\r\n            var icon = select('.' + selector, select('.' + TEXTWRAP, liEle));\r\n            if (!isNOU(icon)) {\r\n                if (toExpand) {\r\n                    this.expandAction(liEle, icon, null);\r\n                }\r\n                else {\r\n                    this.collapseNode(liEle, icon, null);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.addGivenNodes = function (nodes, dropLi, index, isRemote, dropEle) {\r\n        if (nodes.length === 0) {\r\n            return;\r\n        }\r\n        var sNodes = this.getSortedData(nodes);\r\n        var level = dropLi ? parseFloat(dropLi.getAttribute('aria-level')) + 1 : 1;\r\n        if (isRemote) {\r\n            this.updateMapper(level);\r\n        }\r\n        var li = ListBase.createListItemFromJson(this.createElement, sNodes, this.listBaseOption, level);\r\n        var id = this.getId(dropLi);\r\n        var dropIcon1;\r\n        if (!isNullOrUndefined(dropLi)) {\r\n            dropIcon1 = select('div.' + ICON, dropLi);\r\n        }\r\n        if (this.dataType === 1 && dropIcon1 && dropIcon1.classList.contains(EXPANDABLE) && !isNOU(this.element.offsetParent) && !this.element.offsetParent.parentElement.classList.contains('e-filemanager')) {\r\n            this.preventExpand = true;\r\n        }\r\n        if (this.dataType !== 1) {\r\n            this.addChildData(this.treeData, this.fields, id, nodes, index);\r\n            this.isFirstRender = false;\r\n        }\r\n        var dropUl;\r\n        if (!dropEle) {\r\n            dropUl = dropLi ? this.expandParent(dropLi) : select('.' + PARENTITEM, this.element);\r\n        }\r\n        else {\r\n            dropUl = dropEle;\r\n        }\r\n        var refNode = !isNullOrUndefined(index) ? dropUl.childNodes[parseInt(index.toString(), 10)] : null;\r\n        if (!this.isFirstRender || this.dataType === 1) {\r\n            var args = this.expandArgs;\r\n            if (refNode || this.sortOrder === 'None') {\r\n                for (var i = 0; i < li.length; i++) {\r\n                    dropUl.insertBefore(li[parseInt(i.toString(), 10)], refNode);\r\n                }\r\n                if (this.dataType === 1 && !isNullOrUndefined(dropLi) && !isNOU(this.element.offsetParent) && !this.element.offsetParent.parentElement.classList.contains('e-filemanager')) {\r\n                    this.preventExpand = false;\r\n                    var dropIcon = select('div.' + ICON, dropLi);\r\n                    if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && (isNOU(args) || args.name !== 'nodeExpanding')) {\r\n                        this.expandAction(dropLi, dropIcon, null);\r\n                    }\r\n                }\r\n            }\r\n            if (!refNode && ((this.sortOrder === 'Ascending') || (this.sortOrder === 'Descending'))) {\r\n                if (dropUl.childNodes.length === 0) {\r\n                    for (var i = 0; i < li.length; i++) {\r\n                        dropUl.insertBefore(li[parseInt(i.toString(), 10)], refNode);\r\n                    }\r\n                    if (this.dataType === 1 && !isNullOrUndefined(dropLi) && !isNOU(this.element.offsetParent) && !this.element.offsetParent.parentElement.classList.contains('e-filemanager')) {\r\n                        this.preventExpand = false;\r\n                        var dropIcon = select('div.' + ICON, dropLi);\r\n                        if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && (isNOU(args) || args.name !== 'nodeExpanding')) {\r\n                            this.expandAction(dropLi, dropIcon, null);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    var cNodes = dropUl.childNodes;\r\n                    for (var i = 0; i < li.length; i++) {\r\n                        for (var j = 0; j < cNodes.length; j++) {\r\n                            var returnValue = (this.sortOrder === 'Ascending') ? cNodes[parseInt(j.toString(), 10)].textContent.toUpperCase() > li[parseInt(i.toString(), 10)].innerText.toUpperCase() : cNodes[parseInt(j.toString(), 10)].textContent.toUpperCase() < li[parseInt(i.toString(), 10)].innerText.toUpperCase();\r\n                            if (returnValue) {\r\n                                dropUl.insertBefore(li[parseInt(i.toString(), 10)], cNodes[parseInt(j.toString(), 10)]);\r\n                                break;\r\n                            }\r\n                            dropUl.insertBefore(li[parseInt(i.toString(), 10)], cNodes[cNodes.length]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.dataType === 1) {\r\n            this.updateField(this.treeData, this.fields, id, 'hasChildren', true);\r\n            var refId = this.getId(refNode);\r\n            var pos = isNOU(refId) ? this.treeData.length : this.getDataPos(this.treeData, this.fields, refId);\r\n            for (var j = 0; j < nodes.length; j++) {\r\n                if (!isNOU(id)) {\r\n                    var currId = this.isNumberTypeId ? parseFloat(id) : id;\r\n                    setValue(this.fields.parentID, currId, nodes[parseInt(j.toString(), 10)]);\r\n                }\r\n                this.treeData.splice(pos, 0, nodes[parseInt(j.toString(), 10)]);\r\n                pos++;\r\n            }\r\n        }\r\n        this.finalizeNode(dropUl);\r\n    };\r\n    TreeView.prototype.updateMapper = function (level) {\r\n        var mapper = (level === 1) ? this.fields : this.getChildFields(this.fields, level - 1, 1);\r\n        this.updateListProp(mapper);\r\n    };\r\n    TreeView.prototype.updateListProp = function (mapper) {\r\n        var prop = this.getActualProperties(mapper);\r\n        this.listBaseOption.fields = prop;\r\n        this.listBaseOption.fields.url = Object.prototype.hasOwnProperty.call(prop, 'navigateUrl') ? prop.navigateUrl : 'navigateUrl';\r\n    };\r\n    TreeView.prototype.getDataPos = function (obj, mapper, id) {\r\n        var pos = null;\r\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\r\n            var nodeId = getValue(mapper.id, obj[parseInt(i.toString(), 10)]);\r\n            if (obj[parseInt(i.toString(), 10)] && nodeId && nodeId.toString() === id) {\r\n                return i;\r\n            }\r\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\r\n                var data = getValue(mapper.child, obj[parseInt(i.toString(), 10)]);\r\n                pos = this.getDataPos(data, this.getChildMapper(mapper), id);\r\n                if (pos !== null) {\r\n                    break;\r\n                }\r\n            }\r\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\r\n                var items = getValue('child', obj[parseInt(i.toString(), 10)]);\r\n                pos = this.getDataPos(items, this.getChildMapper(mapper), id);\r\n                if (pos !== null) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return pos;\r\n    };\r\n    TreeView.prototype.addChildData = function (obj, mapper, id, data, index) {\r\n        var updated;\r\n        if (isNOU(id)) {\r\n            index = isNOU(index) ? obj.length : index;\r\n            for (var k = 0, len = data.length; k < len; k++) {\r\n                obj.splice(index, 0, data[parseInt(k.toString(), 10)]);\r\n                index++;\r\n            }\r\n            return updated;\r\n        }\r\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\r\n            var nodeId = getValue(mapper.id, obj[parseInt(i.toString(), 10)]);\r\n            if (obj[parseInt(i.toString(), 10)] && nodeId && nodeId.toString() === id) {\r\n                if ((typeof mapper.child === 'string' && (Object.prototype.hasOwnProperty.call(obj[parseInt(i.toString(), 10)], mapper.child) && obj[parseInt(i.toString(), 10)][mapper.child] !== null)) ||\r\n                    ((this.fields.dataSource instanceof DataManager) && Object.prototype.hasOwnProperty.call(obj[parseInt(i.toString(), 10)], 'child'))) {\r\n                    var key = (typeof mapper.child === 'string') ? mapper.child : 'child';\r\n                    var childData = getValue(key, obj[parseInt(i.toString(), 10)]);\r\n                    if (isNOU(childData)) {\r\n                        childData = [];\r\n                    }\r\n                    index = isNOU(index) ? childData.length : index;\r\n                    for (var k = 0, len = data.length; k < len; k++) {\r\n                        childData.splice(index, 0, data[parseInt(k.toString(), 10)]);\r\n                        index++;\r\n                    }\r\n                }\r\n                else {\r\n                    var key = (typeof mapper.child === 'string') ? mapper.child : 'child';\r\n                    obj[parseInt(i.toString(), 10)][\"\" + key] = data;\r\n                }\r\n                return true;\r\n            }\r\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\r\n                var childObj = getValue(mapper.child, obj[parseInt(i.toString(), 10)]);\r\n                updated = this.addChildData(childObj, this.getChildMapper(mapper), id, data, index);\r\n                if (updated !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            else if ((this.fields.dataSource instanceof DataManager) && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\r\n                var childData = getValue('child', obj[parseInt(i.toString(), 10)]);\r\n                updated = this.addChildData(childData, this.getChildMapper(mapper), id, data, index);\r\n                if (updated !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return updated;\r\n    };\r\n    TreeView.prototype.doDisableAction = function (nodes) {\r\n        var validNodes = this.nodeType(nodes);\r\n        var validID = this.checkValidId(validNodes);\r\n        this.validArr = [];\r\n        for (var i = 0, len = validID.length; i < len; i++) {\r\n            var id = validID[parseInt(i.toString(), 10)][this.fields.id].toString();\r\n            if (id && this.disableNode.indexOf(id) === -1) {\r\n                this.disableNode.push(id);\r\n            }\r\n            var liEle = this.getElement(id);\r\n            if (liEle) {\r\n                liEle.setAttribute('aria-disabled', 'true');\r\n                addClass([liEle], DISABLE);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.doEnableAction = function (nodes) {\r\n        var strNodes = this.nodeType(nodes);\r\n        for (var i = 0, len = strNodes.length; i < len; i++) {\r\n            var liEle = this.getElement(strNodes[parseInt(i.toString(), 10)]);\r\n            var id = strNodes[parseInt(i.toString(), 10)];\r\n            if (id && this.disableNode.indexOf(id) !== -1) {\r\n                this.disableNode.splice(this.disableNode.indexOf(id), 1);\r\n            }\r\n            if (liEle) {\r\n                liEle.removeAttribute('aria-disabled');\r\n                removeClass([liEle], DISABLE);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.nodeType = function (nodes) {\r\n        var validID = [];\r\n        for (var i = 0, len = nodes.length; i < len; i++) {\r\n            var id = void 0;\r\n            if (typeof nodes[parseInt(i.toString(), 10)] == 'string') {\r\n                id = (nodes[parseInt(i.toString(), 10)]) ? nodes[parseInt(i.toString(), 10)].toString() : null;\r\n            }\r\n            else if (typeof nodes[parseInt(i.toString(), 10)] === 'object') {\r\n                id = nodes[parseInt(i.toString(), 10)] ? nodes[parseInt(i.toString(), 10)].getAttribute('data-uid').toString() : null;\r\n            }\r\n            if (validID.indexOf(id) === -1) {\r\n                validID.push(id);\r\n            }\r\n        }\r\n        return validID;\r\n    };\r\n    TreeView.prototype.checkValidId = function (node) {\r\n        var _this = this;\r\n        if (this.dataType === 1) {\r\n            this.validArr = this.treeData.filter(function (data) {\r\n                return node.indexOf(data[_this.fields.id] ? data[_this.fields.id].toString() : null) !== -1;\r\n            });\r\n        }\r\n        else if (this.dataType === 2) {\r\n            for (var k = 0; k < this.treeData.length; k++) {\r\n                var id = this.treeData[parseInt(k.toString(), 10)][this.fields.id]\r\n                    ? this.treeData[parseInt(k.toString(), 10)][this.fields.id].toString()\r\n                    : null;\r\n                if (node.indexOf(id) !== -1) {\r\n                    this.validArr.push(this.treeData[parseInt(k.toString(), 10)]);\r\n                }\r\n                var childItems = getValue(this.fields.child.toString(), this.treeData[parseInt(k.toString(), 10)]);\r\n                if (childItems) {\r\n                    this.filterNestedChild(childItems, node);\r\n                }\r\n            }\r\n        }\r\n        return this.validArr;\r\n    };\r\n    TreeView.prototype.filterNestedChild = function (treeData, nodes) {\r\n        for (var k = 0; k < treeData.length; k++) {\r\n            var id = treeData[parseInt(k.toString(), 10)][this.fields.id]\r\n                ? treeData[parseInt(k.toString(), 10)][this.fields.id].toString()\r\n                : null;\r\n            if (nodes.indexOf(id) !== -1) {\r\n                this.validArr.push(treeData[parseInt(k.toString(), 10)]);\r\n            }\r\n            var childItems = getValue(this.fields.child.toString(), treeData[parseInt(k.toString(), 10)]);\r\n            if (childItems) {\r\n                this.filterNestedChild(childItems, nodes);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.setTouchClass = function () {\r\n        var ele = closest(this.element, '.' + BIGGER);\r\n        this.touchClass = isNOU(ele) ? '' : SMALL;\r\n    };\r\n    TreeView.prototype.updatePersistProp = function () {\r\n        this.removeField(this.treeData, this.fields, ['selected', 'expanded']);\r\n        var sleNodes = this.selectedNodes;\r\n        for (var l = 0, slelen = sleNodes.length; l < slelen; l++) {\r\n            this.updateField(this.treeData, this.fields, sleNodes[parseInt(l.toString(), 10)], 'selected', true);\r\n        }\r\n        var enodes = this.expandedNodes;\r\n        for (var k = 0, nodelen = enodes.length; k < nodelen; k++) {\r\n            this.updateField(this.treeData, this.fields, enodes[parseInt(k.toString(), 10)], 'expanded', true);\r\n        }\r\n        if (this.showCheckBox) {\r\n            this.removeField(this.treeData, this.fields, ['isChecked']);\r\n            var cnodes = this.checkedNodes;\r\n            for (var m = 0, nodelen = cnodes.length; m < nodelen; m++) {\r\n                this.updateField(this.treeData, this.fields, cnodes[parseInt(m.toString(), 10)], 'isChecked', true);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.removeField = function (obj, mapper, names) {\r\n        if (isNOU(obj) || isNOU(mapper)) {\r\n            return;\r\n        }\r\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\r\n            for (var j = 0; j < names.length; j++) {\r\n                var field = this.getMapperProp(mapper, names[parseInt(j.toString(), 10)]);\r\n                if (!isNOU(obj[parseInt(i.toString(), 10)][\"\" + field])) {\r\n                    delete obj[parseInt(i.toString(), 10)][\"\" + field];\r\n                }\r\n            }\r\n            if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\r\n                this.removeField(getValue(mapper.child, obj[parseInt(i.toString(), 10)]), this.getChildMapper(mapper), names);\r\n            }\r\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\r\n                this.removeField(getValue('child', obj[parseInt(i.toString(), 10)]), this.getChildMapper(mapper), names);\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.getMapperProp = function (mapper, fieldName) {\r\n        switch (fieldName) {\r\n            case 'selected':\r\n                return !isNOU(mapper.selected) ? mapper.selected : 'selected';\r\n            case 'expanded':\r\n                return !isNOU(mapper.expanded) ? mapper.expanded : 'expanded';\r\n            case 'isChecked':\r\n                return !isNOU(mapper.isChecked) ? mapper.isChecked : 'isChecked';\r\n            case 'hasChildren':\r\n                return !isNOU(mapper.hasChildren) ? mapper.hasChildren : 'hasChildren';\r\n            default:\r\n                return fieldName;\r\n        }\r\n    };\r\n    TreeView.prototype.updateField = function (obj, mapper, id, key, value) {\r\n        if (isNOU(id)) {\r\n            return;\r\n        }\r\n        else if (this.dataType === 1) {\r\n            var newId = this.isNumberTypeId ? parseFloat(id) : id;\r\n            var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', newId, false));\r\n            setValue(this.getMapperProp(mapper, key), value, resultData[0]);\r\n        }\r\n        else {\r\n            this.updateChildField(obj, mapper, id, key, value);\r\n        }\r\n    };\r\n    TreeView.prototype.updateChildField = function (obj, mapper, id, key, value, remove) {\r\n        var removedData;\r\n        if (isNOU(obj)) {\r\n            return removedData;\r\n        }\r\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\r\n            var nodeId = getValue(mapper.id, obj[parseInt(i.toString(), 10)]);\r\n            if (obj[parseInt(i.toString(), 10)] && !isNOU(nodeId) && nodeId.toString() === id) {\r\n                if (remove) {\r\n                    removedData = obj.splice(i, 1);\r\n                }\r\n                else {\r\n                    setValue(this.getMapperProp(mapper, key), value, obj[parseInt(i.toString(), 10)]);\r\n                    removedData = [];\r\n                }\r\n                return removedData;\r\n            }\r\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[parseInt(i.toString(), 10)]))) {\r\n                var childData = getValue(mapper.child, obj[parseInt(i.toString(), 10)]);\r\n                removedData = this.updateChildField(childData, this.getChildMapper(mapper), id, key, value, remove);\r\n                if (removedData !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[parseInt(i.toString(), 10)]))) {\r\n                var childItems = getValue('child', obj[parseInt(i.toString(), 10)]);\r\n                removedData = this.updateChildField(childItems, this.getChildMapper(mapper), id, key, value, remove);\r\n                if (removedData !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return removedData;\r\n    };\r\n    TreeView.prototype.triggerEvent = function (action, node) {\r\n        this.renderReactTemplates();\r\n        if (action === 'addNodes') {\r\n            var nodeData = [];\r\n            for (var i = 0; i < node.length; i++) {\r\n                nodeData.push(this.getNode(this.getElement(isNOU(node[parseInt(i.toString(), 10)][this.fields.id])\r\n                    ? getValue(this.fields.id, node[parseInt(i.toString(), 10)]).toString()\r\n                    : null)));\r\n            }\r\n            node = nodeData;\r\n        }\r\n        var eventArgs = { data: this.treeData, action: action, nodeData: node };\r\n        this.trigger('dataSourceChanged', eventArgs);\r\n    };\r\n    TreeView.prototype.wireInputEvents = function (inpEle) {\r\n        EventHandler.add(inpEle, 'blur', this.inputFocusOut, this);\r\n    };\r\n    TreeView.prototype.wireEditingEvents = function (toBind) {\r\n        var _this = this;\r\n        if (toBind && !this.disabled) {\r\n            this.touchEditObj = new Touch(this.element, {\r\n                tap: function (e) {\r\n                    if (_this.isDoubleTapped(e) && e.tapCount === 2) {\r\n                        e.originalEvent.preventDefault();\r\n                        _this.editingHandler(e.originalEvent);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.touchEditObj) {\r\n                this.touchEditObj.destroy();\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.wireClickEvent = function (toBind) {\r\n        var _this = this;\r\n        if (toBind) {\r\n            this.touchClickObj = new Touch(this.element, {\r\n                tap: function (e) {\r\n                    _this.clickHandler(e);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.touchClickObj) {\r\n                this.touchClickObj.destroy();\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.wireExpandOnEvent = function (toBind) {\r\n        var _this = this;\r\n        if (toBind) {\r\n            this.touchExpandObj = new Touch(this.element, {\r\n                tap: function (e) {\r\n                    if ((_this.expandOnType === 'Click' || (_this.expandOnType === 'DblClick' && _this.isDoubleTapped(e) && e.tapCount === 2))\r\n                        && e.originalEvent.which !== 3) {\r\n                        _this.expandHandler(e);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (this.touchExpandObj) {\r\n                this.touchExpandObj.destroy();\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.mouseDownHandler = function (e) {\r\n        this.mouseDownStatus = true;\r\n        if (e.shiftKey || e.ctrlKey) {\r\n            e.preventDefault();\r\n        }\r\n        if (e.ctrlKey && this.allowMultiSelection) {\r\n            EventHandler.add(this.element, 'contextmenu', this.preventContextMenu, this);\r\n        }\r\n    };\r\n    TreeView.prototype.preventContextMenu = function (e) {\r\n        e.preventDefault();\r\n    };\r\n    TreeView.prototype.wireEvents = function () {\r\n        EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\r\n        this.wireClickEvent(true);\r\n        if (this.expandOnType !== 'None') {\r\n            this.wireExpandOnEvent(true);\r\n        }\r\n        EventHandler.add(this.element, 'mouseover', this.onMouseOver, this);\r\n        EventHandler.add(this.element, 'mouseout', this.onMouseLeave, this);\r\n        this.keyboardModule = new KeyboardEvents(this.element, {\r\n            keyAction: this.keyActionHandler.bind(this),\r\n            keyConfigs: this.keyConfigs,\r\n            eventName: 'keydown'\r\n        });\r\n    };\r\n    TreeView.prototype.unWireEvents = function () {\r\n        EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\r\n        this.wireClickEvent(false);\r\n        this.wireExpandOnEvent(false);\r\n        EventHandler.remove(this.element, 'mouseover', this.onMouseOver);\r\n        EventHandler.remove(this.element, 'mouseout', this.onMouseLeave);\r\n        if (!this.disabled) {\r\n            this.keyboardModule.destroy();\r\n        }\r\n    };\r\n    TreeView.prototype.parents = function (element, selector) {\r\n        var matched = [];\r\n        var el = element.parentNode;\r\n        while (!isNOU(el)) {\r\n            if (matches(el, selector)) {\r\n                matched.push(el);\r\n            }\r\n            el = el.parentNode;\r\n        }\r\n        return matched;\r\n    };\r\n    TreeView.prototype.isDoubleTapped = function (e) {\r\n        var target = e.originalEvent.target;\r\n        var secondTap;\r\n        if (target && e.tapCount) {\r\n            if (e.tapCount === 1) {\r\n                this.firstTap = closest(target, '.' + LISTITEM);\r\n            }\r\n            else if (e.tapCount === 2) {\r\n                secondTap = closest(target, '.' + LISTITEM);\r\n            }\r\n        }\r\n        return (this.firstTap === secondTap);\r\n    };\r\n    TreeView.prototype.isDescendant = function (parent, child) {\r\n        var node = child.parentNode;\r\n        while (!isNOU(node)) {\r\n            if (node === parent) {\r\n                return true;\r\n            }\r\n            node = node.parentNode;\r\n        }\r\n        return false;\r\n    };\r\n    TreeView.prototype.showSpinner = function (element) {\r\n        addClass([element], LOAD);\r\n        createSpinner({\r\n            target: element,\r\n            width: Browser.isDevice ? 16 : 14\r\n        }, this.createElement);\r\n        showSpinner(element);\r\n    };\r\n    TreeView.prototype.hideSpinner = function (element) {\r\n        hideSpinner(element);\r\n        element.innerHTML = '';\r\n        removeClass([element], LOAD);\r\n    };\r\n    TreeView.prototype.setCheckedNodes = function (nodes) {\r\n        nodes = JSON.parse(JSON.stringify(nodes));\r\n        this.uncheckAll(this.checkedNodes);\r\n        this.setIndeterminate(nodes);\r\n        if (nodes.length > 0) {\r\n            this.checkAll(nodes);\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel\r\n     *\r\n     * @param {string} node - The unique identifier of the node.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.setValidCheckedNode = function (node) {\r\n        if (this.dataType === 1) {\r\n            var mapper = this.fields;\r\n            var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', node, true));\r\n            if (resultData[0]) {\r\n                this.setChildCheckState(resultData, node, resultData[0]);\r\n                if (this.autoCheck) {\r\n                    var parent_4 = resultData[0][this.fields.parentID] ? resultData[0][this.fields.parentID].toString() : null;\r\n                    var childNodes = this.getChildNodes(this.treeData, parent_4);\r\n                    var count = 0;\r\n                    for (var len = 0; len < childNodes.length; len++) {\r\n                        var childId = childNodes[parseInt(len.toString(), 10)][this.fields.id].toString();\r\n                        if (this.checkedNodes.indexOf(childId) !== -1) {\r\n                            count++;\r\n                        }\r\n                    }\r\n                    if (count === childNodes.length && this.checkedNodes.indexOf(parent_4) === -1 && parent_4) {\r\n                        this.checkedNodes.push(parent_4);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (this.dataType === 2) {\r\n            for (var a = 0; a < this.treeData.length; a++) {\r\n                var index = this.treeData[parseInt(a.toString(), 10)][this.fields.id] ? this.treeData[parseInt(a.toString(), 10)][this.fields.id].toString() : '';\r\n                if (index === node && this.checkedNodes.indexOf(node) === -1) {\r\n                    this.checkedNodes.push(node);\r\n                    break;\r\n                }\r\n                var childItems = getValue(this.fields.child.toString(), this.treeData[parseInt(a.toString(), 10)]);\r\n                if (childItems) {\r\n                    this.setChildCheckState(childItems, node, this.treeData[parseInt(a.toString(), 10)]);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel(for hierarchical DS)\r\n     *\r\n     * @param {Object[]} childItems - The child items to check.\r\n     * @param {string} node - The node to set the check state for.\r\n     * @param {Object} [treeData] - The optional tree data.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.setChildCheckState = function (childItems, node, treeData) {\r\n        var checkedParent;\r\n        var count = 0;\r\n        if (this.dataType === 1) {\r\n            if (treeData) {\r\n                checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : null;\r\n            }\r\n            for (var index = 0; index < childItems.length; index++) {\r\n                var checkNode = childItems[parseInt(index.toString(), 10)][this.fields.id]\r\n                    ? childItems[parseInt(index.toString(), 10)][this.fields.id].toString()\r\n                    : null;\r\n                if (treeData && checkedParent && this.autoCheck) {\r\n                    if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkNode) === -1) {\r\n                        this.checkedNodes.push(checkNode);\r\n                    }\r\n                }\r\n                if (checkNode === node && this.checkedNodes.indexOf(node) === -1) {\r\n                    this.checkedNodes.push(node);\r\n                }\r\n                var subChildItems = this.getChildNodes(this.treeData, checkNode);\r\n                if (subChildItems) {\r\n                    this.setChildCheckState(subChildItems, node, treeData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (treeData) {\r\n                checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\r\n            }\r\n            for (var index = 0; index < childItems.length; index++) {\r\n                var checkedChild = childItems[parseInt(index.toString(), 10)][this.fields.id] ? childItems[parseInt(index.toString(), 10)][this.fields.id].toString() : '';\r\n                if (treeData && checkedParent && this.autoCheck) {\r\n                    if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\r\n                        this.checkedNodes.push(checkedChild);\r\n                    }\r\n                }\r\n                if (checkedChild === node && this.checkedNodes.indexOf(node) === -1) {\r\n                    this.checkedNodes.push(node);\r\n                }\r\n                var subChildItems = getValue(this.fields.child.toString(), childItems[parseInt(index.toString(), 10)]);\r\n                if (subChildItems) {\r\n                    this.setChildCheckState(subChildItems, node, childItems[parseInt(index.toString(), 10)]);\r\n                }\r\n                if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\r\n                    count++;\r\n                }\r\n                if (count === childItems.length && this.checkedNodes.indexOf(checkedParent) === -1 && this.autoCheck) {\r\n                    this.checkedNodes.push(checkedParent);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TreeView.prototype.setIndeterminate = function (nodes) {\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            this.setValidCheckedNode(nodes[parseInt(i.toString(), 10)]);\r\n        }\r\n    };\r\n    TreeView.prototype.updatePosition = function (id, newData, isRefreshChild, childValue) {\r\n        if (this.dataType === 1) {\r\n            var pos = this.getDataPos(this.treeData, this.fields, id);\r\n            this.treeData.splice(pos, 1, newData);\r\n            if (isRefreshChild) {\r\n                this.removeChildNodes(id);\r\n                for (var j = 0; j < childValue.length; j++) {\r\n                    this.treeData.splice(pos, 0, childValue[parseInt(j.toString(), 10)]);\r\n                    pos++;\r\n                }\r\n            }\r\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\r\n        }\r\n        else {\r\n            this.updateChildPosition(this.treeData, this.fields, id, [newData], undefined);\r\n        }\r\n    };\r\n    TreeView.prototype.updateChildPosition = function (treeData, mapper, currID, newData, index) {\r\n        var found;\r\n        for (var i = 0, objlen = treeData.length; i < objlen; i++) {\r\n            var nodeId = getValue(mapper.id, treeData[parseInt(i.toString(), 10)]);\r\n            if (treeData[parseInt(i.toString(), 10)] && nodeId && nodeId.toString() === currID) {\r\n                treeData[parseInt(i.toString(), 10)] = newData[0];\r\n                return true;\r\n            }\r\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, treeData[parseInt(i.toString(), 10)]))) {\r\n                var childObj = getValue(mapper.child, treeData[parseInt(i.toString(), 10)]);\r\n                found = this.updateChildPosition(childObj, this.getChildMapper(mapper), currID, newData, index);\r\n                if (found !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', treeData[parseInt(i.toString(), 10)]))) {\r\n                var childData = getValue('child', treeData[parseInt(i.toString(), 10)]);\r\n                found = this.updateChildPosition(childData, this.getChildMapper(mapper), currID, newData, index);\r\n                if (found !== undefined) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return found;\r\n    };\r\n    TreeView.prototype.dynamicState = function () {\r\n        this.setDragAndDrop(this.allowDragAndDrop);\r\n        this.wireEditingEvents(this.allowEditing);\r\n        if (!this.disabled) {\r\n            this.wireEvents();\r\n            this.setRipple();\r\n        }\r\n        else {\r\n            this.unWireEvents();\r\n            this.rippleFn();\r\n            this.rippleIconFn();\r\n        }\r\n    };\r\n    TreeView.prototype.crudOperation = function (operation, nodes, target, newText, newNode, index, prevent) {\r\n        var _this = this;\r\n        var data = this.fields.dataSource;\r\n        var matchedArr = [];\r\n        var query = this.getQuery(this.fields);\r\n        var key = this.fields.id;\r\n        var crud;\r\n        var changes = {\r\n            addedRecords: [],\r\n            deletedRecords: [],\r\n            changedRecords: []\r\n        };\r\n        var nodesID = [];\r\n        if (nodes) {\r\n            nodesID = this.nodeType(nodes);\r\n        }\r\n        else if (target) {\r\n            if (typeof target == 'string') {\r\n                nodesID[0] = target.toString();\r\n            }\r\n            else if (typeof target === 'object') {\r\n                nodesID[0] = target.getAttribute('data-uid').toString();\r\n            }\r\n        }\r\n        for (var i = 0, len = nodesID.length; i < len; i++) {\r\n            var liEle = this.getElement(nodesID[parseInt(i.toString(), 10)]);\r\n            if (isNullOrUndefined(liEle)) {\r\n                continue;\r\n            }\r\n            var removedData = this.getNodeObject(nodesID[parseInt(i.toString(), 10)]);\r\n            matchedArr.push(removedData);\r\n        }\r\n        switch (operation) {\r\n            case 'delete':\r\n                if (nodes.length === 1) {\r\n                    crud = data.remove(key, matchedArr[0], query.fromTable, query);\r\n                }\r\n                else {\r\n                    changes.deletedRecords = matchedArr;\r\n                    crud = data.saveChanges(changes, key, query.fromTable, query);\r\n                }\r\n                crud.then(function () { return _this.deleteSuccess(nodesID); })\r\n                    .catch(function (e) { return _this.dmFailure(e); });\r\n                break;\r\n            case 'update':\r\n                matchedArr[0][this.fields.text] = newText;\r\n                crud = data.update(key, matchedArr[0], query.fromTable, query);\r\n                crud.then(function () { return _this.editSucess(target, newText, prevent); })\r\n                    .catch(function (e) { return _this.dmFailure(e, target, prevent); });\r\n                break;\r\n            case 'insert':\r\n                if (newNode.length === 1) {\r\n                    crud = data.insert(newNode[0], query.fromTable, query);\r\n                }\r\n                else {\r\n                    var arr = [];\r\n                    for (var i = 0, len = newNode.length; i < len; i++) {\r\n                        arr.push(newNode[parseInt(i.toString(), 10)]);\r\n                    }\r\n                    changes.addedRecords = arr;\r\n                    crud = data.saveChanges(changes, key, query.fromTable, query);\r\n                }\r\n                crud.then(function () {\r\n                    var dropLi = _this.getElement(target);\r\n                    _this.addSuccess(newNode, dropLi, index);\r\n                    _this.preventExpand = false;\r\n                }).catch(function (e) { return _this.dmFailure(e); });\r\n                break;\r\n        }\r\n    };\r\n    TreeView.prototype.deleteSuccess = function (nodes) {\r\n        var nodeData = [];\r\n        for (var i = 0, len = nodes.length; i < len; i++) {\r\n            var liEle = this.getElement(nodes[parseInt(i.toString(), 10)]);\r\n            nodeData.push(this.getNode(liEle));\r\n            if (isNOU(liEle)) {\r\n                continue;\r\n            }\r\n            this.removeNode(liEle);\r\n        }\r\n        this.updateInstance();\r\n        if (this.dataType === 1) {\r\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\r\n        }\r\n        this.triggerEvent('removeNode', nodeData);\r\n    };\r\n    TreeView.prototype.editSucess = function (target, newText, prevent) {\r\n        var liEle = this.getElement(target);\r\n        var txtEle = select('.' + LISTTEXT, liEle);\r\n        this.appendNewText(liEle, txtEle, newText, prevent);\r\n    };\r\n    TreeView.prototype.addSuccess = function (nodes, dropLi, index) {\r\n        var _this = this;\r\n        var dropUl;\r\n        var icon = dropLi ? dropLi.querySelector('.' + ICON) : null;\r\n        if (dropLi && icon && icon.classList.contains(EXPANDABLE) &&\r\n            dropLi.querySelector('.' + PARENTITEM) === null) {\r\n            this.renderChildNodes(dropLi, null, function () {\r\n                dropUl = dropLi.querySelector('.' + PARENTITEM);\r\n                _this.addGivenNodes(nodes, dropLi, index, true, dropUl);\r\n                _this.triggerEvent('addNodes', nodes);\r\n            });\r\n        }\r\n        else {\r\n            this.addGivenNodes(nodes, dropLi, index, true);\r\n            this.triggerEvent('addNodes', nodes);\r\n        }\r\n    };\r\n    TreeView.prototype.dmFailure = function (e, target, prevent) {\r\n        if (target) {\r\n            this.updatePreviousText(target, prevent);\r\n        }\r\n        this.trigger('actionFailure', { error: e });\r\n    };\r\n    TreeView.prototype.updatePreviousText = function (target, prevent) {\r\n        var liEle = this.getElement(target);\r\n        var txtEle = select('.' + LISTTEXT, liEle);\r\n        this.updateText(liEle, txtEle, this.oldText, prevent);\r\n    };\r\n    TreeView.prototype.getHierarchicalParentId = function (node, data, parentsID) {\r\n        var _this = this;\r\n        var index = data.findIndex(function (data) {\r\n            return data[_this.fields.id] && data[_this.fields.id].toString() === node;\r\n        });\r\n        if (index === -1) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                var childItems = getValue(this.fields.child.toString(), data[parseInt(i.toString(), 10)]);\r\n                if (!isNOU(childItems)) {\r\n                    index = childItems.findIndex(function (data) {\r\n                        return data[_this.fields.id] && data[_this.fields.id].toString() === node;\r\n                    });\r\n                    if (index === -1) {\r\n                        this.getHierarchicalParentId(node, childItems, parentsID);\r\n                    }\r\n                    else {\r\n                        parentsID.push(data[parseInt(i.toString(), 10)][this.fields.id].toString());\r\n                        this.getHierarchicalParentId(data[parseInt(i.toString(), 10)][this.fields.id].toString(), this.treeData, parentsID);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return parentsID;\r\n    };\r\n    /**\r\n     * Called internally if any of the property value changed.\r\n     *\r\n     * @param {TreeViewModel} newProp - The new property value.\r\n     * @param {TreeViewModel} oldProp - The old property value.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    TreeView.prototype.onPropertyChanged = function (newProp, oldProp) {\r\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\r\n            var prop = _a[_i];\r\n            switch (prop) {\r\n                case 'allowDragAndDrop':\r\n                    this.setDragAndDrop(this.allowDragAndDrop);\r\n                    break;\r\n                case 'dragArea':\r\n                    if (this.allowDragAndDrop) {\r\n                        this.dragObj.dragArea = this.dragArea;\r\n                    }\r\n                    break;\r\n                case 'allowEditing':\r\n                    this.wireEditingEvents(this.allowEditing);\r\n                    break;\r\n                case 'allowMultiSelection':\r\n                    if (this.selectedNodes.length > 1) {\r\n                        var sNode = this.getElement(this.selectedNodes[0]);\r\n                        this.isLoaded = false;\r\n                        this.removeSelectAll();\r\n                        this.selectNode(sNode, null);\r\n                        this.isLoaded = true;\r\n                    }\r\n                    this.setMultiSelect(this.allowMultiSelection);\r\n                    this.addMultiSelect(this.allowMultiSelection);\r\n                    break;\r\n                case 'allowTextWrap':\r\n                    this.setTextWrap();\r\n                    this.updateWrap();\r\n                    break;\r\n                case 'checkedNodes':\r\n                    if (this.showCheckBox) {\r\n                        this.checkedNodes = oldProp.checkedNodes;\r\n                        this.setCheckedNodes(newProp.checkedNodes);\r\n                    }\r\n                    break;\r\n                case 'autoCheck':\r\n                    if (this.showCheckBox) {\r\n                        this.autoCheck = newProp.autoCheck;\r\n                        this.ensureIndeterminate();\r\n                    }\r\n                    break;\r\n                case 'cssClass':\r\n                    this.setCssClass(oldProp.cssClass, newProp.cssClass);\r\n                    break;\r\n                case 'enableRtl':\r\n                    this.setEnableRtl();\r\n                    break;\r\n                case 'expandedNodes':\r\n                    this.isAnimate = false;\r\n                    this.setProperties({ expandedNodes: [] }, true);\r\n                    this.collapseAll();\r\n                    this.isInitalExpand = true;\r\n                    this.setProperties({ expandedNodes: isNOU(newProp.expandedNodes) ? [] : newProp.expandedNodes }, true);\r\n                    this.doExpandAction();\r\n                    this.isInitalExpand = false;\r\n                    this.isAnimate = true;\r\n                    break;\r\n                case 'expandOn':\r\n                    this.wireExpandOnEvent(false);\r\n                    this.setExpandOnType();\r\n                    if (this.expandOnType !== 'None' && !this.disabled) {\r\n                        this.wireExpandOnEvent(true);\r\n                    }\r\n                    break;\r\n                case 'disabled':\r\n                    this.setDisabledMode();\r\n                    this.dynamicState();\r\n                    break;\r\n                case 'fields':\r\n                    this.isAnimate = false;\r\n                    this.isFieldChange = true;\r\n                    this.initialRender = true;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    if (!this.isReact || this.isReact && !(this.fields.dataSource instanceof DataManager)) {\r\n                        if (!this.element.classList.contains('e-filtering')) {\r\n                            this.DDTTreeData = JSON.parse(JSON.stringify(this.fields.dataSource));\r\n                        }\r\n                        this.reRenderNodes();\r\n                    }\r\n                    this.initialRender = false;\r\n                    this.isAnimate = true;\r\n                    this.isFieldChange = false;\r\n                    break;\r\n                case 'fullRowSelect':\r\n                    this.setFullRow(this.fullRowSelect);\r\n                    this.addFullRow(this.fullRowSelect);\r\n                    if (this.allowTextWrap) {\r\n                        this.setTextWrap();\r\n                        this.updateWrap();\r\n                    }\r\n                    break;\r\n                case 'loadOnDemand':\r\n                    if (this.loadOnDemand === false && !this.onLoaded) {\r\n                        var nodes = this.element.querySelectorAll('li');\r\n                        var i = 0;\r\n                        while (i < nodes.length) {\r\n                            if (nodes[parseInt(i.toString(), 10)].getAttribute('aria-expanded') !== 'true') {\r\n                                this.renderChildNodes(nodes[parseInt(i.toString(), 10)], true, null, true);\r\n                            }\r\n                            i++;\r\n                        }\r\n                        this.onLoaded = true;\r\n                    }\r\n                    break;\r\n                case 'nodeTemplate':\r\n                    this.hasTemplate = false;\r\n                    this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\r\n                    this.reRenderNodes();\r\n                    break;\r\n                case 'selectedNodes':\r\n                    this.removeSelectAll();\r\n                    this.setProperties({ selectedNodes: newProp.selectedNodes }, true);\r\n                    this.doSelectionAction();\r\n                    break;\r\n                case 'showCheckBox':\r\n                    this.reRenderNodes();\r\n                    break;\r\n                case 'sortOrder':\r\n                    this.reRenderNodes();\r\n                    break;\r\n                case 'fullRowNavigable':\r\n                    this.setProperties({ fullRowNavigable: newProp.fullRowNavigable }, true);\r\n                    this.listBaseOption.itemNavigable = newProp.fullRowNavigable;\r\n                    this.reRenderNodes();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.destroy = function () {\r\n        this.clearTemplate();\r\n        this.element.removeAttribute('aria-activedescendant');\r\n        this.unWireEvents();\r\n        this.wireEditingEvents(false);\r\n        if (!this.disabled) {\r\n            this.rippleFn();\r\n            this.rippleIconFn();\r\n        }\r\n        this.setCssClass(this.cssClass, null);\r\n        this.setDragAndDrop(false);\r\n        this.setFullRow(false);\r\n        if (this.ulElement && this.ulElement.parentElement) {\r\n            this.ulElement.parentElement.removeChild(this.ulElement);\r\n        }\r\n        this.ulElement = null;\r\n        this.liList = null;\r\n        this.startNode = null;\r\n        this.firstTap = null;\r\n        this.expandArgs = null;\r\n        this.dragLi = null;\r\n        this.dragTarget = null;\r\n        this.dragParent = null;\r\n        this.dragObj = null;\r\n        this.dropObj = null;\r\n        this.inputObj = null;\r\n        this.touchEditObj = null;\r\n        this.touchExpandObj = null;\r\n        this.touchClickObj = null;\r\n        _super.prototype.destroy.call(this);\r\n    };\r\n    /**\r\n     * Adds the collection of TreeView nodes based on target and index position. If target node is not specified,\r\n     * then the nodes are added as children of the given parentID or in the root level of TreeView.\r\n     *\r\n     * @param  { object } nodes - Specifies the array of JSON data that has to be added.\r\n     * @param  { string | Element } target - Specifies ID of TreeView node/TreeView node as target element.\r\n     * @param  { number } index - Specifies the index to place the newly added nodes in the target element.\r\n     * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.addNodes = function (nodes, target, index, preventTargetExpand) {\r\n        if (isNOU(nodes)) {\r\n            return;\r\n        }\r\n        nodes = JSON.parse(JSON.stringify(nodes));\r\n        var dropLi = this.getElement(target);\r\n        this.preventExpand = preventTargetExpand;\r\n        if (this.fields.dataSource instanceof DataManager) {\r\n            if (!this.isOffline) {\r\n                this.crudOperation('insert', null, target, null, nodes, index, this.preventExpand);\r\n            }\r\n            else {\r\n                this.addSuccess(nodes, dropLi, index);\r\n            }\r\n        }\r\n        else if (this.dataType === 2) {\r\n            this.addGivenNodes(nodes, dropLi, index);\r\n        }\r\n        else {\r\n            if (dropLi) {\r\n                this.addGivenNodes(nodes, dropLi, index);\r\n            }\r\n            else {\r\n                nodes = this.getSortedData(nodes);\r\n                for (var i = 0; i < nodes.length; i++) {\r\n                    var pid = getValue(this.fields.parentID, nodes[parseInt(i.toString(), 10)]);\r\n                    dropLi = pid ? this.getElement(pid.toString()) : pid;\r\n                    this.addGivenNodes([nodes[parseInt(i.toString(), 10)]], dropLi, index);\r\n                }\r\n            }\r\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\r\n        }\r\n        this.updateCheckedStateFromDS();\r\n        if (this.showCheckBox && dropLi) {\r\n            this.ensureParentCheckState(dropLi);\r\n        }\r\n        if ((this.fields.dataSource instanceof DataManager === false)) {\r\n            this.preventExpand = false;\r\n            this.triggerEvent('addNodes', nodes);\r\n        }\r\n    };\r\n    /**\r\n     * Editing can also be enabled by using the `beginEdit` property, instead of clicking on the\r\n     * TreeView node. On passing the node ID or element through this property, the edit textBox\r\n     * will be created for the particular node thus allowing us to edit it.\r\n     *\r\n     * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.beginEdit = function (node) {\r\n        var ele = this.getElement(node);\r\n        if (isNOU(ele) || this.disabled) {\r\n            return;\r\n        }\r\n        this.createTextbox(ele);\r\n    };\r\n    /**\r\n     * Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes\r\n     * as argument to this method.\r\n     *\r\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.checkAll = function (nodes) {\r\n        if (this.showCheckBox) {\r\n            this.doCheckBoxAction(nodes, true);\r\n        }\r\n    };\r\n    /**\r\n     * Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.\r\n     * You can also collapse all the nodes excluding the hidden nodes by setting **excludeHiddenNodes** to true. If you want to collapse\r\n     * a specific level of nodes, set **level** as argument to collapseAll method.\r\n     *\r\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/ array of TreeView node.\r\n     * @param  {number} level - TreeView nodes will collapse up to the given level.\r\n     * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes of TreeView when collapsing all nodes.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.collapseAll = function (nodes, level, excludeHiddenNodes) {\r\n        if (!isNOU(nodes)) {\r\n            this.doGivenAction(nodes, COLLAPSIBLE, false);\r\n        }\r\n        else {\r\n            if (level > 0) {\r\n                this.collapseByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\r\n            }\r\n            else {\r\n                this.collapseAllNodes(excludeHiddenNodes);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Disables the collection of nodes by passing the ID of nodes or node elements in the array.\r\n     *\r\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.disableNodes = function (nodes) {\r\n        if (!isNOU(nodes)) {\r\n            this.doDisableAction(nodes);\r\n        }\r\n    };\r\n    /**\r\n     * Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.\r\n     *\r\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.enableNodes = function (nodes) {\r\n        if (!isNOU(nodes)) {\r\n            this.doEnableAction(nodes);\r\n        }\r\n    };\r\n    /**\r\n     * Ensures visibility of the TreeView node by using node ID or node element.\r\n     * When many TreeView nodes are present and we need to find a particular node, `ensureVisible` property\r\n     * helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.\r\n     *\r\n     * @param  {string | Element} node - Specifies ID of TreeView node/TreeView nodes.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.ensureVisible = function (node) {\r\n        var parentsId = [];\r\n        if (this.dataType === 1) {\r\n            var nodeData = this.getTreeData(node);\r\n            while (nodeData.length !== 0 && !isNOU(nodeData[0][this.fields.parentID])) {\r\n                parentsId.push(nodeData[0][this.fields.parentID].toString());\r\n                nodeData = this.getTreeData(nodeData[0][this.fields.parentID].toString());\r\n            }\r\n        }\r\n        else if (this.dataType === 2) {\r\n            parentsId = this.getHierarchicalParentId(node, this.treeData, parentsId);\r\n        }\r\n        this.expandAll(parentsId.reverse());\r\n        var liEle = this.getElement(node);\r\n        if (!isNOU(liEle)) {\r\n            if (typeof node == 'object') {\r\n                var parents = this.parents(liEle, '.' + LISTITEM);\r\n                this.expandAll(parents);\r\n            }\r\n            setTimeout(function () { liEle.scrollIntoView({ behavior: 'smooth' }); }, 450);\r\n        }\r\n    };\r\n    /**\r\n     * Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes\r\n     * as argument to this method. You can also expand all the collapsed nodes by excluding the hidden nodes by setting\r\n     * **excludeHiddenNodes** to true to this method. To expand a specific level of nodes, set **level** as argument to expandAll method.\r\n     *\r\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\r\n     * @param  {number} level - TreeView nodes will expand up to the given level.\r\n     * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes when expanding all nodes.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.expandAll = function (nodes, level, excludeHiddenNodes) {\r\n        if (!isNOU(nodes)) {\r\n            this.doGivenAction(nodes, EXPANDABLE, true);\r\n        }\r\n        else {\r\n            if (level > 0) {\r\n                this.expandByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\r\n            }\r\n            else {\r\n                this.expandAllNodes(excludeHiddenNodes);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets all the checked nodes including child, whether it is loaded or not.\r\n     *\r\n     * @returns {string[]} - An array of strings representing the unique identifiers of checked nodes.\r\n     */\r\n    TreeView.prototype.getAllCheckedNodes = function () {\r\n        var checkNodes = this.checkedNodes;\r\n        return checkNodes;\r\n    };\r\n    /**\r\n     * Gets all the disabled nodes including child, whether it is loaded or not.\r\n     *\r\n     * @returns {string[]} An array of strings representing the unique identifiers of disabled nodes.\r\n     */\r\n    TreeView.prototype.getDisabledNodes = function () {\r\n        var disabledNodes = this.disableNode;\r\n        return disabledNodes;\r\n    };\r\n    /**\r\n     * Gets the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.\r\n     *\r\n     * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\r\n     * @returns {Object} - The data associated with the specified node.\r\n     */\r\n    TreeView.prototype.getNode = function (node) {\r\n        var ele = this.getElement(node);\r\n        return this.getNodeData(ele, true);\r\n    };\r\n    /**\r\n     * To get the updated data source of TreeView after performing some operation like drag and drop, node editing,\r\n     * node selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.\r\n     * * If you pass the ID of TreeView node as arguments for this method then it will return the updated data source\r\n     * of the corresponding node otherwise it will return the entire updated data source of TreeView.\r\n     * * The updated data source also contains custom attributes if you specified in data source.\r\n     *\r\n     * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\r\n     * @isGenericType true\r\n     * @returns {Object} - The tree data associated with the specified node or element.\r\n     */\r\n    TreeView.prototype.getTreeData = function (node) {\r\n        var id = this.getId(node);\r\n        this.updatePersistProp();\r\n        if (isNOU(id)) {\r\n            return this.treeData;\r\n        }\r\n        else {\r\n            var data = this.getNodeObject(id);\r\n            return isNOU(data) ? [] : [data];\r\n        }\r\n    };\r\n    /**\r\n     * Moves the collection of nodes within the same TreeView based on target or its index position.\r\n     *\r\n     * @param  {string[] | Element[]} sourceNodes - Specifies the array of TreeView nodes ID/array of TreeView node.\r\n     * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\r\n     * @param  {number} index - Specifies the index to place the moved nodes in the target element.\r\n     * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.moveNodes = function (sourceNodes, target, index, preventTargetExpand) {\r\n        var dropLi = this.getElement(target);\r\n        var nodeData = [];\r\n        if (isNOU(dropLi)) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < sourceNodes.length; i++) {\r\n            var dragLi = this.getElement(sourceNodes[parseInt(i.toString(), 10)]);\r\n            nodeData.push(this.getNode(dragLi));\r\n            if (isNOU(dragLi) || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\r\n                continue;\r\n            }\r\n            this.preventExpand = preventTargetExpand;\r\n            this.dropAsChildNode(dragLi, dropLi, this, index, null, null, null, dropLi);\r\n        }\r\n        if (this.fields.dataSource instanceof DataManager === false) {\r\n            this.preventExpand = false;\r\n        }\r\n        this.triggerEvent('moveNodes', nodeData);\r\n    };\r\n    /**\r\n     * Refreshes a particular node of the TreeView.\r\n     *\r\n     * @param  {string | Element} target - Specifies the ID of TreeView node or TreeView node as target element.\r\n     * @param  {Object[]} newData - Specifies the new data of TreeView node.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.refreshNode = function (target, newData) {\r\n        if (isNOU(target) || isNOU(newData)) {\r\n            return;\r\n        }\r\n        var isRefreshChild = false;\r\n        if (this.dataType === 1 && newData.length > 1) {\r\n            isRefreshChild = true;\r\n        }\r\n        else if (this.dataType === 2 && newData.length === 1) {\r\n            var updatedChildValue = getValue(this.fields.child.toString(), newData[0]);\r\n            if (!isNOU(updatedChildValue)) {\r\n                isRefreshChild = true;\r\n            }\r\n        }\r\n        var liEle = this.getElement(target);\r\n        var id = liEle ? liEle.getAttribute('data-uid') : ((target) ? target.toString() : null);\r\n        this.refreshData = this.getNodeObject(id);\r\n        newData = JSON.parse(JSON.stringify(newData));\r\n        var newNodeData;\r\n        var parentData;\r\n        if (this.dataType === 1 && isRefreshChild) {\r\n            for (var k = 0; k < newData.length; k++) {\r\n                if (isNOU(newData[parseInt(k.toString(), 10)][this.fields.parentID])) {\r\n                    parentData = newData[parseInt(k.toString(), 10)];\r\n                    newData.splice(k, 1);\r\n                    break;\r\n                }\r\n            }\r\n            newNodeData = extend({}, this.refreshData, parentData);\r\n        }\r\n        else {\r\n            newNodeData = extend({}, this.refreshData, newData[0]);\r\n        }\r\n        if (isNOU(liEle)) {\r\n            this.updatePosition(id, newNodeData, isRefreshChild, newData);\r\n            return;\r\n        }\r\n        this.isRefreshed = true;\r\n        var level = parseFloat(liEle.getAttribute('aria-level'));\r\n        var newliEle = ListBase.createListItemFromJson(this.createElement, [newNodeData], this.listBaseOption, level);\r\n        var ul = select('.' + PARENTITEM, liEle);\r\n        var childItems = getValue(this.fields.child.toString(), newNodeData);\r\n        if ((isRefreshChild && ul) || (isRefreshChild && !isNOU(childItems))) {\r\n            var parentEle = liEle.parentElement;\r\n            var index = Array.prototype.indexOf.call(parentEle.childNodes, liEle);\r\n            remove(liEle);\r\n            parentEle.insertBefore(newliEle[0], parentEle.childNodes[parseInt(index.toString(), 10)]);\r\n            this.updatePosition(id, newNodeData, isRefreshChild, newData);\r\n            if (isRefreshChild && ul) {\r\n                this.expandAll([id]);\r\n            }\r\n        }\r\n        else {\r\n            var txtEle = select('.' + TEXTWRAP, liEle);\r\n            var newTextEle = select('.' + TEXTWRAP, newliEle[0]);\r\n            var icon = select('div.' + ICON, txtEle);\r\n            var newIcon = select('div.' + ICON, newTextEle);\r\n            if (icon && newIcon) {\r\n                if (newIcon.classList.contains(EXPANDABLE) && icon.classList.contains(COLLAPSIBLE)) {\r\n                    removeClass([newIcon], EXPANDABLE);\r\n                    addClass([newIcon], COLLAPSIBLE);\r\n                }\r\n                else if (newIcon.classList.contains(COLLAPSIBLE) && icon.classList.contains(EXPANDABLE)) {\r\n                    removeClass([newIcon], COLLAPSIBLE);\r\n                    addClass([newIcon], EXPANDABLE);\r\n                }\r\n                else if (icon.classList.contains('interaction')) {\r\n                    addClass([newIcon], 'interaction');\r\n                }\r\n            }\r\n            remove(txtEle);\r\n            var fullEle = select('.' + FULLROW, liEle);\r\n            fullEle.parentNode.insertBefore(newTextEle, fullEle.nextSibling);\r\n            this.updatePosition(id, newNodeData, isRefreshChild, newData);\r\n        }\r\n        liEle = this.getElement(target);\r\n        if (newNodeData[this.fields.tooltip]) {\r\n            liEle.setAttribute('title', newNodeData[this.fields.tooltip]);\r\n        }\r\n        if (Object.prototype.hasOwnProperty.call(newNodeData, this.fields.htmlAttributes) && newNodeData[this.fields.htmlAttributes]) {\r\n            var attr = {};\r\n            merge(attr, newNodeData[this.fields.htmlAttributes]);\r\n            if (attr.class) {\r\n                addClass([liEle], attr.class.split(' '));\r\n                delete attr.class;\r\n            }\r\n            else {\r\n                attributes(liEle, attr);\r\n            }\r\n        }\r\n        if (this.selectedNodes.indexOf(id) !== -1) {\r\n            liEle.setAttribute('aria-selected', 'true');\r\n            addClass([liEle], ACTIVE);\r\n        }\r\n        this.isRefreshed = false;\r\n        this.triggerEvent('refreshNode', [this.getNode(liEle)]);\r\n    };\r\n    /**\r\n     * Removes the collection of TreeView nodes by passing the array of node details as argument to this method.\r\n     *\r\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.removeNodes = function (nodes) {\r\n        if (!isNOU(nodes)) {\r\n            if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\r\n                this.crudOperation('delete', nodes);\r\n            }\r\n            else {\r\n                this.deleteSuccess(nodes);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replaces the text of the TreeView node with the given text.\r\n     *\r\n     * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\r\n     * @param  {string} newText - Specifies the new text of TreeView node.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.updateNode = function (target, newText) {\r\n        var _this = this;\r\n        if (isNOU(target) || isNOU(newText) || !this.allowEditing) {\r\n            return;\r\n        }\r\n        var liEle = this.getElement(target);\r\n        if (isNOU(liEle)) {\r\n            return;\r\n        }\r\n        var txtEle = select('.' + LISTTEXT, liEle);\r\n        this.updateOldText(liEle);\r\n        var eventArgs = this.getEditEvent(liEle, null, null);\r\n        this.trigger('nodeEditing', eventArgs, function (observedArgs) {\r\n            if (!observedArgs.cancel) {\r\n                if (_this.fields.dataSource instanceof DataManager && !_this.isOffline) {\r\n                    _this.crudOperation('update', null, target, newText, null, null, false);\r\n                }\r\n                else {\r\n                    _this.appendNewText(liEle, txtEle, newText, false);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes\r\n     * as argument to this method.\r\n     *\r\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\r\n     * @returns {void}\r\n     */\r\n    TreeView.prototype.uncheckAll = function (nodes) {\r\n        if (this.showCheckBox) {\r\n            this.doCheckBoxAction(nodes, false);\r\n        }\r\n    };\r\n    var TreeView_1;\r\n    __decorate([\r\n        Property(false)\r\n    ], TreeView.prototype, \"allowDragAndDrop\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], TreeView.prototype, \"allowEditing\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], TreeView.prototype, \"allowMultiSelection\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], TreeView.prototype, \"allowTextWrap\", void 0);\r\n    __decorate([\r\n        Complex({}, NodeAnimationSettings)\r\n    ], TreeView.prototype, \"animation\", void 0);\r\n    __decorate([\r\n        Property()\r\n    ], TreeView.prototype, \"checkedNodes\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], TreeView.prototype, \"cssClass\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], TreeView.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], TreeView.prototype, \"dragArea\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], TreeView.prototype, \"enableHtmlSanitizer\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], TreeView.prototype, \"enablePersistence\", void 0);\r\n    __decorate([\r\n        Property()\r\n    ], TreeView.prototype, \"expandedNodes\", void 0);\r\n    __decorate([\r\n        Property('Auto')\r\n    ], TreeView.prototype, \"expandOn\", void 0);\r\n    __decorate([\r\n        Complex({}, FieldsSettings)\r\n    ], TreeView.prototype, \"fields\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], TreeView.prototype, \"fullRowSelect\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], TreeView.prototype, \"loadOnDemand\", void 0);\r\n    __decorate([\r\n        Property()\r\n    ], TreeView.prototype, \"locale\", void 0);\r\n    __decorate([\r\n        Property()\r\n    ], TreeView.prototype, \"nodeTemplate\", void 0);\r\n    __decorate([\r\n        Property()\r\n    ], TreeView.prototype, \"selectedNodes\", void 0);\r\n    __decorate([\r\n        Property('None')\r\n    ], TreeView.prototype, \"sortOrder\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], TreeView.prototype, \"showCheckBox\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], TreeView.prototype, \"autoCheck\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], TreeView.prototype, \"fullRowNavigable\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"actionFailure\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"created\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"dataBound\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"dataSourceChanged\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"drawNode\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"destroyed\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"keyPress\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeChecked\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeChecking\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeClicked\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeCollapsed\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeCollapsing\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeDragging\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeDragStart\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeDragStop\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeDropped\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeEdited\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeEditing\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeExpanded\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeExpanding\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeSelected\", void 0);\r\n    __decorate([\r\n        Event()\r\n    ], TreeView.prototype, \"nodeSelecting\", void 0);\r\n    TreeView = TreeView_1 = __decorate([\r\n        NotifyPropertyChanges\r\n    ], TreeView);\r\n    return TreeView;\r\n}(Component));\r\nexport { TreeView };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}