{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\r\n * Path.ts class for EJ2-PDF\r\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\r\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\r\n * @private\r\n */\nvar PdfPath = /** @class */function (_super) {\n  __extends(PdfPath, _super);\n  /**\r\n   * Initializes a new instance of the `PdfPath` class.\r\n   * @public\r\n   */\n  /* tslint:disable-next-line:max-line-length */\n  function PdfPath(arg1, arg2, arg3, arg4) {\n    var _this = _super.call(this) || this;\n    // Fields\n    /**\r\n     * Local variable to store the points.\r\n     * @private\r\n     */\n    _this.mpoints = null;\n    /**\r\n     * Local variable to store the path Types.\r\n     * @private\r\n     */\n    _this.mpathTypes = null;\n    /**\r\n     * Local variable to store the Start Figure.\r\n     * @private\r\n     */\n    _this.mStartFigure = true;\n    /**\r\n     * Local variable to store the fill Mode.\r\n     * @private\r\n     */\n    _this.mfillMode = PdfFillMode.Alternate;\n    /**\r\n     * Local variable to store the Beziers.\r\n     * @private\r\n     */\n    _this.isBeziers3 = false;\n    /**\r\n     * Local variable to store the xps.\r\n     * @private\r\n     */\n    _this.isXps = false;\n    if (typeof arg1 === 'undefined') {\n      //\n    } else if (arg1 instanceof PdfPen) {\n      _this = _super.call(this, arg1) || this;\n      if (arg2 instanceof PdfBrush) {\n        _this = _super.call(this, arg1, arg2) || this;\n        _this.fillMode = arg3;\n      } else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n        _this.addPath(arg2, arg3);\n      }\n    } else if (arg1 instanceof PdfBrush) {\n      _this = _super.call(this, arg1) || this;\n      if (arg2 !== null && typeof arg2 !== 'undefined') {\n        _this.fillMode = arg2;\n      }\n      if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n        _this.addPath(arg3, arg4);\n      }\n    } else {\n      _this.addPath(arg1, arg2);\n    }\n    return _this;\n  }\n  Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n    // Properties\n    /**\r\n     * Gets or sets the fill mode.\r\n     * @public\r\n     */\n    get: function () {\n      return this.mfillMode;\n    },\n    set: function (value) {\n      this.mfillMode = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n    /**\r\n     * Gets the path points.\r\n     * @public\r\n     */\n    get: function () {\n      return this.points;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n    /**\r\n     * Gets the path point types.\r\n     * @public\r\n     */\n    get: function () {\n      return this.types;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n    /**\r\n     * Gets the point count.\r\n     * @public\r\n     */\n    get: function () {\n      var count = 0;\n      if (this.mpoints != null) {\n        count = this.mpoints.length;\n      }\n      return count;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n    /**\r\n     * Gets the last points.\r\n     * @public\r\n     */\n    get: function () {\n      return this.getLastPoint();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPath.prototype, \"points\", {\n    /**\r\n     * Gets the points list.\r\n     * @private\r\n     */\n    get: function () {\n      if (this.mpoints == null) {\n        this.mpoints = [];\n      }\n      return this.mpoints;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPath.prototype, \"types\", {\n    /**\r\n     * Gets the types.\r\n     * @private\r\n     */\n    get: function () {\n      if (this.mpathTypes == null) {\n        this.mpathTypes = [];\n      }\n      return this.mpathTypes;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n    if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n      return this.drawHelper(arg1, arg2.x, arg2.y);\n    } else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n      return this.drawHelper(arg1, arg2, null);\n    } else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n      return this.drawHelper(arg1, arg2, arg3, null);\n    } else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n      return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n    } else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n      var widthValue = arg1.graphics.clientSize.width - arg2;\n      var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n      return this.drawHelper(arg1, layoutRect, arg4);\n    } else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n      return this.drawHelper(arg1, arg2, arg3);\n    } else {\n      return this.drawHelper(arg1, arg2, arg3);\n    }\n  };\n  PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n    if (arg1 instanceof RectangleF) {\n      this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n    } else {\n      var points = this.getBezierArcPoints(arg1, arg2, arg2 + arg3, arg2 + arg4, arg5, arg6);\n      for (var i = 0; i < points.length; i = i + 8) {\n        /* tslint:disable-next-line:max-line-length */\n        var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n        this.addPoints(point, PathPointType.Bezier3);\n      }\n    }\n  };\n  /* tslint:disable-next-line:max-line-length */\n  PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n    if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n      this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n    } else {\n      var points = [];\n      points.push(arg1);\n      points.push(arg2);\n      points.push(arg3);\n      points.push(arg4);\n      points.push(arg5);\n      points.push(arg6);\n      points.push(arg7);\n      points.push(arg8);\n      this.addPoints(points, PathPointType.Bezier3);\n    }\n  };\n  PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n    if (arg1 instanceof RectangleF) {\n      this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n    } else {\n      this.startFigure();\n      this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n      this.closeFigure();\n    }\n  };\n  PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n    if (arg1 instanceof PointF && arg2 instanceof PointF) {\n      this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n    } else {\n      var points = [];\n      points.push(arg1);\n      points.push(arg2);\n      points.push(arg3);\n      points.push(arg4);\n      this.addPoints(points, PathPointType.Line);\n    }\n  };\n  PdfPath.prototype.addPath = function (arg1, arg2) {\n    if (arg1 instanceof PdfPath) {\n      this.addPath(arg1.pathPoints, arg1.pathTypes);\n    } else {\n      if (arg1 == null) {\n        throw new Error('ArgumentNullException:pathPoints');\n      }\n      if (arg2 == null) {\n        throw new Error('ArgumentNullException:pathTypes');\n      }\n      var count = arg1.length;\n      if (count !== arg2.length) {\n        throw new Error('The argument arrays should be of equal length.');\n      }\n    }\n  };\n  PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n    if (arg1 instanceof RectangleF) {\n      this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n    } else {\n      this.startFigure();\n      this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n      this.addPoint(new PointF(arg1 + arg3 / 2, arg2 + arg4 / 2), PathPointType.Line);\n      this.closeFigure();\n    }\n  };\n  /**\r\n   * `add a polygon` specified by points.\r\n   * @param points The points of the polygon\r\n   */\n  PdfPath.prototype.addPolygon = function (points) {\n    var count = points.length * 2;\n    var p = [];\n    this.startFigure();\n    for (var i = 0; i < points.length; i++) {\n      p.push(points[i].x);\n      p.push(points[i].y);\n    }\n    this.addPoints(p, PathPointType.Line);\n    this.closeFigure();\n  };\n  PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n    if (arg1 instanceof RectangleF) {\n      this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n    } else {\n      var points = [];\n      this.startFigure();\n      points.push(arg1);\n      points.push(y);\n      points.push(arg1 + width);\n      points.push(y);\n      points.push(arg1 + width);\n      points.push(y + height);\n      points.push(arg1);\n      points.push(y + height);\n      this.addPoints(points, PathPointType.Line);\n      this.closeFigure();\n    }\n  };\n  /**\r\n   * Starts a new figure.\r\n   * @public\r\n   */\n  PdfPath.prototype.startFigure = function () {\n    this.mStartFigure = true;\n  };\n  /**\r\n   * Closed all non-closed figures.\r\n   * @public\r\n   */\n  PdfPath.prototype.closeAllFigures = function () {\n    var startPath = this.pathPoints[0];\n    for (var i = 0; i < this.mpathTypes.length; i++) {\n      var pt = this.types[i];\n      var flag = false;\n      if (i !== 0 && pt === PathPointType.Start) {\n        this.closeFigure(i - 1);\n        flag = true;\n      } else if (i === this.mpathTypes.length - 1 && !flag && this.isXps) {\n        if (startPath.x === this.pathPoints[i].y) {\n          this.closeFigure(i);\n        }\n      }\n    }\n  };\n  /**\r\n   * Gets the last point.\r\n   * @public\r\n   */\n  PdfPath.prototype.getLastPoint = function () {\n    var lastPoint = new PointF(0, 0);\n    var count = this.pointCount;\n    if (count > 0 && this.mpoints != null) {\n      lastPoint.x = this.mpoints[count - 1].x;\n      lastPoint.y = this.mpoints[count - 1].y;\n    }\n    return lastPoint;\n  };\n  /**\r\n   * Gets the bezier points for arc constructing.\r\n   * @public\r\n   */\n  PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n    if (x1 > x2) {\n      var tmp = void 0;\n      tmp = x1;\n      x1 = x2;\n      x2 = tmp;\n    }\n    if (y2 > y1) {\n      var tmp = void 0;\n      tmp = y1;\n      y1 = y2;\n      y2 = tmp;\n    }\n    var fragAngle;\n    var numFragments;\n    if (Math.abs(e1) <= 90) {\n      fragAngle = e1;\n      numFragments = 1;\n    } else {\n      numFragments = Math.ceil(Math.abs(e1) / 90);\n      fragAngle = e1 / numFragments;\n    }\n    var xcen = (x1 + x2) / 2;\n    var ycen = (y1 + y2) / 2;\n    var rx = (x2 - x1) / 2;\n    var ry = (y2 - y1) / 2;\n    var halfAng = fragAngle * (Math.PI / 360);\n    var kappa = Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng));\n    var pointList = [];\n    for (var i = 0; i < numFragments; i++) {\n      var theta0 = (s1 + i * fragAngle) * (Math.PI / 180);\n      var theta1 = (s1 + (i + 1) * fragAngle) * (Math.PI / 180);\n      var cos0 = Math.cos(theta0);\n      var cos1 = Math.cos(theta1);\n      var sin0 = Math.sin(theta0);\n      var sin1 = Math.sin(theta1);\n      if (fragAngle > 0) {\n        /* tslint:disable-next-line:max-line-length */\n        pointList.push(xcen + rx * cos0, ycen - ry * sin0, xcen + rx * (cos0 - kappa * sin0), ycen - ry * (sin0 + kappa * cos0), xcen + rx * (cos1 + kappa * sin1), ycen - ry * (sin1 - kappa * cos1), xcen + rx * cos1, ycen - ry * sin1);\n      } else {\n        /* tslint:disable-next-line:max-line-length */\n        pointList.push(xcen + rx * cos0, ycen - ry * sin0, xcen + rx * (cos0 + kappa * sin0), ycen - ry * (sin0 - kappa * cos0), xcen + rx * (cos1 - kappa * sin1), ycen - ry * (sin1 + kappa * cos1), xcen + rx * cos1, ycen - ry * sin1);\n      }\n    }\n    return pointList;\n  };\n  /**\r\n   * `getBoundsInternal` Returns a rectangle that bounds this element.\r\n   * @public\r\n   */\n  PdfPath.prototype.getBoundsInternal = function () {\n    var points = this.pathPoints;\n    var bounds = new RectangleF(0, 0, 0, 0);\n    if (points.length > 0) {\n      var xmin = points[0].x;\n      var xmax = points[0].x;\n      var ymin = points[0].y;\n      var ymax = points[0].y;\n      for (var i = 1; i < points.length; i++) {\n        var point = points[i];\n        xmin = Math.min(point.x, xmin);\n        xmax = Math.max(point.x, xmax);\n        ymin = Math.min(point.y, ymin);\n        ymax = Math.max(point.y, ymax);\n      }\n      bounds = new RectangleF(xmin, ymin, xmax - xmin, ymax - ymin);\n    }\n    return bounds;\n  };\n  /**\r\n   * `drawInternal` Draws an element on the Graphics.\r\n   * @param graphics Graphics context where the element should be printed.\r\n   * @public\r\n   */\n  PdfPath.prototype.drawInternal = function (graphics) {\n    if (graphics == null) {\n      throw new Error('ArgumentNullException :graphics');\n    }\n    graphics.drawPath(this.obtainPen(), this.brush, this);\n  };\n  PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n    if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n      this.addPoints(points, pointType, 0, points.length);\n    } else {\n      for (var i = startIndex; i < endIndex; i++) {\n        var point = new PointF(points[i], points[i + 1]);\n        if (i === startIndex) {\n          if (this.pointCount <= 0 || this.mStartFigure) {\n            this.addPoint(point, PathPointType.Start);\n            this.mStartFigure = false;\n          } else if (point.x !== this.lastPoint.x && point.y !== this.lastPoint.y && !this.isBeziers3) {\n            this.addPoint(point, PathPointType.Line);\n          } else if (point.x !== this.lastPoint.x && point.y !== this.lastPoint.y) {\n            this.addPoint(point, PathPointType.Bezier3);\n          }\n        } else {\n          this.addPoint(point, pointType);\n        }\n        i++;\n      }\n    }\n  };\n  /**\r\n   * `add a point` Adds the point and its type\r\n   * @param points The points.\r\n   * @param pointType Type of the points.\r\n   * @private\r\n   */\n  PdfPath.prototype.addPoint = function (point, pointType) {\n    this.points.push(point);\n    this.types.push(pointType);\n  };\n  PdfPath.prototype.closeFigure = function (index) {\n    if (typeof index === 'undefined') {\n      if (this.pointCount > 0) {\n        this.closeFigure(this.pointCount - 1);\n      }\n      this.startFigure();\n    } else {\n      if (index < 0) {\n        throw new Error('IndexOutOfRangeException()');\n      }\n      var pt = this.types[index];\n      pt = pt | PathPointType.CloseSubpath;\n      this.types[index] = pt;\n    }\n  };\n  return PdfPath;\n}(PdfFillElement);\nexport { PdfPath };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfBrush","PdfPen","PdfLayoutFormat","RectangleF","PointF","PathPointType","PdfFillElement","PdfFillMode","PdfPath","_super","arg1","arg2","arg3","arg4","_this","call","mpoints","mpathTypes","mStartFigure","mfillMode","Alternate","isBeziers3","isXps","fillMode","addPath","defineProperty","get","set","value","enumerable","configurable","points","types","count","length","getLastPoint","draw","width","drawHelper","x","y","widthValue","graphics","clientSize","layoutRect","addArc","arg5","arg6","height","getBezierArcPoints","i","point","addPoints","Bezier3","addBezier","arg7","arg8","push","addEllipse","startFigure","closeFigure","addLine","Line","pathPoints","pathTypes","Error","addPie","addPoint","addPolygon","addRectangle","closeAllFigures","startPath","pt","flag","Start","lastPoint","pointCount","x1","y1","x2","y2","s1","e1","tmp","fragAngle","numFragments","Math","abs","ceil","xcen","ycen","rx","ry","halfAng","PI","kappa","cos","sin","pointList","theta0","theta1","cos0","cos1","sin0","sin1","getBoundsInternal","bounds","xmin","xmax","ymin","ymax","min","max","drawInternal","drawPath","obtainPen","brush","pointType","startIndex","endIndex","index","CloseSubpath"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/path.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * Path.ts class for EJ2-PDF\r\n */\r\nimport { PdfBrush } from './../brushes/pdf-brush';\r\nimport { PdfPen } from './../pdf-pen';\r\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\r\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\r\nimport { PathPointType } from './enum';\r\nimport { PdfFillElement } from './../figures/base/fill-element';\r\nimport { PdfFillMode } from './../enum';\r\n/**\r\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\r\n * @private\r\n */\r\nvar PdfPath = /** @class */ (function (_super) {\r\n    __extends(PdfPath, _super);\r\n    /**\r\n     * Initializes a new instance of the `PdfPath` class.\r\n     * @public\r\n     */\r\n    /* tslint:disable-next-line:max-line-length */\r\n    function PdfPath(arg1, arg2, arg3, arg4) {\r\n        var _this = _super.call(this) || this;\r\n        // Fields\r\n        /**\r\n         * Local variable to store the points.\r\n         * @private\r\n         */\r\n        _this.mpoints = null;\r\n        /**\r\n         * Local variable to store the path Types.\r\n         * @private\r\n         */\r\n        _this.mpathTypes = null;\r\n        /**\r\n         * Local variable to store the Start Figure.\r\n         * @private\r\n         */\r\n        _this.mStartFigure = true;\r\n        /**\r\n         * Local variable to store the fill Mode.\r\n         * @private\r\n         */\r\n        _this.mfillMode = PdfFillMode.Alternate;\r\n        /**\r\n         * Local variable to store the Beziers.\r\n         * @private\r\n         */\r\n        _this.isBeziers3 = false;\r\n        /**\r\n         * Local variable to store the xps.\r\n         * @private\r\n         */\r\n        _this.isXps = false;\r\n        if (typeof arg1 === 'undefined') {\r\n            //\r\n        }\r\n        else if (arg1 instanceof PdfPen) {\r\n            _this = _super.call(this, arg1) || this;\r\n            if (arg2 instanceof PdfBrush) {\r\n                _this = _super.call(this, arg1, arg2) || this;\r\n                _this.fillMode = arg3;\r\n            }\r\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\r\n                _this.addPath(arg2, arg3);\r\n            }\r\n        }\r\n        else if (arg1 instanceof PdfBrush) {\r\n            _this = _super.call(this, arg1) || this;\r\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\r\n                _this.fillMode = arg2;\r\n            }\r\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\r\n                _this.addPath(arg3, arg4);\r\n            }\r\n        }\r\n        else {\r\n            _this.addPath(arg1, arg2);\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\r\n        // Properties\r\n        /**\r\n         * Gets or sets the fill mode.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return this.mfillMode;\r\n        },\r\n        set: function (value) {\r\n            this.mfillMode = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\r\n        /**\r\n         * Gets the path points.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return this.points;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\r\n        /**\r\n         * Gets the path point types.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return this.types;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\r\n        /**\r\n         * Gets the point count.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var count = 0;\r\n            if ((this.mpoints != null)) {\r\n                count = this.mpoints.length;\r\n            }\r\n            return count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\r\n        /**\r\n         * Gets the last points.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return this.getLastPoint();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPath.prototype, \"points\", {\r\n        /**\r\n         * Gets the points list.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            if ((this.mpoints == null)) {\r\n                this.mpoints = [];\r\n            }\r\n            return this.mpoints;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPath.prototype, \"types\", {\r\n        /**\r\n         * Gets the types.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            if ((this.mpathTypes == null)) {\r\n                this.mpathTypes = [];\r\n            }\r\n            return this.mpathTypes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\r\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\r\n            return this.drawHelper(arg1, arg2.x, arg2.y);\r\n        }\r\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\r\n            return this.drawHelper(arg1, arg2, null);\r\n        }\r\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\r\n            return this.drawHelper(arg1, arg2, arg3, null);\r\n        }\r\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\r\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\r\n        }\r\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\r\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\r\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\r\n            return this.drawHelper(arg1, layoutRect, arg4);\r\n        }\r\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\r\n            return this.drawHelper(arg1, arg2, arg3);\r\n        }\r\n        else {\r\n            return this.drawHelper(arg1, arg2, arg3);\r\n        }\r\n    };\r\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\r\n        if (arg1 instanceof RectangleF) {\r\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\r\n        }\r\n        else {\r\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\r\n            for (var i = 0; i < points.length; i = i + 8) {\r\n                /* tslint:disable-next-line:max-line-length */\r\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\r\n                this.addPoints(point, PathPointType.Bezier3);\r\n            }\r\n        }\r\n    };\r\n    /* tslint:disable-next-line:max-line-length */\r\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\r\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\r\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\r\n        }\r\n        else {\r\n            var points = [];\r\n            points.push(arg1);\r\n            points.push(arg2);\r\n            points.push(arg3);\r\n            points.push(arg4);\r\n            points.push(arg5);\r\n            points.push(arg6);\r\n            points.push(arg7);\r\n            points.push(arg8);\r\n            this.addPoints(points, PathPointType.Bezier3);\r\n        }\r\n    };\r\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\r\n        if (arg1 instanceof RectangleF) {\r\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\r\n        }\r\n        else {\r\n            this.startFigure();\r\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\r\n            this.closeFigure();\r\n        }\r\n    };\r\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\r\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\r\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\r\n        }\r\n        else {\r\n            var points = [];\r\n            points.push(arg1);\r\n            points.push(arg2);\r\n            points.push(arg3);\r\n            points.push(arg4);\r\n            this.addPoints(points, PathPointType.Line);\r\n        }\r\n    };\r\n    PdfPath.prototype.addPath = function (arg1, arg2) {\r\n        if (arg1 instanceof PdfPath) {\r\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\r\n        }\r\n        else {\r\n            if ((arg1 == null)) {\r\n                throw new Error('ArgumentNullException:pathPoints');\r\n            }\r\n            if ((arg2 == null)) {\r\n                throw new Error('ArgumentNullException:pathTypes');\r\n            }\r\n            var count = arg1.length;\r\n            if ((count !== arg2.length)) {\r\n                throw new Error('The argument arrays should be of equal length.');\r\n            }\r\n        }\r\n    };\r\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\r\n        if (arg1 instanceof RectangleF) {\r\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\r\n        }\r\n        else {\r\n            this.startFigure();\r\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\r\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\r\n            this.closeFigure();\r\n        }\r\n    };\r\n    /**\r\n     * `add a polygon` specified by points.\r\n     * @param points The points of the polygon\r\n     */\r\n    PdfPath.prototype.addPolygon = function (points) {\r\n        var count = (points.length * 2);\r\n        var p = [];\r\n        this.startFigure();\r\n        for (var i = 0; i < points.length; i++) {\r\n            p.push(points[i].x);\r\n            p.push(points[i].y);\r\n        }\r\n        this.addPoints(p, PathPointType.Line);\r\n        this.closeFigure();\r\n    };\r\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\r\n        if (arg1 instanceof RectangleF) {\r\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\r\n        }\r\n        else {\r\n            var points = [];\r\n            this.startFigure();\r\n            points.push(arg1);\r\n            points.push(y);\r\n            points.push((arg1 + width));\r\n            points.push(y);\r\n            points.push((arg1 + width));\r\n            points.push((y + height));\r\n            points.push(arg1);\r\n            points.push((y + height));\r\n            this.addPoints(points, PathPointType.Line);\r\n            this.closeFigure();\r\n        }\r\n    };\r\n    /**\r\n     * Starts a new figure.\r\n     * @public\r\n     */\r\n    PdfPath.prototype.startFigure = function () {\r\n        this.mStartFigure = true;\r\n    };\r\n    /**\r\n     * Closed all non-closed figures.\r\n     * @public\r\n     */\r\n    PdfPath.prototype.closeAllFigures = function () {\r\n        var startPath = this.pathPoints[0];\r\n        for (var i = 0; i < this.mpathTypes.length; i++) {\r\n            var pt = ((this.types[i]));\r\n            var flag = false;\r\n            if (((i !== 0) && (pt === PathPointType.Start))) {\r\n                this.closeFigure((i - 1));\r\n                flag = true;\r\n            }\r\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\r\n                if ((startPath.x === this.pathPoints[i].y)) {\r\n                    this.closeFigure(i);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets the last point.\r\n     * @public\r\n     */\r\n    PdfPath.prototype.getLastPoint = function () {\r\n        var lastPoint = new PointF(0, 0);\r\n        var count = this.pointCount;\r\n        if (((count > 0) && (this.mpoints != null))) {\r\n            lastPoint.x = this.mpoints[(count - 1)].x;\r\n            lastPoint.y = this.mpoints[(count - 1)].y;\r\n        }\r\n        return lastPoint;\r\n    };\r\n    /**\r\n     * Gets the bezier points for arc constructing.\r\n     * @public\r\n     */\r\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\r\n        if ((x1 > x2)) {\r\n            var tmp = void 0;\r\n            tmp = x1;\r\n            x1 = x2;\r\n            x2 = tmp;\r\n        }\r\n        if ((y2 > y1)) {\r\n            var tmp = void 0;\r\n            tmp = y1;\r\n            y1 = y2;\r\n            y2 = tmp;\r\n        }\r\n        var fragAngle;\r\n        var numFragments;\r\n        if ((Math.abs(e1) <= 90)) {\r\n            fragAngle = e1;\r\n            numFragments = 1;\r\n        }\r\n        else {\r\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\r\n            fragAngle = (e1 / numFragments);\r\n        }\r\n        var xcen = ((x1 + x2) / 2);\r\n        var ycen = ((y1 + y2) / 2);\r\n        var rx = ((x2 - x1) / 2);\r\n        var ry = ((y2 - y1) / 2);\r\n        var halfAng = ((fragAngle * (Math.PI / 360)));\r\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\r\n        var pointList = [];\r\n        for (var i = 0; (i < numFragments); i++) {\r\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\r\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\r\n            var cos0 = (Math.cos(theta0));\r\n            var cos1 = (Math.cos(theta1));\r\n            var sin0 = (Math.sin(theta0));\r\n            var sin1 = (Math.sin(theta1));\r\n            if ((fragAngle > 0)) {\r\n                /* tslint:disable-next-line:max-line-length */\r\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\r\n            }\r\n            else {\r\n                /* tslint:disable-next-line:max-line-length */\r\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\r\n            }\r\n        }\r\n        return pointList;\r\n    };\r\n    /**\r\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\r\n     * @public\r\n     */\r\n    PdfPath.prototype.getBoundsInternal = function () {\r\n        var points = this.pathPoints;\r\n        var bounds = new RectangleF(0, 0, 0, 0);\r\n        if ((points.length > 0)) {\r\n            var xmin = points[0].x;\r\n            var xmax = points[0].x;\r\n            var ymin = points[0].y;\r\n            var ymax = points[0].y;\r\n            for (var i = 1; i < points.length; i++) {\r\n                var point = points[i];\r\n                xmin = Math.min(point.x, xmin);\r\n                xmax = Math.max(point.x, xmax);\r\n                ymin = Math.min(point.y, ymin);\r\n                ymax = Math.max(point.y, ymax);\r\n            }\r\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\r\n        }\r\n        return bounds;\r\n    };\r\n    /**\r\n     * `drawInternal` Draws an element on the Graphics.\r\n     * @param graphics Graphics context where the element should be printed.\r\n     * @public\r\n     */\r\n    PdfPath.prototype.drawInternal = function (graphics) {\r\n        if ((graphics == null)) {\r\n            throw new Error('ArgumentNullException :graphics');\r\n        }\r\n        graphics.drawPath(this.obtainPen(), this.brush, this);\r\n    };\r\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\r\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\r\n            this.addPoints(points, pointType, 0, points.length);\r\n        }\r\n        else {\r\n            for (var i = startIndex; i < endIndex; i++) {\r\n                var point = new PointF(points[i], points[(i + 1)]);\r\n                if ((i === startIndex)) {\r\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\r\n                        this.addPoint(point, PathPointType.Start);\r\n                        this.mStartFigure = false;\r\n                    }\r\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\r\n                        this.addPoint(point, PathPointType.Line);\r\n                    }\r\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\r\n                        this.addPoint(point, PathPointType.Bezier3);\r\n                    }\r\n                }\r\n                else {\r\n                    this.addPoint(point, pointType);\r\n                }\r\n                i++;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * `add a point` Adds the point and its type\r\n     * @param points The points.\r\n     * @param pointType Type of the points.\r\n     * @private\r\n     */\r\n    PdfPath.prototype.addPoint = function (point, pointType) {\r\n        this.points.push(point);\r\n        this.types.push((pointType));\r\n    };\r\n    PdfPath.prototype.closeFigure = function (index) {\r\n        if (typeof index === 'undefined') {\r\n            if ((this.pointCount > 0)) {\r\n                this.closeFigure(this.pointCount - 1);\r\n            }\r\n            this.startFigure();\r\n        }\r\n        else {\r\n            if ((index < 0)) {\r\n                throw new Error('IndexOutOfRangeException()');\r\n            }\r\n            var pt = ((this.types[index]));\r\n            pt = (pt | PathPointType.CloseSubpath);\r\n            this.types[index] = (pt);\r\n        }\r\n    };\r\n    return PdfPath;\r\n}(PdfFillElement));\r\nexport { PdfPath };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}