{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\r\n * `MomentumIndicator` module is used to render momentum indicator.\r\n */\nvar MomentumIndicator = /** @class */function (_super) {\n  __extends(MomentumIndicator, _super);\n  function MomentumIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Defines the collection of series to represent a momentum indicator.\r\n   *\r\n   * @private\r\n   * @param {TechnicalIndicator} indicator - The technical indicator for which the series collection is initialized.\r\n   * @param {Chart} chart - The chart associated with the technical indicator.\r\n   * @returns {void}\r\n   */\n  MomentumIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n    _super.prototype.initSeriesCollection.call(this, indicator, chart);\n    var upperLine = new Series(indicator, 'targetSeries', {}, true);\n    _super.prototype.setSeriesProperties.call(this, upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n  };\n  /**\r\n   * Defines the predictions using momentum approach\r\n   *\r\n   * @private\r\n   * @param {TechnicalIndicator} indicator - The technical indicator for which the data source is to be initialized.\r\n   * @returns {void}\r\n   */\n  MomentumIndicator.prototype.initDataSource = function (indicator) {\n    var upperCollection = [];\n    var signalCollection = [];\n    var validData = indicator.points;\n    if (validData && validData.length) {\n      var upperSeries = indicator.targetSeries[1];\n      var signalSeries = indicator.targetSeries[0];\n      var length_1 = indicator.period;\n      if (validData.length >= indicator.period) {\n        for (var i = 0; i < validData.length; i++) {\n          upperCollection.push(this.getDataPoint(validData[i].x, 100, validData[i], upperSeries, upperCollection.length));\n          if (!(i < length_1)) {\n            signalCollection.push(this.getDataPoint(validData[i].x, Number(validData[i].close) / Number(validData[i - length_1].close) * 100, validData[i], signalSeries, signalCollection.length));\n          }\n        }\n      }\n      this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n      this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[1]);\n    }\n  };\n  /**\r\n   * To destroy the momentum indicator.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  MomentumIndicator.prototype.destroy = function () {\n    /**\r\n     * Destroys the momentum indicator.\r\n     */\n  };\n  /**\r\n   * Get module name.\r\n   *\r\n   * @returns {string} - Returns the module name.\r\n   */\n  MomentumIndicator.prototype.getModuleName = function () {\n    /**\r\n     * Returns the module name of the series.\r\n     */\n    return 'MomentumIndicator';\n  };\n  return MomentumIndicator;\n}(TechnicalAnalysis);\nexport { MomentumIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","TechnicalAnalysis","MomentumIndicator","_super","apply","arguments","initSeriesCollection","indicator","chart","call","upperLine","setSeriesProperties","color","width","initDataSource","upperCollection","signalCollection","validData","points","length","upperSeries","targetSeries","signalSeries","length_1","period","i","push","getDataPoint","x","Number","close","setSeriesRange","destroy","getModuleName"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/momentum-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Series } from '../series/chart-series';\r\nimport { TechnicalAnalysis } from './indicator-base';\r\n/**\r\n * `MomentumIndicator` module is used to render momentum indicator.\r\n */\r\nvar MomentumIndicator = /** @class */ (function (_super) {\r\n    __extends(MomentumIndicator, _super);\r\n    function MomentumIndicator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Defines the collection of series to represent a momentum indicator.\r\n     *\r\n     * @private\r\n     * @param {TechnicalIndicator} indicator - The technical indicator for which the series collection is initialized.\r\n     * @param {Chart} chart - The chart associated with the technical indicator.\r\n     * @returns {void}\r\n     */\r\n    MomentumIndicator.prototype.initSeriesCollection = function (indicator, chart) {\r\n        _super.prototype.initSeriesCollection.call(this, indicator, chart);\r\n        var upperLine = new Series(indicator, 'targetSeries', {}, true);\r\n        _super.prototype.setSeriesProperties.call(this, upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\r\n    };\r\n    /**\r\n     * Defines the predictions using momentum approach\r\n     *\r\n     * @private\r\n     * @param {TechnicalIndicator} indicator - The technical indicator for which the data source is to be initialized.\r\n     * @returns {void}\r\n     */\r\n    MomentumIndicator.prototype.initDataSource = function (indicator) {\r\n        var upperCollection = [];\r\n        var signalCollection = [];\r\n        var validData = indicator.points;\r\n        if (validData && validData.length) {\r\n            var upperSeries = indicator.targetSeries[1];\r\n            var signalSeries = indicator.targetSeries[0];\r\n            var length_1 = indicator.period;\r\n            if (validData.length >= indicator.period) {\r\n                for (var i = 0; i < validData.length; i++) {\r\n                    upperCollection.push(this.getDataPoint(validData[i].x, 100, validData[i], upperSeries, upperCollection.length));\r\n                    if (!(i < length_1)) {\r\n                        signalCollection.push(this.getDataPoint(validData[i].x, (Number(validData[i].close) / Number(validData[i - length_1].close) * 100), validData[i], signalSeries, signalCollection.length));\r\n                    }\r\n                }\r\n            }\r\n            this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\r\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[1]);\r\n        }\r\n    };\r\n    /**\r\n     * To destroy the momentum indicator.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    MomentumIndicator.prototype.destroy = function () {\r\n        /**\r\n         * Destroys the momentum indicator.\r\n         */\r\n    };\r\n    /**\r\n     * Get module name.\r\n     *\r\n     * @returns {string} - Returns the module name.\r\n     */\r\n    MomentumIndicator.prototype.getModuleName = function () {\r\n        /**\r\n         * Returns the module name of the series.\r\n         */\r\n        return 'MomentumIndicator';\r\n    };\r\n    return MomentumIndicator;\r\n}(TechnicalAnalysis));\r\nexport { MomentumIndicator };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}