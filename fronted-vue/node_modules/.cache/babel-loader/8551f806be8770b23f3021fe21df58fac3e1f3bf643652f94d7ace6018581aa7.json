{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventHandler, Browser, createElement } from '@syncfusion/ej2-base';\nimport { getRectLocation, minMax, getElement, ChartLocation, RectOption } from '../../common/utils/helper';\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { Toolkit } from './zooming-toolkit';\nimport { zoomComplete, onZooming } from '../../common/model/constants';\nimport { withInBounds } from '../../common/utils/helper';\n/**\r\n * `Zooming` module handles the zooming for chart.\r\n */\nvar Zoom = /** @class */function () {\n  /**\r\n   * Constructor for Zooming module.\r\n   *\r\n   * @private\r\n   */\n  function Zoom(chart) {\n    this.zoomCompleteEvtCollection = [];\n    this.chart = chart;\n    this.isPointer = Browser.isPointer;\n    this.browserName = Browser.info.name;\n    this.wheelEvent = this.browserName === 'mozilla' ? this.isPointer ? 'mousewheel' : 'DOMMouseScroll' : 'mousewheel';\n    this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\n    this.addEventListener();\n    this.isDevice = Browser.isDevice;\n    var zooming = chart.zoomSettings;\n    this.toolkit = new Toolkit(chart);\n    this.zooming = zooming;\n    this.elementId = chart.element.id;\n    this.zoomingRect = new Rect(0, 0, 0, 0);\n    this.zoomAxes = [];\n    this.zoomkitOpacity = 1;\n    this.isIOS = Browser.isIos || Browser.isIos7;\n    this.isZoomed = this.performedUI = this.zooming.enablePan || this.chart.primaryXAxis.zoomFactor < 1 && this.chart.primaryXAxis.zoomPosition > 0 || this.chart.primaryYAxis.zoomFactor < 1 && this.chart.primaryYAxis.zoomPosition > 0 || this.isAxisZoomed(this.chart.axes);\n    if (zooming.enableScrollbar) {\n      chart.scrollElement = createElement('div', {\n        id: chart.element.id + '_scrollElement'\n      });\n    }\n  }\n  /**\r\n   * Renders the zooming functionality for the chart.\r\n   *\r\n   * @param {PointerEvent | TouchEvent} e - The pointer or touch event.\r\n   * @param {Chart} chart - The chart instance.\r\n   * @param {boolean} isTouch - Indicates whether the event is a touch event.\r\n   * @returns {void}\r\n   */\n  Zoom.prototype.renderZooming = function (e, chart, isTouch) {\n    this.calculateZoomAxesRange(chart);\n    if (this.zooming.enableSelectionZooming && (!isTouch || chart.isDoubleTap && this.touchStartList.length === 1) && (!this.isPanning || chart.isDoubleTap)) {\n      this.isPanning = this.isDevice ? true : this.isPanning;\n      this.performedUI = true;\n      this.drawZoomingRectangle(chart);\n    } else if (this.isPanning && chart.isChartDrag) {\n      if (!isTouch || isTouch && this.touchStartList.length === 1) {\n        this.pinchTarget = isTouch ? e.target : null;\n        this.doPan(chart, chart.axisCollections);\n      }\n    }\n  };\n  // Zooming rectangle drawn here\n  Zoom.prototype.drawZoomingRectangle = function (chart) {\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\n    var endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\n    var rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\n    if (rect.width > 0 && rect.height > 0) {\n      this.isZoomed = true;\n      chart.disableTrackTooltip = true;\n      chart.svgObject.setAttribute('cursor', 'crosshair');\n      if (this.zooming.mode === 'X') {\n        rect.height = areaBounds.height;\n        rect.y = areaBounds.y;\n      } else if (this.zooming.mode === 'Y') {\n        rect.width = areaBounds.width;\n        rect.x = areaBounds.x;\n      }\n      var svg = chart.enableCanvas ? document.getElementById(this.elementId + '_tooltip_svg') : chart.svgObject;\n      svg.appendChild(chart.svgRenderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, {\n        color: chart.themeStyle.selectionRectStroke,\n        width: 1\n      }, 1, rect, 0, 0, '', '3')));\n    }\n  };\n  // Panning performed here\n  Zoom.prototype.doPan = function (chart, axes, xDifference, yDifference) {\n    var _this = this;\n    if (xDifference === void 0) {\n      xDifference = 0;\n    }\n    if (yDifference === void 0) {\n      yDifference = 0;\n    }\n    if (chart.startMove && chart.crosshair.enable) {\n      return null;\n    }\n    var currentScale;\n    var offset;\n    this.isZoomed = true;\n    this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n    chart.delayRedraw = true;\n    this.zoomCompleteEvtCollection = [];\n    chart.disableTrackTooltip = true;\n    var argsData;\n    var zoomedAxisCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        previousVisibleRange: axis.visibleRange,\n        currentVisibleRange: null\n      };\n      currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\n      if (axis.orientation === 'Horizontal') {\n        offset = (xDifference !== 0 ? xDifference : chart.previousMouseMoveX - chart.mouseX) / axis.rect.width / currentScale;\n        argsData.currentZoomPosition = minMax(axis.zoomPosition + offset, 0, 1 - axis.zoomFactor);\n      } else {\n        offset = (yDifference !== 0 ? yDifference : chart.previousMouseMoveY - chart.mouseY) / axis.rect.height / currentScale;\n        argsData.currentZoomPosition = minMax(axis.zoomPosition - offset, 0, 1 - axis.zoomFactor);\n      }\n      if (!argsData.cancel) {\n        axis.zoomFactor = argsData.currentZoomFactor;\n        axis.zoomPosition = argsData.currentZoomPosition;\n        this.zoomCompleteEvtCollection.push(argsData);\n      }\n      zoomedAxisCollection.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    var zoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, zoomingEventArgs, function () {\n        if (zoomingEventArgs.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.performDefferedZoom(chart);\n        }\n      });\n    } else {\n      this.chart.trigger(onZooming, zoomingEventArgs, function () {\n        if (zoomingEventArgs.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.performDefferedZoom(chart);\n          _this.redrawOnZooming(chart, false);\n        }\n      });\n    }\n  };\n  Zoom.prototype.performDefferedZoom = function (chart) {\n    var translateX;\n    var translateY;\n    if (this.zooming.enableDeferredZooming) {\n      translateX = chart.mouseX - chart.mouseDownX;\n      translateY = chart.mouseY - chart.mouseDownY;\n      switch (this.zooming.mode) {\n        case 'X':\n          translateY = 0;\n          break;\n        case 'Y':\n          translateX = 0;\n          break;\n      }\n      this.setTransform(translateX, translateY, null, null, chart, false);\n      this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n      if (chart.enableCanvas) {\n        this.performZoomRedraw(chart);\n      }\n    } else {\n      this.performZoomRedraw(chart);\n    }\n    chart.previousMouseMoveX = chart.mouseX;\n    chart.previousMouseMoveY = chart.mouseY;\n  };\n  /**\r\n   * Redraw the chart on zooming.\r\n   *\r\n   * @param {Chart} chart - The chart instance.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Zoom.prototype.performZoomRedraw = function (chart) {\n    var rect = this.zoomingRect;\n    chart.animateSeries = false;\n    if (this.isZoomed) {\n      if (rect.width > 0 && rect.height > 0) {\n        this.performedUI = true;\n        chart.svgObject.setAttribute('cursor', 'auto');\n        this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\n        chart.isDoubleTap = false;\n      } else if (chart.disableTrackTooltip) {\n        chart.disableTrackTooltip = false;\n        chart.delayRedraw = false;\n        if (chart.enableCanvas) {\n          chart.createChartSvg();\n        } else {\n          chart.removeSvg();\n        }\n        // chart.enableCanvas ? chart.createChartSvg() : chart.removeSvg();\n        chart.refreshAxis();\n        chart.refreshBound();\n      }\n    }\n  };\n  Zoom.prototype.refreshAxis = function (layout, chart, axes) {\n    var mode = chart.zoomSettings.mode;\n    layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\n    axes.map(function (axis, index) {\n      if (axis.orientation === 'Horizontal' && mode !== 'Y') {\n        layout.drawXAxisLabels(axis, index, null, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      }\n      if (axis.orientation === 'Vertical' && mode !== 'X') {\n        layout.drawYAxisLabels(axis, index, null, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      }\n    });\n  };\n  // Rectangular zoom calculated here performed here\n  Zoom.prototype.doZoom = function (chart, axes, bounds) {\n    var _this = this;\n    var zoomRect = this.zoomingRect;\n    var mode = this.zooming.mode;\n    var argsData;\n    this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n    var zoomedAxisCollections = [];\n    this.zoomCompleteEvtCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        previousVisibleRange: axis.visibleRange,\n        currentVisibleRange: null\n      };\n      if (axis.orientation === 'Horizontal') {\n        if (mode !== 'Y') {\n          argsData.currentZoomPosition += Math.abs((zoomRect.x - bounds.x) / bounds.width) * axis.zoomFactor;\n          argsData.currentZoomFactor *= zoomRect.width / bounds.width;\n        }\n      } else {\n        if (mode !== 'X') {\n          argsData.currentZoomPosition += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / bounds.height)) * axis.zoomFactor;\n          argsData.currentZoomFactor *= zoomRect.height / bounds.height;\n        }\n      }\n      if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\n        argsData.currentZoomFactor = argsData.previousZoomFactor;\n        argsData.currentZoomPosition = argsData.previousZoomPosition;\n      }\n      if (!argsData.cancel) {\n        axis.zoomFactor = argsData.currentZoomFactor;\n        axis.zoomPosition = argsData.currentZoomPosition;\n        this.zoomCompleteEvtCollection.push(argsData);\n      }\n      zoomedAxisCollections.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    var onZoomingEventArg = {\n      cancel: false,\n      axisCollection: zoomedAxisCollections,\n      name: onZooming\n    };\n    if (!onZoomingEventArg.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArg, function () {\n        if (onZoomingEventArg.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.zoomingRect = new Rect(0, 0, 0, 0);\n          _this.performZoomRedraw(chart);\n        }\n      });\n    } else {\n      this.chart.trigger(onZooming, onZoomingEventArg, function () {\n        if (onZoomingEventArg.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.zoomingRect = new Rect(0, 0, 0, 0);\n          _this.redrawOnZooming(chart);\n        }\n      });\n    }\n  };\n  /**\r\n   * Redraws the chart on zooming.\r\n   *\r\n   * @param {Chart} chart - The chart instance.\r\n   * @param {boolean} [isRedraw=true] - Indicates whether to redraw the chart.\r\n   * @param {boolean} [isMouseUp=false] - Indicates whether the mouse button is released.\r\n   * @returns {void}\r\n   */\n  Zoom.prototype.redrawOnZooming = function (chart, isRedraw, isMouseUp) {\n    if (isRedraw === void 0) {\n      isRedraw = true;\n    }\n    if (isMouseUp === void 0) {\n      isMouseUp = false;\n    }\n    var zoomCompleteCollection = isMouseUp ? this.toolkit.zoomCompleteEvtCollection : this.zoomCompleteEvtCollection;\n    if (isRedraw) {\n      this.performZoomRedraw(chart);\n    }\n    var argsData;\n    for (var i = 0; i < zoomCompleteCollection.length; i++) {\n      if (!zoomCompleteCollection[i].cancel) {\n        argsData = {\n          cancel: false,\n          name: zoomComplete,\n          axis: chart.axisCollections[i],\n          previousZoomFactor: zoomCompleteCollection[i].previousZoomFactor,\n          previousZoomPosition: zoomCompleteCollection[i].previousZoomPosition,\n          currentZoomFactor: chart.axisCollections[i].zoomFactor,\n          currentZoomPosition: chart.axisCollections[i].zoomPosition,\n          currentVisibleRange: chart.axisCollections[i].visibleRange,\n          previousVisibleRange: zoomCompleteCollection[i].previousVisibleRange\n        };\n        chart.trigger(zoomComplete, argsData);\n      }\n    }\n  };\n  /**\r\n   * Performs mouse wheel zooming on the chart.\r\n   *\r\n   * @param {WheelEvent} e - The wheel event.\r\n   * @param {number} mouseX - The X-coordinate of the mouse pointer.\r\n   * @param {number} mouseY - The Y-coordinate of the mouse pointer.\r\n   * @param {Chart} chart - The chart instance.\r\n   * @param {AxisModel[]} axes - The axes in the chart.\r\n   * @returns {void}\r\n   */\n  Zoom.prototype.performMouseWheelZooming = function (e, mouseX, mouseY, chart, axes) {\n    var _this = this;\n    var direction = this.browserName === 'mozilla' && !this.isPointer ? -e.detail / 3 > 0 ? 1 : -1 : e['wheelDelta'] > 0 ? 1 : -1;\n    var mode = this.zooming.mode;\n    var origin = 0.5;\n    var cumulative;\n    var zoomFactor;\n    var zoomPosition;\n    this.isZoomed = true;\n    this.calculateZoomAxesRange(chart);\n    chart.disableTrackTooltip = true;\n    this.performedUI = true;\n    this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\n    this.zoomCompleteEvtCollection = [];\n    var argsData;\n    var zoomedAxisCollection = [];\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      argsData = {\n        cancel: false,\n        name: zoomComplete,\n        axis: axis,\n        previousZoomFactor: axis.zoomFactor,\n        previousZoomPosition: axis.zoomPosition,\n        currentZoomFactor: axis.zoomFactor,\n        currentZoomPosition: axis.zoomPosition,\n        currentVisibleRange: null,\n        previousVisibleRange: axis.visibleRange\n      };\n      if (axis.orientation === 'Vertical' && mode !== 'X' || axis.orientation === 'Horizontal' && mode !== 'Y') {\n        cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + 0.25 * direction, 1);\n        cumulative = cumulative > 50000000000 ? 50000000000 : cumulative;\n        if (cumulative >= 1) {\n          origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - mouseY / axis.rect.height;\n          origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n          zoomFactor = cumulative === 1 ? 1 : minMax((direction > 0 ? 0.9 : 1.1) / cumulative, 0, 1);\n          zoomPosition = cumulative === 1 ? 0 : axis.zoomPosition + (axis.zoomFactor - zoomFactor) * origin;\n          if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\n            zoomFactor = zoomPosition + zoomFactor > 1 ? 1 - zoomPosition : zoomFactor;\n          }\n          argsData.currentZoomFactor = zoomFactor;\n          argsData.currentZoomPosition = zoomPosition;\n        }\n        if (argsData.currentZoomFactor === argsData.previousZoomFactor && argsData.currentZoomPosition === argsData.previousZoomPosition) {\n          chart.disableTrackTooltip = false;\n        }\n        if (!argsData.cancel) {\n          axis.zoomFactor = argsData.currentZoomFactor;\n          axis.zoomPosition = argsData.currentZoomPosition;\n          this.zoomCompleteEvtCollection.push(argsData);\n        }\n      }\n      zoomedAxisCollection.push({\n        zoomFactor: axis.zoomFactor,\n        zoomPosition: axis.zoomFactor,\n        axisName: axis.name,\n        axisRange: axis.visibleRange\n      });\n    }\n    var onZoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\n      this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n        if (onZoomingEventArgs.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.performZoomRedraw(chart);\n        }\n      });\n    } else {\n      this.chart.trigger(onZooming, onZoomingEventArgs, function () {\n        if (onZoomingEventArgs.cancel) {\n          _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\n        } else {\n          _this.redrawOnZooming(chart);\n        }\n      });\n    }\n  };\n  /**\r\n   * Performs pinch zooming on the chart.\r\n   *\r\n   * @param {TouchEvent} e - The touch event.\r\n   * @param {Chart} chart - The chart instance.\r\n   * @returns {boolean} - Indicates whether pinch zooming is performed.\r\n   */\n  Zoom.prototype.performPinchZooming = function (e, chart) {\n    if (this.zoomingRect.width > 0 && this.zoomingRect.height > 0 || chart.startMove && chart.crosshair.enable) {\n      return false;\n    }\n    this.calculateZoomAxesRange(chart);\n    this.isZoomed = true;\n    this.isPanning = true;\n    this.performedUI = true;\n    this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\n    chart.delayRedraw = true;\n    chart.disableTrackTooltip = true;\n    var elementOffset = chart.element.getBoundingClientRect();\n    var touchDown = this.touchStartList;\n    var touchMove = this.touchMoveList;\n    var touch0StartX = touchDown[0].pageX - elementOffset.left;\n    var touch0StartY = touchDown[0].pageY - elementOffset.top;\n    var touch0EndX = touchMove[0].pageX - elementOffset.left;\n    var touch0EndY = touchMove[0].pageY - elementOffset.top;\n    var touch1StartX = touchDown[1].pageX - elementOffset.left;\n    var touch1StartY = touchDown[1].pageY - elementOffset.top;\n    var touch1EndX = touchMove[1].pageX - elementOffset.left;\n    var touch1EndY = touchMove[1].pageY - elementOffset.top;\n    var scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\n    var scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\n    var clipX = (this.offset.x - touch0EndX) / scaleX + touch0StartX;\n    var clipY = (this.offset.y - touch0EndY) / scaleY + touch0StartY;\n    var pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\n    var translateXValue = touch0EndX - scaleX * touch0StartX;\n    var translateYValue = touch0EndY - scaleY * touch0StartY;\n    if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\n      switch (this.zooming.mode) {\n        case 'XY':\n          this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\n          break;\n        case 'X':\n          this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\n          break;\n        case 'Y':\n          this.setTransform(0, translateYValue, 1, scaleY, chart, true);\n          break;\n      }\n    }\n    if (!this.calculatePinchZoomFactor(chart, pinchRect)) {\n      this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\n      this.redrawOnZooming(chart, false);\n    }\n    return true;\n  };\n  Zoom.prototype.calculatePinchZoomFactor = function (chart, pinchRect) {\n    var mode = this.zooming.mode;\n    var selectionMin;\n    var selectionMax;\n    var rangeMin;\n    var rangeMax;\n    var value;\n    var axisTrans;\n    var argsData;\n    var currentZF;\n    var currentZP;\n    var zoomedAxisCollection = [];\n    this.zoomCompleteEvtCollection = [];\n    for (var index = 0; index < chart.axisCollections.length; index++) {\n      var axis = chart.axisCollections[index];\n      if (axis.orientation === 'Horizontal' && mode !== 'Y' || axis.orientation === 'Vertical' && mode !== 'X') {\n        currentZF = axis.zoomFactor;\n        currentZP = axis.zoomPosition;\n        argsData = {\n          cancel: false,\n          name: zoomComplete,\n          axis: axis,\n          previousZoomFactor: axis.zoomFactor,\n          previousZoomPosition: axis.zoomPosition,\n          currentZoomFactor: currentZF,\n          currentZoomPosition: currentZP,\n          previousVisibleRange: axis.visibleRange,\n          currentVisibleRange: null\n        };\n        if (axis.orientation === 'Horizontal') {\n          value = pinchRect.x - this.offset.x;\n          axisTrans = axis.rect.width / this.zoomAxes[index].delta;\n          rangeMin = value / axisTrans + this.zoomAxes[index].min;\n          value = pinchRect.x + pinchRect.width - this.offset.x;\n          rangeMax = value / axisTrans + this.zoomAxes[index].min;\n        } else {\n          value = pinchRect.y - this.offset.y;\n          axisTrans = axis.rect.height / this.zoomAxes[index].delta;\n          rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n          value = pinchRect.y + pinchRect.height - this.offset.y;\n          rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\n        }\n        selectionMin = Math.min(rangeMin, rangeMax);\n        selectionMax = Math.max(rangeMin, rangeMax);\n        currentZP = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\n        currentZF = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\n        argsData.currentZoomPosition = currentZP < 0 ? 0 : currentZP;\n        argsData.currentZoomFactor = currentZF > 1 ? 1 : currentZF < 0.03 ? 0.03 : currentZF;\n        if (!argsData.cancel) {\n          axis.zoomFactor = argsData.currentZoomFactor;\n          axis.zoomPosition = argsData.currentZoomPosition;\n          this.zoomCompleteEvtCollection.push(argsData);\n        }\n        zoomedAxisCollection.push({\n          zoomFactor: axis.zoomFactor,\n          zoomPosition: axis.zoomFactor,\n          axisName: axis.name,\n          axisRange: axis.visibleRange\n        });\n      }\n    }\n    var onZoomingEventArgs = {\n      cancel: false,\n      axisCollection: zoomedAxisCollection,\n      name: onZooming\n    };\n    if (!onZoomingEventArgs.cancel) {\n      this.chart.trigger(onZooming, onZoomingEventArgs);\n      if (onZoomingEventArgs.cancel) {\n        this.zoomCancel(chart.axisCollections, this.zoomCompleteEvtCollection);\n        return true;\n      }\n    }\n    return false;\n  };\n  // Series transformation style applied here.\n  Zoom.prototype.setTransform = function (transX, transY, scaleX, scaleY, chart, isPinch) {\n    if (!chart.enableCanvas) {\n      chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n    }\n    if (chart.indicatorElements) {\n      chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\n    }\n    var translate;\n    var xAxisLoc;\n    var yAxisLoc;\n    var element;\n    if (transX !== null && transY !== null) {\n      for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n        var value = _a[_i];\n        xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\n        yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\n        translate = 'translate(' + (transX + (isPinch ? scaleX * xAxisLoc : xAxisLoc)) + ',' + (transY + (isPinch ? scaleY * yAxisLoc : yAxisLoc)) + ')';\n        translate = scaleX || scaleY ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\n        if (value.visible) {\n          if (value.category === 'Indicator') {\n            value.seriesElement.parentNode.setAttribute('transform', translate);\n          } else {\n            if (!chart.enableCanvas) {\n              value.seriesElement.setAttribute('transform', translate);\n            }\n          }\n          element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\n          if (value.errorBarElement) {\n            value.errorBarElement.setAttribute('transform', translate);\n          }\n          if (value.symbolElement) {\n            value.symbolElement.setAttribute('transform', translate);\n          }\n          if (value.textElement) {\n            value.textElement.setAttribute('visibility', 'hidden');\n            value.shapeElement.setAttribute('visibility', 'hidden');\n          }\n          if (element) {\n            element.style.visibility = 'hidden';\n          }\n        }\n      }\n    }\n  };\n  Zoom.prototype.calculateZoomAxesRange = function (chart) {\n    var range;\n    var axisRange;\n    for (var index = 0; index < chart.axisCollections.length; index++) {\n      var axis = chart.axisCollections[index];\n      axisRange = axis.visibleRange;\n      if (this.zoomAxes[index]) {\n        if (!chart.delayRedraw) {\n          this.zoomAxes[index].min = axisRange.min;\n          this.zoomAxes[index].delta = axisRange.delta;\n        }\n      } else {\n        range = {\n          actualMin: axis.actualRange.min,\n          actualDelta: axis.actualRange.delta,\n          min: axisRange.min,\n          delta: axisRange.delta\n        };\n        this.zoomAxes[index] = range;\n      }\n    }\n  };\n  // Zooming Toolkit created here\n  Zoom.prototype.showZoomingToolkit = function (chart) {\n    var toolboxItems = this.zooming.toolbarItems;\n    var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\n    var spacing = 10;\n    var render = chart.svgRenderer;\n    var length = this.isDevice ? 1 : toolboxItems.length;\n    var iconSize = this.isDevice ? measureText('Reset Zoom', {\n      size: '12px'\n    }, {\n      size: '12px',\n      fontStyle: 'Normal',\n      fontWeight: '400',\n      fontFamily: 'Segoe UI'\n    }).width : 16;\n    var height = this.isDevice ? measureText('Reset Zoom', {\n      size: '12px'\n    }, {\n      size: '12px',\n      fontStyle: 'Normal',\n      fontWeight: '400',\n      fontFamily: 'Segoe UI'\n    }).height : chart.theme.indexOf('Fluent2') > -1 ? 18 : 22;\n    var width = length * iconSize + (length + 1) * spacing + (length - 1) * spacing;\n    var transX = areaBounds.x + areaBounds.width - width - spacing;\n    var transY = areaBounds.y + spacing;\n    var xPosition = spacing;\n    var toolkit = this.toolkit;\n    var element;\n    var shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\n    shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\n    shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\n    if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\n      return false;\n    }\n    var defElement = render.createDefs();\n    toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\n    defElement.innerHTML = shadowElement;\n    this.toolkitElements = render.createGroup({\n      id: this.elementId + '_Zooming_KitCollection',\n      transform: 'translate(' + transX + ',' + transY + ')'\n    });\n    this.toolkitElements.appendChild(defElement);\n    var zoomFillColor = this.chart.theme === 'Tailwind' ? '#F3F4F6' : this.chart.theme === 'Fluent' ? '#F3F2F1' : this.chart.theme === 'Material3' ? '#FFFFFF' : this.chart.theme === 'Material3Dark' ? '#1C1B1F' : this.chart.theme === 'Fluent2' ? '#F5F5F5' : this.chart.theme === 'Fluent2Dark' ? '#141414' : '#fafafa';\n    this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, {\n      color: 'transparent',\n      width: 1\n    }, 1, new Rect(0, 0, width, height + spacing * 2), 4, 4)));\n    var outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, {\n      color: 'transparent',\n      width: 1\n    }, 0.1, new Rect(0, 0, width, height + spacing * 2), 4, 4));\n    if (this.chart.theme === 'Tailwind' || this.chart.theme === 'TailwindDark') {\n      outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\n    } else if (this.chart.theme === 'Material3' || this.chart.theme === 'Material3Dark' || this.chart.theme === 'Fluent2' || this.chart.theme === 'Fluent2Dark') {\n      outerElement.setAttribute('filter', 'drop-shadow(0px 1px 3px rgba(0, 0, 0, 0.15)) drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3))');\n      outerElement.setAttribute('fill', this.chart.theme === 'Material3' ? '#FFFFFF' : this.chart.theme === 'Fluent2' ? '#F5F5F5' : '#1C1B1F');\n      outerElement.setAttribute('rx', '4px');\n      outerElement.setAttribute('ry', '4px');\n      outerElement.setAttribute('opacity', '1');\n    } else {\n      outerElement.setAttribute('filter', 'url(#chart_shadow)');\n    }\n    this.toolkitElements.appendChild(outerElement);\n    var currentItem;\n    var panIcon = false;\n    for (var i = 1; i <= length; i++) {\n      currentItem = toolboxItems[i - 1];\n      element = render.createGroup({\n        transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : chart.theme.indexOf('Fluent2') > -1 ? spacing + 1 : spacing + 3) + ')'\n      });\n      // for desktop toolkit hight is 32 and top padding is 8 icon size 16\n      switch (currentItem) {\n        case 'Pan':\n          toolkit.createPanButton(element, this.toolkitElements);\n          panIcon = true;\n          break;\n        case 'Zoom':\n          toolkit.createZoomButton(element, this.toolkitElements);\n          break;\n        case 'ZoomIn':\n          toolkit.createZoomInButton(element, this.toolkitElements, chart);\n          break;\n        case 'ZoomOut':\n          toolkit.createZoomOutButton(element, this.toolkitElements, chart);\n          break;\n        case 'Reset':\n          toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\n          break;\n      }\n      xPosition += iconSize + spacing * 2;\n    }\n    this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\n    this.toolkitElements.setAttribute('cursor', 'auto');\n    if (chart.enableCanvas) {\n      var zoomDiv = document.createElement('div');\n      zoomDiv.id = chart.element.id + '_zoom';\n      zoomDiv.style.cssText = 'position:absolute; z-index:1';\n      var zoomheight = chart.availableSize.height / 2;\n      var svg = chart.svgRenderer.createSvg({\n        id: chart.element.id + '_zoomkit_svg',\n        width: chart.availableSize.width,\n        height: zoomheight\n      });\n      svg.style.position = 'absolute';\n      svg.appendChild(this.toolkitElements);\n      zoomDiv.appendChild(svg);\n      document.getElementById(this.elementId + '_Secondary_Element').appendChild(zoomDiv);\n    } else {\n      chart.svgObject.appendChild(this.toolkitElements);\n    }\n    if (!this.isDevice) {\n      EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\n      EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\n      if (this.isPanning && panIcon) {\n        toolkit.pan();\n      }\n    }\n    return true;\n  };\n  /**\r\n   * Applies the zoom toolkit on the chart.\r\n   *\r\n   * @param {Chart} chart - The chart instance.\r\n   * @param {AxisModel[]} axes - The axis models.\r\n   * @returns {void}\r\n   */\n  Zoom.prototype.applyZoomToolkit = function (chart, axes) {\n    var showToolkit = this.isAxisZoomed(axes);\n    if (showToolkit) {\n      this.showZoomingToolkit(chart);\n      this.isZoomed = true;\n    } else if (chart.zoomSettings.showToolbar) {\n      this.isZoomed = showToolkit;\n      this.showZoomingToolkit(chart);\n    } else {\n      this.toolkit.removeTooltip();\n      this.isPanning = false;\n      this.isZoomed = false;\n      chart.isZoomed = false;\n      chart.svgObject.setAttribute('cursor', 'auto');\n    }\n  };\n  /**\r\n   * Cancels the zoom action.\r\n   *\r\n   * @param {AxisModel[]} axes - The axis models.\r\n   * @param {IZoomCompleteEventArgs[]} zoomCompleteEventCollection - The collection of zoom complete events.\r\n   * @returns {void}\r\n   */\n  Zoom.prototype.zoomCancel = function (axes, zoomCompleteEventCollection) {\n    for (var _i = 0, _a = zoomCompleteEventCollection; _i < _a.length; _i++) {\n      var zoomCompleteEvent = _a[_i];\n      for (var _b = 0, _c = axes; _b < _c.length; _b++) {\n        var axis = _c[_b];\n        if (axis.name === zoomCompleteEvent.axis.name) {\n          axis.zoomFactor = zoomCompleteEvent.previousZoomFactor;\n          axis.zoomPosition = zoomCompleteEvent.previousZoomPosition;\n          axis.visibleRange = zoomCompleteEvent.previousVisibleRange;\n          break;\n        }\n      }\n    }\n  };\n  /**\r\n   * Checks if any of the axes is zoomed.\r\n   *\r\n   * @param {AxisModel[]} axes - The axis models.\r\n   * @returns {boolean} - True if any axis is zoomed; otherwise, false.\r\n   */\n  Zoom.prototype.isAxisZoomed = function (axes) {\n    var showToolkit = false;\n    for (var _i = 0, _a = axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      showToolkit = showToolkit || axis.zoomFactor !== 1 || axis.zoomPosition !== 0;\n    }\n    return showToolkit;\n  };\n  Zoom.prototype.zoomToolkitMove = function () {\n    var element = this.toolkitElements;\n    this.zoomkitOpacity = 1;\n    element.setAttribute('opacity', '' + this.zoomkitOpacity);\n    return false;\n  };\n  Zoom.prototype.zoomToolkitLeave = function () {\n    var element = this.toolkitElements;\n    this.zoomkitOpacity = 1;\n    element.setAttribute('opacity', '' + this.zoomkitOpacity);\n    return false;\n  };\n  /**\r\n   * Adds event listeners for the chart.\r\n   *\r\n   * @returns {void}\r\n   */\n  Zoom.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    EventHandler.add(this.chart.element, this.wheelEvent, this.chartMouseWheel, this);\n    this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\n    this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\n  };\n  /**\r\n   * Remove event listeners for the chart.\r\n   *\r\n   * @returns {void}\r\n   */\n  Zoom.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    EventHandler.remove(this.chart.element, this.wheelEvent, this.chartMouseWheel);\n    this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\n    this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\n    this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\n    this.chart.off(this.cancelEvent, this.mouseCancelHandler);\n  };\n  /**\r\n   * Handles the mouse wheel event on the chart.\r\n   *\r\n   * @param {WheelEvent} e - The wheel event.\r\n   * @returns {boolean} - Returns false.\r\n   */\n  Zoom.prototype.chartMouseWheel = function (e) {\n    var chart = this.chart;\n    var offset = chart.element.getBoundingClientRect();\n    var svgRect = getElement(chart.svgId).getBoundingClientRect();\n    var mouseX = e.clientX - offset.left - Math.max(svgRect.left - offset.left, 0);\n    var mouseY = e.clientY - offset.top - Math.max(svgRect.top - offset.top, 0);\n    if (this.zooming.enableMouseWheelZooming && withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n      e.preventDefault();\n      this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\n    }\n    return false;\n  };\n  /**\r\n   * Handles the mouse move event on the chart.\r\n   *\r\n   * @param {PointerEvent | TouchEvent} e - The mouse move event or touch event.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Zoom.prototype.mouseMoveHandler = function (e) {\n    //Zooming for chart\n    var chart = this.chart;\n    var touches = null;\n    if (e.type === 'touchmove') {\n      if (e.preventDefault && this.isIOS && (this.isPanning || chart.isDoubleTap || this.zooming.enablePinchZooming && this.touchStartList.length > 1)) {\n        e.preventDefault();\n      }\n      touches = e.touches;\n    }\n    if (chart.isChartDrag) {\n      if (chart.isTouch) {\n        this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\n        if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1 && this.touchStartList.length > 1) {\n          this.performPinchZooming(e, chart);\n        }\n      }\n      this.renderZooming(e, chart, chart.isTouch);\n    }\n  };\n  /**\r\n   * Handles the mouse down event on the chart.\r\n   *\r\n   * @param {PointerEvent} e - The mouse down event.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Zoom.prototype.mouseDownHandler = function (e) {\n    //Zooming for chart\n    var chart = this.chart;\n    var touches = null;\n    var target;\n    if (e.type === 'touchstart') {\n      touches = e.touches;\n      target = e.target;\n    } else {\n      target = e.target;\n    }\n    if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 && (chart.zoomSettings.enablePinchZooming || chart.zoomSettings.enableSelectionZooming) && withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n      chart.isChartDrag = true;\n    }\n    if (chart.isTouch) {\n      this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\n    }\n  };\n  /**\r\n   * Handles the mouse up event on the chart.\r\n   *\r\n   * @param {PointerEvent} e - The mouse up event.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Zoom.prototype.mouseUpHandler = function (e) {\n    var chart = this.chart;\n    var performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 || e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\n    if (chart.isChartDrag || performZoomRedraw) {\n      this.redrawOnZooming(chart, true, true);\n    }\n    if (chart.isTouch) {\n      if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect) && this.touchStartList.length === 1 && this.isZoomed) {\n        this.toolkit.reset(e);\n      }\n      this.touchStartList = [];\n      chart.isDoubleTap = false;\n    }\n  };\n  /**\r\n   * Handles the mouse cancel event on the chart.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Zoom.prototype.mouseCancelHandler = function () {\n    if (this.isZoomed) {\n      this.performZoomRedraw(this.chart);\n    }\n    this.pinchTarget = null;\n    this.touchStartList = [];\n    this.touchMoveList = [];\n  };\n  /**\r\n   * Adds touch pointer to the touch list.\r\n   *\r\n   * @param {ITouches[]} touchList - The touch list.\r\n   * @param {PointerEvent} e - The pointer event.\r\n   * @param {TouchList} touches - The touch list.\r\n   * @returns {ITouches[]} - The updated touch list.\r\n   */\n  Zoom.prototype.addTouchPointer = function (touchList, e, touches) {\n    if (touches) {\n      touchList = [];\n      for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({\n          pageX: touches[i].clientX,\n          pageY: touches[i].clientY,\n          pointerId: null\n        });\n      }\n    } else {\n      touchList = touchList ? touchList : [];\n      if (touchList.length === 0) {\n        touchList.push({\n          pageX: e.clientX,\n          pageY: e.clientY,\n          pointerId: e.pointerId\n        });\n      } else {\n        for (var i = 0, length_2 = touchList.length; i < length_2; i++) {\n          if (touchList[i].pointerId === e.pointerId) {\n            touchList[i] = {\n              pageX: e.clientX,\n              pageY: e.clientY,\n              pointerId: e.pointerId\n            };\n          } else {\n            touchList.push({\n              pageX: e.clientX,\n              pageY: e.clientY,\n              pointerId: e.pointerId\n            });\n          }\n        }\n      }\n    }\n    return touchList;\n  };\n  /**\r\n   * Get module name.\r\n   *\r\n   * @returns {string} - Returns the module name.\r\n   */\n  Zoom.prototype.getModuleName = function () {\n    // Returns te module name\n    return 'Zoom';\n  };\n  /**\r\n   * To destroy the zooming.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Zoom.prototype.destroy = function () {\n    // Destroy method performed here.\n    this.removeEventListener();\n  };\n  return Zoom;\n}();\nexport { Zoom };","map":{"version":3,"names":["EventHandler","Browser","createElement","getRectLocation","minMax","getElement","ChartLocation","RectOption","Rect","measureText","Toolkit","zoomComplete","onZooming","withInBounds","Zoom","chart","zoomCompleteEvtCollection","isPointer","browserName","info","name","wheelEvent","cancelEvent","addEventListener","isDevice","zooming","zoomSettings","toolkit","elementId","element","id","zoomingRect","zoomAxes","zoomkitOpacity","isIOS","isIos","isIos7","isZoomed","performedUI","enablePan","primaryXAxis","zoomFactor","zoomPosition","primaryYAxis","isAxisZoomed","axes","enableScrollbar","scrollElement","prototype","renderZooming","e","isTouch","calculateZoomAxesRange","enableSelectionZooming","isDoubleTap","touchStartList","length","isPanning","drawZoomingRectangle","isChartDrag","pinchTarget","target","doPan","axisCollections","areaBounds","chartAxisLayoutPanel","seriesClipRect","startLocation","previousMouseMoveX","previousMouseMoveY","endLocation","mouseX","mouseY","rect","width","height","disableTrackTooltip","svgObject","setAttribute","mode","y","x","svg","enableCanvas","document","getElementById","appendChild","svgRenderer","drawRectangle","themeStyle","selectionRectFill","color","selectionRectStroke","xDifference","yDifference","_this","startMove","crosshair","enable","currentScale","offset","delayRedraw","argsData","zoomedAxisCollection","_i","_a","axis","cancel","previousZoomFactor","previousZoomPosition","currentZoomFactor","currentZoomPosition","previousVisibleRange","visibleRange","currentVisibleRange","Math","max","orientation","push","axisName","axisRange","zoomingEventArgs","axisCollection","isBlazor","trigger","zoomCancel","performDefferedZoom","redrawOnZooming","translateX","translateY","enableDeferredZooming","mouseDownX","mouseDownY","setTransform","refreshAxis","performZoomRedraw","animateSeries","doZoom","createChartSvg","removeSvg","refreshBound","layout","measureAxis","initialClipRect","map","index","drawXAxisLabels","placeNextToAxisLine","updatedRect","drawYAxisLabels","bounds","zoomRect","zoomedAxisCollections","abs","parseFloat","toFixed","onZoomingEventArg","isRedraw","isMouseUp","zoomCompleteCollection","i","performMouseWheelZooming","direction","detail","origin","cumulative","onZoomingEventArgs","performPinchZooming","elementOffset","getBoundingClientRect","touchDown","touchMove","touchMoveList","touch0StartX","pageX","left","touch0StartY","pageY","top","touch0EndX","touch0EndY","touch1StartX","touch1StartY","touch1EndX","touch1EndY","scaleX","scaleY","clipX","clipY","pinchRect","translateXValue","translateYValue","isNaN","calculatePinchZoomFactor","selectionMin","selectionMax","rangeMin","rangeMax","value","axisTrans","currentZF","currentZP","delta","min","actualMin","actualDelta","transX","transY","isPinch","seriesElements","indicatorElements","translate","xAxisLoc","yAxisLoc","visibleSeries","requireInvertedAxis","yAxis","xAxis","visible","category","seriesElement","parentNode","errorBarElement","symbolElement","textElement","shapeElement","style","visibility","range","actualRange","showZoomingToolkit","toolboxItems","toolbarItems","spacing","render","iconSize","size","fontStyle","fontWeight","fontFamily","theme","indexOf","xPosition","shadowElement","defElement","createDefs","innerHTML","toolkitElements","createGroup","transform","zoomFillColor","outerElement","currentItem","panIcon","createPanButton","createZoomButton","createZoomInButton","createZoomOutButton","createResetButton","zoomDiv","cssText","zoomheight","availableSize","createSvg","position","add","zoomToolkitMove","zoomToolkitLeave","pan","applyZoomToolkit","showToolkit","showToolbar","removeTooltip","zoomCompleteEventCollection","zoomCompleteEvent","_b","_c","isDestroyed","chartMouseWheel","on","touchMoveEvent","mouseMoveHandler","touchStartEvent","mouseDownHandler","touchEndEvent","mouseUpHandler","mouseCancelHandler","removeEventListener","remove","off","svgRect","svgId","clientX","clientY","enableMouseWheelZooming","preventDefault","touches","type","enablePinchZooming","addTouchPointer","reset","touchList","length_1","pointerId","length_2","getModuleName","destroy"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/zooming.js"],"sourcesContent":["import { EventHandler, Browser, createElement } from '@syncfusion/ej2-base';\r\nimport { getRectLocation, minMax, getElement, ChartLocation, RectOption } from '../../common/utils/helper';\r\nimport { Rect, measureText } from '@syncfusion/ej2-svg-base';\r\nimport { Toolkit } from './zooming-toolkit';\r\nimport { zoomComplete, onZooming } from '../../common/model/constants';\r\nimport { withInBounds } from '../../common/utils/helper';\r\n/**\r\n * `Zooming` module handles the zooming for chart.\r\n */\r\nvar Zoom = /** @class */ (function () {\r\n    /**\r\n     * Constructor for Zooming module.\r\n     *\r\n     * @private\r\n     */\r\n    function Zoom(chart) {\r\n        this.zoomCompleteEvtCollection = [];\r\n        this.chart = chart;\r\n        this.isPointer = Browser.isPointer;\r\n        this.browserName = Browser.info.name;\r\n        this.wheelEvent = this.browserName === 'mozilla' ? (this.isPointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\r\n        this.cancelEvent = this.isPointer ? 'pointerleave' : 'mouseleave';\r\n        this.addEventListener();\r\n        this.isDevice = Browser.isDevice;\r\n        var zooming = chart.zoomSettings;\r\n        this.toolkit = new Toolkit(chart);\r\n        this.zooming = zooming;\r\n        this.elementId = chart.element.id;\r\n        this.zoomingRect = new Rect(0, 0, 0, 0);\r\n        this.zoomAxes = [];\r\n        this.zoomkitOpacity = 1;\r\n        this.isIOS = Browser.isIos || Browser.isIos7;\r\n        this.isZoomed = this.performedUI = this.zooming.enablePan ||\r\n            ((this.chart.primaryXAxis.zoomFactor < 1 && this.chart.primaryXAxis.zoomPosition > 0) ||\r\n                (this.chart.primaryYAxis.zoomFactor < 1 && this.chart.primaryYAxis.zoomPosition > 0) || this.isAxisZoomed(this.chart.axes));\r\n        if (zooming.enableScrollbar) {\r\n            chart.scrollElement = createElement('div', { id: chart.element.id + '_scrollElement' });\r\n        }\r\n    }\r\n    /**\r\n     * Renders the zooming functionality for the chart.\r\n     *\r\n     * @param {PointerEvent | TouchEvent} e - The pointer or touch event.\r\n     * @param {Chart} chart - The chart instance.\r\n     * @param {boolean} isTouch - Indicates whether the event is a touch event.\r\n     * @returns {void}\r\n     */\r\n    Zoom.prototype.renderZooming = function (e, chart, isTouch) {\r\n        this.calculateZoomAxesRange(chart);\r\n        if (this.zooming.enableSelectionZooming && (!isTouch\r\n            || (chart.isDoubleTap && this.touchStartList.length === 1)) && (!this.isPanning || chart.isDoubleTap)) {\r\n            this.isPanning = this.isDevice ? true : this.isPanning;\r\n            this.performedUI = true;\r\n            this.drawZoomingRectangle(chart);\r\n        }\r\n        else if (this.isPanning && chart.isChartDrag) {\r\n            if (!isTouch || (isTouch && this.touchStartList.length === 1)) {\r\n                this.pinchTarget = isTouch ? e.target : null;\r\n                this.doPan(chart, chart.axisCollections);\r\n            }\r\n        }\r\n    };\r\n    // Zooming rectangle drawn here\r\n    Zoom.prototype.drawZoomingRectangle = function (chart) {\r\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\r\n        var startLocation = new ChartLocation(chart.previousMouseMoveX, chart.previousMouseMoveY);\r\n        var endLocation = new ChartLocation(chart.mouseX, chart.mouseY);\r\n        var rect = this.zoomingRect = getRectLocation(startLocation, endLocation, areaBounds);\r\n        if (rect.width > 0 && rect.height > 0) {\r\n            this.isZoomed = true;\r\n            chart.disableTrackTooltip = true;\r\n            chart.svgObject.setAttribute('cursor', 'crosshair');\r\n            if (this.zooming.mode === 'X') {\r\n                rect.height = areaBounds.height;\r\n                rect.y = areaBounds.y;\r\n            }\r\n            else if (this.zooming.mode === 'Y') {\r\n                rect.width = areaBounds.width;\r\n                rect.x = areaBounds.x;\r\n            }\r\n            var svg = chart.enableCanvas ? document.getElementById(this.elementId + '_tooltip_svg') : chart.svgObject;\r\n            svg.appendChild(chart.svgRenderer.drawRectangle(new RectOption(this.elementId + '_ZoomArea', chart.themeStyle.selectionRectFill, { color: chart.themeStyle.selectionRectStroke, width: 1 }, 1, rect, 0, 0, '', '3')));\r\n        }\r\n    };\r\n    // Panning performed here\r\n    Zoom.prototype.doPan = function (chart, axes, xDifference, yDifference) {\r\n        var _this = this;\r\n        if (xDifference === void 0) { xDifference = 0; }\r\n        if (yDifference === void 0) { yDifference = 0; }\r\n        if (chart.startMove && chart.crosshair.enable) {\r\n            return null;\r\n        }\r\n        var currentScale;\r\n        var offset;\r\n        this.isZoomed = true;\r\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\r\n        chart.delayRedraw = true;\r\n        this.zoomCompleteEvtCollection = [];\r\n        chart.disableTrackTooltip = true;\r\n        var argsData;\r\n        var zoomedAxisCollection = [];\r\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\r\n            var axis = _a[_i];\r\n            argsData = {\r\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\r\n                previousZoomPosition: axis.zoomPosition, currentZoomFactor: axis.zoomFactor,\r\n                currentZoomPosition: axis.zoomPosition, previousVisibleRange: axis.visibleRange,\r\n                currentVisibleRange: null\r\n            };\r\n            currentScale = Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1);\r\n            if (axis.orientation === 'Horizontal') {\r\n                offset = (xDifference !== 0 ? xDifference : (chart.previousMouseMoveX - chart.mouseX)) / axis.rect.width / currentScale;\r\n                argsData.currentZoomPosition = minMax(axis.zoomPosition + offset, 0, (1 - axis.zoomFactor));\r\n            }\r\n            else {\r\n                offset = (yDifference !== 0 ? yDifference : (chart.previousMouseMoveY - chart.mouseY)) / axis.rect.height / currentScale;\r\n                argsData.currentZoomPosition = minMax(axis.zoomPosition - offset, 0, (1 - axis.zoomFactor));\r\n            }\r\n            if (!argsData.cancel) {\r\n                axis.zoomFactor = argsData.currentZoomFactor;\r\n                axis.zoomPosition = argsData.currentZoomPosition;\r\n                this.zoomCompleteEvtCollection.push(argsData);\r\n            }\r\n            zoomedAxisCollection.push({\r\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\r\n                axisRange: axis.visibleRange\r\n            });\r\n        }\r\n        var zoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\r\n        if (!zoomingEventArgs.cancel && this.chart.isBlazor) {\r\n            this.chart.trigger(onZooming, zoomingEventArgs, function () {\r\n                if (zoomingEventArgs.cancel) {\r\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\r\n                }\r\n                else {\r\n                    _this.performDefferedZoom(chart);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.chart.trigger(onZooming, zoomingEventArgs, function () {\r\n                if (zoomingEventArgs.cancel) {\r\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\r\n                }\r\n                else {\r\n                    _this.performDefferedZoom(chart);\r\n                    _this.redrawOnZooming(chart, false);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Zoom.prototype.performDefferedZoom = function (chart) {\r\n        var translateX;\r\n        var translateY;\r\n        if (this.zooming.enableDeferredZooming) {\r\n            translateX = chart.mouseX - chart.mouseDownX;\r\n            translateY = chart.mouseY - chart.mouseDownY;\r\n            switch (this.zooming.mode) {\r\n                case 'X':\r\n                    translateY = 0;\r\n                    break;\r\n                case 'Y':\r\n                    translateX = 0;\r\n                    break;\r\n            }\r\n            this.setTransform(translateX, translateY, null, null, chart, false);\r\n            this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\r\n            if (chart.enableCanvas) {\r\n                this.performZoomRedraw(chart);\r\n            }\r\n        }\r\n        else {\r\n            this.performZoomRedraw(chart);\r\n        }\r\n        chart.previousMouseMoveX = chart.mouseX;\r\n        chart.previousMouseMoveY = chart.mouseY;\r\n    };\r\n    /**\r\n     * Redraw the chart on zooming.\r\n     *\r\n     * @param {Chart} chart - The chart instance.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Zoom.prototype.performZoomRedraw = function (chart) {\r\n        var rect = this.zoomingRect;\r\n        chart.animateSeries = false;\r\n        if (this.isZoomed) {\r\n            if (rect.width > 0 && rect.height > 0) {\r\n                this.performedUI = true;\r\n                chart.svgObject.setAttribute('cursor', 'auto');\r\n                this.doZoom(chart, chart.axisCollections, chart.chartAxisLayoutPanel.seriesClipRect);\r\n                chart.isDoubleTap = false;\r\n            }\r\n            else if (chart.disableTrackTooltip) {\r\n                chart.disableTrackTooltip = false;\r\n                chart.delayRedraw = false;\r\n                if (chart.enableCanvas) {\r\n                    chart.createChartSvg();\r\n                }\r\n                else {\r\n                    chart.removeSvg();\r\n                }\r\n                // chart.enableCanvas ? chart.createChartSvg() : chart.removeSvg();\r\n                chart.refreshAxis();\r\n                chart.refreshBound();\r\n            }\r\n        }\r\n    };\r\n    Zoom.prototype.refreshAxis = function (layout, chart, axes) {\r\n        var mode = chart.zoomSettings.mode;\r\n        layout.measureAxis(new Rect(chart.initialClipRect.x, chart.initialClipRect.y, chart.initialClipRect.width, chart.initialClipRect.height));\r\n        axes.map(function (axis, index) {\r\n            if (axis.orientation === 'Horizontal' && mode !== 'Y') {\r\n                layout.drawXAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\r\n            }\r\n            if (axis.orientation === 'Vertical' && mode !== 'X') {\r\n                layout.drawYAxisLabels(axis, index, null, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\r\n            }\r\n        });\r\n    };\r\n    // Rectangular zoom calculated here performed here\r\n    Zoom.prototype.doZoom = function (chart, axes, bounds) {\r\n        var _this = this;\r\n        var zoomRect = this.zoomingRect;\r\n        var mode = this.zooming.mode;\r\n        var argsData;\r\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\r\n        var zoomedAxisCollections = [];\r\n        this.zoomCompleteEvtCollection = [];\r\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\r\n            var axis = _a[_i];\r\n            argsData = {\r\n                cancel: false, name: zoomComplete, axis: axis,\r\n                previousZoomFactor: axis.zoomFactor,\r\n                previousZoomPosition: axis.zoomPosition,\r\n                currentZoomFactor: axis.zoomFactor,\r\n                currentZoomPosition: axis.zoomPosition,\r\n                previousVisibleRange: axis.visibleRange, currentVisibleRange: null\r\n            };\r\n            if (axis.orientation === 'Horizontal') {\r\n                if (mode !== 'Y') {\r\n                    argsData.currentZoomPosition += Math.abs((zoomRect.x - bounds.x) / (bounds.width)) * axis.zoomFactor;\r\n                    argsData.currentZoomFactor *= (zoomRect.width / bounds.width);\r\n                }\r\n            }\r\n            else {\r\n                if (mode !== 'X') {\r\n                    argsData.currentZoomPosition += (1 - Math.abs((zoomRect.height + (zoomRect.y - bounds.y)) / (bounds.height)))\r\n                        * axis.zoomFactor;\r\n                    argsData.currentZoomFactor *= (zoomRect.height / bounds.height);\r\n                }\r\n            }\r\n            if (parseFloat(argsData.currentZoomFactor.toFixed(3)) <= 0.001) {\r\n                argsData.currentZoomFactor = argsData.previousZoomFactor;\r\n                argsData.currentZoomPosition = argsData.previousZoomPosition;\r\n            }\r\n            if (!argsData.cancel) {\r\n                axis.zoomFactor = argsData.currentZoomFactor;\r\n                axis.zoomPosition = argsData.currentZoomPosition;\r\n                this.zoomCompleteEvtCollection.push(argsData);\r\n            }\r\n            zoomedAxisCollections.push({\r\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\r\n                axisRange: axis.visibleRange\r\n            });\r\n        }\r\n        var onZoomingEventArg = { cancel: false, axisCollection: zoomedAxisCollections, name: onZooming };\r\n        if (!onZoomingEventArg.cancel && this.chart.isBlazor) {\r\n            this.chart.trigger(onZooming, onZoomingEventArg, function () {\r\n                if (onZoomingEventArg.cancel) {\r\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\r\n                }\r\n                else {\r\n                    _this.zoomingRect = new Rect(0, 0, 0, 0);\r\n                    _this.performZoomRedraw(chart);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.chart.trigger(onZooming, onZoomingEventArg, function () {\r\n                if (onZoomingEventArg.cancel) {\r\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\r\n                }\r\n                else {\r\n                    _this.zoomingRect = new Rect(0, 0, 0, 0);\r\n                    _this.redrawOnZooming(chart);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Redraws the chart on zooming.\r\n     *\r\n     * @param {Chart} chart - The chart instance.\r\n     * @param {boolean} [isRedraw=true] - Indicates whether to redraw the chart.\r\n     * @param {boolean} [isMouseUp=false] - Indicates whether the mouse button is released.\r\n     * @returns {void}\r\n     */\r\n    Zoom.prototype.redrawOnZooming = function (chart, isRedraw, isMouseUp) {\r\n        if (isRedraw === void 0) { isRedraw = true; }\r\n        if (isMouseUp === void 0) { isMouseUp = false; }\r\n        var zoomCompleteCollection = isMouseUp ? this.toolkit.zoomCompleteEvtCollection :\r\n            this.zoomCompleteEvtCollection;\r\n        if (isRedraw) {\r\n            this.performZoomRedraw(chart);\r\n        }\r\n        var argsData;\r\n        for (var i = 0; i < zoomCompleteCollection.length; i++) {\r\n            if (!zoomCompleteCollection[i].cancel) {\r\n                argsData = {\r\n                    cancel: false, name: zoomComplete,\r\n                    axis: chart.axisCollections[i],\r\n                    previousZoomFactor: zoomCompleteCollection[i].previousZoomFactor,\r\n                    previousZoomPosition: zoomCompleteCollection[i].previousZoomPosition,\r\n                    currentZoomFactor: chart.axisCollections[i].zoomFactor,\r\n                    currentZoomPosition: chart.axisCollections[i].zoomPosition,\r\n                    currentVisibleRange: chart.axisCollections[i].visibleRange,\r\n                    previousVisibleRange: zoomCompleteCollection[i].previousVisibleRange\r\n                };\r\n                chart.trigger(zoomComplete, argsData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Performs mouse wheel zooming on the chart.\r\n     *\r\n     * @param {WheelEvent} e - The wheel event.\r\n     * @param {number} mouseX - The X-coordinate of the mouse pointer.\r\n     * @param {number} mouseY - The Y-coordinate of the mouse pointer.\r\n     * @param {Chart} chart - The chart instance.\r\n     * @param {AxisModel[]} axes - The axes in the chart.\r\n     * @returns {void}\r\n     */\r\n    Zoom.prototype.performMouseWheelZooming = function (e, mouseX, mouseY, chart, axes) {\r\n        var _this = this;\r\n        var direction = (this.browserName === 'mozilla' && !this.isPointer) ?\r\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e['wheelDelta'] > 0 ? 1 : -1);\r\n        var mode = this.zooming.mode;\r\n        var origin = 0.5;\r\n        var cumulative;\r\n        var zoomFactor;\r\n        var zoomPosition;\r\n        this.isZoomed = true;\r\n        this.calculateZoomAxesRange(chart);\r\n        chart.disableTrackTooltip = true;\r\n        this.performedUI = true;\r\n        this.isPanning = chart.zoomSettings.enablePan || this.isPanning;\r\n        this.zoomCompleteEvtCollection = [];\r\n        var argsData;\r\n        var zoomedAxisCollection = [];\r\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\r\n            var axis = _a[_i];\r\n            argsData = {\r\n                cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\r\n                previousZoomPosition: axis.zoomPosition,\r\n                currentZoomFactor: axis.zoomFactor,\r\n                currentZoomPosition: axis.zoomPosition, currentVisibleRange: null,\r\n                previousVisibleRange: axis.visibleRange\r\n            };\r\n            if ((axis.orientation === 'Vertical' && mode !== 'X') ||\r\n                (axis.orientation === 'Horizontal' && mode !== 'Y')) {\r\n                cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\r\n                cumulative = (cumulative > 50000000000) ? 50000000000 : cumulative;\r\n                if (cumulative >= 1) {\r\n                    origin = axis.orientation === 'Horizontal' ? mouseX / axis.rect.width : 1 - (mouseY / axis.rect.height);\r\n                    origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\r\n                    zoomFactor = (cumulative === 1) ? 1 : minMax((direction > 0 ? 0.9 : 1.1) / cumulative, 0, 1);\r\n                    zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - zoomFactor) * origin);\r\n                    if (axis.zoomPosition !== zoomPosition || axis.zoomFactor !== zoomFactor) {\r\n                        zoomFactor = (zoomPosition + zoomFactor) > 1 ? (1 - zoomPosition) : zoomFactor;\r\n                    }\r\n                    argsData.currentZoomFactor = zoomFactor;\r\n                    argsData.currentZoomPosition = zoomPosition;\r\n                }\r\n                if (argsData.currentZoomFactor === argsData.previousZoomFactor &&\r\n                    argsData.currentZoomPosition === argsData.previousZoomPosition) {\r\n                    chart.disableTrackTooltip = false;\r\n                }\r\n                if (!argsData.cancel) {\r\n                    axis.zoomFactor = argsData.currentZoomFactor;\r\n                    axis.zoomPosition = argsData.currentZoomPosition;\r\n                    this.zoomCompleteEvtCollection.push(argsData);\r\n                }\r\n            }\r\n            zoomedAxisCollection.push({\r\n                zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\r\n                axisRange: axis.visibleRange\r\n            });\r\n        }\r\n        var onZoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\r\n        if (!onZoomingEventArgs.cancel && this.chart.isBlazor) {\r\n            this.chart.trigger(onZooming, onZoomingEventArgs, function () {\r\n                if (onZoomingEventArgs.cancel) {\r\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\r\n                }\r\n                else {\r\n                    _this.performZoomRedraw(chart);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.chart.trigger(onZooming, onZoomingEventArgs, function () {\r\n                if (onZoomingEventArgs.cancel) {\r\n                    _this.zoomCancel(axes, _this.zoomCompleteEvtCollection);\r\n                }\r\n                else {\r\n                    _this.redrawOnZooming(chart);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Performs pinch zooming on the chart.\r\n     *\r\n     * @param {TouchEvent} e - The touch event.\r\n     * @param {Chart} chart - The chart instance.\r\n     * @returns {boolean} - Indicates whether pinch zooming is performed.\r\n     */\r\n    Zoom.prototype.performPinchZooming = function (e, chart) {\r\n        if ((this.zoomingRect.width > 0 && this.zoomingRect.height > 0) || (chart.startMove && chart.crosshair.enable)) {\r\n            return false;\r\n        }\r\n        this.calculateZoomAxesRange(chart);\r\n        this.isZoomed = true;\r\n        this.isPanning = true;\r\n        this.performedUI = true;\r\n        this.offset = !chart.delayRedraw ? chart.chartAxisLayoutPanel.seriesClipRect : this.offset;\r\n        chart.delayRedraw = true;\r\n        chart.disableTrackTooltip = true;\r\n        var elementOffset = chart.element.getBoundingClientRect();\r\n        var touchDown = this.touchStartList;\r\n        var touchMove = this.touchMoveList;\r\n        var touch0StartX = touchDown[0].pageX - elementOffset.left;\r\n        var touch0StartY = touchDown[0].pageY - elementOffset.top;\r\n        var touch0EndX = touchMove[0].pageX - elementOffset.left;\r\n        var touch0EndY = touchMove[0].pageY - elementOffset.top;\r\n        var touch1StartX = touchDown[1].pageX - elementOffset.left;\r\n        var touch1StartY = touchDown[1].pageY - elementOffset.top;\r\n        var touch1EndX = touchMove[1].pageX - elementOffset.left;\r\n        var touch1EndY = touchMove[1].pageY - elementOffset.top;\r\n        var scaleX = Math.abs(touch0EndX - touch1EndX) / Math.abs(touch0StartX - touch1StartX);\r\n        var scaleY = Math.abs(touch0EndY - touch1EndY) / Math.abs(touch0StartY - touch1StartY);\r\n        var clipX = ((this.offset.x - touch0EndX) / scaleX) + touch0StartX;\r\n        var clipY = ((this.offset.y - touch0EndY) / scaleY) + touch0StartY;\r\n        var pinchRect = new Rect(clipX, clipY, this.offset.width / scaleX, this.offset.height / scaleY);\r\n        var translateXValue = (touch0EndX - (scaleX * touch0StartX));\r\n        var translateYValue = (touch0EndY - (scaleY * touch0StartY));\r\n        if (!isNaN(scaleX - scaleX) && !isNaN(scaleY - scaleY)) {\r\n            switch (this.zooming.mode) {\r\n                case 'XY':\r\n                    this.setTransform(translateXValue, translateYValue, scaleX, scaleY, chart, true);\r\n                    break;\r\n                case 'X':\r\n                    this.setTransform(translateXValue, 0, scaleX, 1, chart, true);\r\n                    break;\r\n                case 'Y':\r\n                    this.setTransform(0, translateYValue, 1, scaleY, chart, true);\r\n                    break;\r\n            }\r\n        }\r\n        if (!this.calculatePinchZoomFactor(chart, pinchRect)) {\r\n            this.refreshAxis(chart.chartAxisLayoutPanel, chart, chart.axisCollections);\r\n            this.redrawOnZooming(chart, false);\r\n        }\r\n        return true;\r\n    };\r\n    Zoom.prototype.calculatePinchZoomFactor = function (chart, pinchRect) {\r\n        var mode = this.zooming.mode;\r\n        var selectionMin;\r\n        var selectionMax;\r\n        var rangeMin;\r\n        var rangeMax;\r\n        var value;\r\n        var axisTrans;\r\n        var argsData;\r\n        var currentZF;\r\n        var currentZP;\r\n        var zoomedAxisCollection = [];\r\n        this.zoomCompleteEvtCollection = [];\r\n        for (var index = 0; index < chart.axisCollections.length; index++) {\r\n            var axis = chart.axisCollections[index];\r\n            if ((axis.orientation === 'Horizontal' && mode !== 'Y') ||\r\n                (axis.orientation === 'Vertical' && mode !== 'X')) {\r\n                currentZF = axis.zoomFactor;\r\n                currentZP = axis.zoomPosition;\r\n                argsData = {\r\n                    cancel: false, name: zoomComplete, axis: axis, previousZoomFactor: axis.zoomFactor,\r\n                    previousZoomPosition: axis.zoomPosition, currentZoomFactor: currentZF,\r\n                    currentZoomPosition: currentZP, previousVisibleRange: axis.visibleRange,\r\n                    currentVisibleRange: null\r\n                };\r\n                if (axis.orientation === 'Horizontal') {\r\n                    value = pinchRect.x - this.offset.x;\r\n                    axisTrans = axis.rect.width / this.zoomAxes[index].delta;\r\n                    rangeMin = value / axisTrans + this.zoomAxes[index].min;\r\n                    value = pinchRect.x + pinchRect.width - this.offset.x;\r\n                    rangeMax = value / axisTrans + this.zoomAxes[index].min;\r\n                }\r\n                else {\r\n                    value = pinchRect.y - this.offset.y;\r\n                    axisTrans = axis.rect.height / this.zoomAxes[index].delta;\r\n                    rangeMin = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\r\n                    value = pinchRect.y + pinchRect.height - this.offset.y;\r\n                    rangeMax = (value * -1 + axis.rect.height) / axisTrans + this.zoomAxes[index].min;\r\n                }\r\n                selectionMin = Math.min(rangeMin, rangeMax);\r\n                selectionMax = Math.max(rangeMin, rangeMax);\r\n                currentZP = (selectionMin - this.zoomAxes[index].actualMin) / this.zoomAxes[index].actualDelta;\r\n                currentZF = (selectionMax - selectionMin) / this.zoomAxes[index].actualDelta;\r\n                argsData.currentZoomPosition = currentZP < 0 ? 0 : currentZP;\r\n                argsData.currentZoomFactor = currentZF > 1 ? 1 : (currentZF < 0.03) ? 0.03 : currentZF;\r\n                if (!argsData.cancel) {\r\n                    axis.zoomFactor = argsData.currentZoomFactor;\r\n                    axis.zoomPosition = argsData.currentZoomPosition;\r\n                    this.zoomCompleteEvtCollection.push(argsData);\r\n                }\r\n                zoomedAxisCollection.push({\r\n                    zoomFactor: axis.zoomFactor, zoomPosition: axis.zoomFactor, axisName: axis.name,\r\n                    axisRange: axis.visibleRange\r\n                });\r\n            }\r\n        }\r\n        var onZoomingEventArgs = { cancel: false, axisCollection: zoomedAxisCollection, name: onZooming };\r\n        if (!onZoomingEventArgs.cancel) {\r\n            this.chart.trigger(onZooming, onZoomingEventArgs);\r\n            if (onZoomingEventArgs.cancel) {\r\n                this.zoomCancel(chart.axisCollections, this.zoomCompleteEvtCollection);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    // Series transformation style applied here.\r\n    Zoom.prototype.setTransform = function (transX, transY, scaleX, scaleY, chart, isPinch) {\r\n        if (!chart.enableCanvas) {\r\n            chart.seriesElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\r\n        }\r\n        if (chart.indicatorElements) {\r\n            chart.indicatorElements.setAttribute('clip-path', 'url(#' + this.elementId + '_ChartAreaClipRect_)');\r\n        }\r\n        var translate;\r\n        var xAxisLoc;\r\n        var yAxisLoc;\r\n        var element;\r\n        if (transX !== null && transY !== null) {\r\n            for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\r\n                var value = _a[_i];\r\n                xAxisLoc = chart.requireInvertedAxis ? value.yAxis.rect.x : value.xAxis.rect.x;\r\n                yAxisLoc = chart.requireInvertedAxis ? value.xAxis.rect.y : value.yAxis.rect.y;\r\n                translate = 'translate(' + (transX + (isPinch ? (scaleX * xAxisLoc) : xAxisLoc)) +\r\n                    ',' + (transY + (isPinch ? (scaleY * yAxisLoc) : yAxisLoc)) + ')';\r\n                translate = (scaleX || scaleY) ? translate + ' scale(' + scaleX + ' ' + scaleY + ')' : translate;\r\n                if (value.visible) {\r\n                    if (value.category === 'Indicator') {\r\n                        value.seriesElement.parentNode.setAttribute('transform', translate);\r\n                    }\r\n                    else {\r\n                        if (!chart.enableCanvas) {\r\n                            value.seriesElement.setAttribute('transform', translate);\r\n                        }\r\n                    }\r\n                    element = getElement(chart.element.id + '_Series_' + value.index + '_DataLabelCollections');\r\n                    if (value.errorBarElement) {\r\n                        value.errorBarElement.setAttribute('transform', translate);\r\n                    }\r\n                    if (value.symbolElement) {\r\n                        value.symbolElement.setAttribute('transform', translate);\r\n                    }\r\n                    if (value.textElement) {\r\n                        value.textElement.setAttribute('visibility', 'hidden');\r\n                        value.shapeElement.setAttribute('visibility', 'hidden');\r\n                    }\r\n                    if (element) {\r\n                        element.style.visibility = 'hidden';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Zoom.prototype.calculateZoomAxesRange = function (chart) {\r\n        var range;\r\n        var axisRange;\r\n        for (var index = 0; index < chart.axisCollections.length; index++) {\r\n            var axis = chart.axisCollections[index];\r\n            axisRange = axis.visibleRange;\r\n            if (this.zoomAxes[index]) {\r\n                if (!chart.delayRedraw) {\r\n                    this.zoomAxes[index].min = axisRange.min;\r\n                    this.zoomAxes[index].delta = axisRange.delta;\r\n                }\r\n            }\r\n            else {\r\n                range = {\r\n                    actualMin: axis.actualRange.min,\r\n                    actualDelta: axis.actualRange.delta,\r\n                    min: axisRange.min,\r\n                    delta: axisRange.delta\r\n                };\r\n                this.zoomAxes[index] = range;\r\n            }\r\n        }\r\n    };\r\n    // Zooming Toolkit created here\r\n    Zoom.prototype.showZoomingToolkit = function (chart) {\r\n        var toolboxItems = this.zooming.toolbarItems;\r\n        var areaBounds = chart.chartAxisLayoutPanel.seriesClipRect;\r\n        var spacing = 10;\r\n        var render = chart.svgRenderer;\r\n        var length = this.isDevice ? 1 : toolboxItems.length;\r\n        var iconSize = this.isDevice ? measureText('Reset Zoom', { size: '12px' }, { size: '12px', fontStyle: 'Normal', fontWeight: '400', fontFamily: 'Segoe UI' }).width : 16;\r\n        var height = this.isDevice ? measureText('Reset Zoom', { size: '12px' }, { size: '12px', fontStyle: 'Normal', fontWeight: '400', fontFamily: 'Segoe UI' }).height : chart.theme.indexOf('Fluent2') > -1 ? 18 : 22;\r\n        var width = (length * iconSize) + ((length + 1) * spacing) + ((length - 1) * spacing);\r\n        var transX = areaBounds.x + areaBounds.width - width - spacing;\r\n        var transY = (areaBounds.y + spacing);\r\n        var xPosition = spacing;\r\n        var toolkit = this.toolkit;\r\n        var element;\r\n        var shadowElement = '<filter id=\"chart_shadow\" height=\"130%\"><feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\"/>';\r\n        shadowElement += '<feOffset dx=\"-3\" dy=\"4\" result=\"offsetblur\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"1\"/>';\r\n        shadowElement += '</feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter>';\r\n        if (length === 0 || getElement(this.elementId + '_Zooming_KitCollection')) {\r\n            return false;\r\n        }\r\n        var defElement = render.createDefs();\r\n        toolboxItems = this.isDevice ? ['Reset'] : toolboxItems;\r\n        defElement.innerHTML = shadowElement;\r\n        this.toolkitElements = render.createGroup({\r\n            id: this.elementId + '_Zooming_KitCollection',\r\n            transform: 'translate(' + transX + ',' + transY + ')'\r\n        });\r\n        this.toolkitElements.appendChild(defElement);\r\n        var zoomFillColor = this.chart.theme === 'Tailwind' ? '#F3F4F6' : this.chart.theme === 'Fluent' ? '#F3F2F1' :\r\n            (this.chart.theme === 'Material3' ? '#FFFFFF' : this.chart.theme === 'Material3Dark' ? '#1C1B1F' : this.chart.theme === 'Fluent2' ? '#F5F5F5' : this.chart.theme === 'Fluent2Dark' ? '#141414' : '#fafafa');\r\n        this.toolkitElements.appendChild(render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, { color: 'transparent', width: 1 }, 1, new Rect(0, 0, width, (height + (spacing * 2))), 4, 4)));\r\n        var outerElement = render.drawRectangle(new RectOption(this.elementId + '_Zooming_Rect', zoomFillColor, { color: 'transparent', width: 1 }, 0.1, new Rect(0, 0, width, (height + (spacing * 2))), 4, 4));\r\n        if (this.chart.theme === 'Tailwind' || this.chart.theme === 'TailwindDark') {\r\n            outerElement.setAttribute('box-shadow', '0px 1px 2px rgba(0, 0, 0, 0.06), 0px 1px 3px rgba(0, 0, 0, 0.1)');\r\n        }\r\n        else if (this.chart.theme === 'Material3' || this.chart.theme === 'Material3Dark' || this.chart.theme === 'Fluent2' || this.chart.theme === 'Fluent2Dark') {\r\n            outerElement.setAttribute('filter', 'drop-shadow(0px 1px 3px rgba(0, 0, 0, 0.15)) drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3))');\r\n            outerElement.setAttribute('fill', this.chart.theme === 'Material3' ? '#FFFFFF' : this.chart.theme === 'Fluent2' ? '#F5F5F5' : '#1C1B1F');\r\n            outerElement.setAttribute('rx', '4px');\r\n            outerElement.setAttribute('ry', '4px');\r\n            outerElement.setAttribute('opacity', '1');\r\n        }\r\n        else {\r\n            outerElement.setAttribute('filter', 'url(#chart_shadow)');\r\n        }\r\n        this.toolkitElements.appendChild(outerElement);\r\n        var currentItem;\r\n        var panIcon = false;\r\n        for (var i = 1; i <= length; i++) {\r\n            currentItem = toolboxItems[i - 1];\r\n            element = render.createGroup({\r\n                transform: 'translate(' + xPosition + ',' + (this.isDevice ? spacing : chart.theme.indexOf('Fluent2') > -1 ? (spacing + 1) : (spacing + 3)) + ')'\r\n            });\r\n            // for desktop toolkit hight is 32 and top padding is 8 icon size 16\r\n            switch (currentItem) {\r\n                case 'Pan':\r\n                    toolkit.createPanButton(element, this.toolkitElements);\r\n                    panIcon = true;\r\n                    break;\r\n                case 'Zoom':\r\n                    toolkit.createZoomButton(element, this.toolkitElements);\r\n                    break;\r\n                case 'ZoomIn':\r\n                    toolkit.createZoomInButton(element, this.toolkitElements, chart);\r\n                    break;\r\n                case 'ZoomOut':\r\n                    toolkit.createZoomOutButton(element, this.toolkitElements, chart);\r\n                    break;\r\n                case 'Reset':\r\n                    toolkit.createResetButton(element, this.toolkitElements, chart, this.isDevice);\r\n                    break;\r\n            }\r\n            xPosition += iconSize + (spacing * 2);\r\n        }\r\n        this.toolkitElements.setAttribute('opacity', this.isDevice ? '1' : '' + this.zoomkitOpacity);\r\n        this.toolkitElements.setAttribute('cursor', 'auto');\r\n        if (chart.enableCanvas) {\r\n            var zoomDiv = document.createElement('div');\r\n            zoomDiv.id = chart.element.id + '_zoom';\r\n            zoomDiv.style.cssText = 'position:absolute; z-index:1';\r\n            var zoomheight = chart.availableSize.height / 2;\r\n            var svg = chart.svgRenderer.createSvg({\r\n                id: chart.element.id + '_zoomkit_svg',\r\n                width: chart.availableSize.width,\r\n                height: zoomheight\r\n            });\r\n            svg.style.position = 'absolute';\r\n            svg.appendChild(this.toolkitElements);\r\n            zoomDiv.appendChild(svg);\r\n            document.getElementById(this.elementId + '_Secondary_Element').appendChild(zoomDiv);\r\n        }\r\n        else {\r\n            chart.svgObject.appendChild(this.toolkitElements);\r\n        }\r\n        if (!this.isDevice) {\r\n            EventHandler.add(this.toolkitElements, 'mousemove touchstart', this.zoomToolkitMove, this);\r\n            EventHandler.add(this.toolkitElements, 'mouseleave touchend', this.zoomToolkitLeave, this);\r\n            if (this.isPanning && panIcon) {\r\n                toolkit.pan();\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Applies the zoom toolkit on the chart.\r\n     *\r\n     * @param {Chart} chart - The chart instance.\r\n     * @param {AxisModel[]} axes - The axis models.\r\n     * @returns {void}\r\n     */\r\n    Zoom.prototype.applyZoomToolkit = function (chart, axes) {\r\n        var showToolkit = this.isAxisZoomed(axes);\r\n        if (showToolkit) {\r\n            this.showZoomingToolkit(chart);\r\n            this.isZoomed = true;\r\n        }\r\n        else if (chart.zoomSettings.showToolbar) {\r\n            this.isZoomed = showToolkit;\r\n            this.showZoomingToolkit(chart);\r\n        }\r\n        else {\r\n            this.toolkit.removeTooltip();\r\n            this.isPanning = false;\r\n            this.isZoomed = false;\r\n            chart.isZoomed = false;\r\n            chart.svgObject.setAttribute('cursor', 'auto');\r\n        }\r\n    };\r\n    /**\r\n     * Cancels the zoom action.\r\n     *\r\n     * @param {AxisModel[]} axes - The axis models.\r\n     * @param {IZoomCompleteEventArgs[]} zoomCompleteEventCollection - The collection of zoom complete events.\r\n     * @returns {void}\r\n     */\r\n    Zoom.prototype.zoomCancel = function (axes, zoomCompleteEventCollection) {\r\n        for (var _i = 0, _a = zoomCompleteEventCollection; _i < _a.length; _i++) {\r\n            var zoomCompleteEvent = _a[_i];\r\n            for (var _b = 0, _c = axes; _b < _c.length; _b++) {\r\n                var axis = _c[_b];\r\n                if (axis.name === zoomCompleteEvent.axis.name) {\r\n                    axis.zoomFactor = zoomCompleteEvent.previousZoomFactor;\r\n                    axis.zoomPosition = zoomCompleteEvent.previousZoomPosition;\r\n                    axis.visibleRange = zoomCompleteEvent.previousVisibleRange;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks if any of the axes is zoomed.\r\n     *\r\n     * @param {AxisModel[]} axes - The axis models.\r\n     * @returns {boolean} - True if any axis is zoomed; otherwise, false.\r\n     */\r\n    Zoom.prototype.isAxisZoomed = function (axes) {\r\n        var showToolkit = false;\r\n        for (var _i = 0, _a = axes; _i < _a.length; _i++) {\r\n            var axis = _a[_i];\r\n            showToolkit = (showToolkit || (axis.zoomFactor !== 1 || axis.zoomPosition !== 0));\r\n        }\r\n        return showToolkit;\r\n    };\r\n    Zoom.prototype.zoomToolkitMove = function () {\r\n        var element = this.toolkitElements;\r\n        this.zoomkitOpacity = 1;\r\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\r\n        return false;\r\n    };\r\n    Zoom.prototype.zoomToolkitLeave = function () {\r\n        var element = this.toolkitElements;\r\n        this.zoomkitOpacity = 1;\r\n        element.setAttribute('opacity', '' + this.zoomkitOpacity);\r\n        return false;\r\n    };\r\n    /**\r\n     * Adds event listeners for the chart.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    Zoom.prototype.addEventListener = function () {\r\n        if (this.chart.isDestroyed) {\r\n            return;\r\n        }\r\n        EventHandler.add(this.chart.element, this.wheelEvent, this.chartMouseWheel, this);\r\n        this.chart.on(Browser.touchMoveEvent, this.mouseMoveHandler, this);\r\n        this.chart.on(Browser.touchStartEvent, this.mouseDownHandler, this);\r\n        this.chart.on(Browser.touchEndEvent, this.mouseUpHandler, this);\r\n        this.chart.on(this.cancelEvent, this.mouseCancelHandler, this);\r\n    };\r\n    /**\r\n     * Remove event listeners for the chart.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    Zoom.prototype.removeEventListener = function () {\r\n        if (this.chart.isDestroyed) {\r\n            return;\r\n        }\r\n        EventHandler.remove(this.chart.element, this.wheelEvent, this.chartMouseWheel);\r\n        this.chart.off(Browser.touchMoveEvent, this.mouseMoveHandler);\r\n        this.chart.off(Browser.touchStartEvent, this.mouseDownHandler);\r\n        this.chart.off(Browser.touchEndEvent, this.mouseUpHandler);\r\n        this.chart.off(this.cancelEvent, this.mouseCancelHandler);\r\n    };\r\n    /**\r\n     * Handles the mouse wheel event on the chart.\r\n     *\r\n     * @param {WheelEvent} e - The wheel event.\r\n     * @returns {boolean} - Returns false.\r\n     */\r\n    Zoom.prototype.chartMouseWheel = function (e) {\r\n        var chart = this.chart;\r\n        var offset = chart.element.getBoundingClientRect();\r\n        var svgRect = getElement(chart.svgId).getBoundingClientRect();\r\n        var mouseX = (e.clientX - offset.left) - Math.max(svgRect.left - offset.left, 0);\r\n        var mouseY = (e.clientY - offset.top) - Math.max(svgRect.top - offset.top, 0);\r\n        if (this.zooming.enableMouseWheelZooming &&\r\n            withInBounds(mouseX, mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\r\n            e.preventDefault();\r\n            this.performMouseWheelZooming(e, mouseX, mouseY, chart, chart.axisCollections);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Handles the mouse move event on the chart.\r\n     *\r\n     * @param {PointerEvent | TouchEvent} e - The mouse move event or touch event.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Zoom.prototype.mouseMoveHandler = function (e) {\r\n        //Zooming for chart\r\n        var chart = this.chart;\r\n        var touches = null;\r\n        if (e.type === 'touchmove') {\r\n            if (e.preventDefault && this.isIOS &&\r\n                (this.isPanning || (chart.isDoubleTap)\r\n                    || (this.zooming.enablePinchZooming && this.touchStartList.length > 1))) {\r\n                e.preventDefault();\r\n            }\r\n            touches = e.touches;\r\n        }\r\n        if (chart.isChartDrag) {\r\n            if (chart.isTouch) {\r\n                this.touchMoveList = this.addTouchPointer(this.touchMoveList, e, touches);\r\n                if (this.zooming.enablePinchZooming && this.touchMoveList.length > 1\r\n                    && this.touchStartList.length > 1) {\r\n                    this.performPinchZooming(e, chart);\r\n                }\r\n            }\r\n            this.renderZooming(e, chart, chart.isTouch);\r\n        }\r\n    };\r\n    /**\r\n     * Handles the mouse down event on the chart.\r\n     *\r\n     * @param {PointerEvent} e - The mouse down event.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Zoom.prototype.mouseDownHandler = function (e) {\r\n        //Zooming for chart\r\n        var chart = this.chart;\r\n        var touches = null;\r\n        var target;\r\n        if (e.type === 'touchstart') {\r\n            touches = e.touches;\r\n            target = e.target;\r\n        }\r\n        else {\r\n            target = e.target;\r\n        }\r\n        if (target.id.indexOf(chart.element.id + '_Zooming_') === -1 &&\r\n            (chart.zoomSettings.enablePinchZooming || chart.zoomSettings.enableSelectionZooming) &&\r\n            withInBounds(chart.previousMouseMoveX, chart.previousMouseMoveY, chart.chartAxisLayoutPanel.seriesClipRect)) {\r\n            chart.isChartDrag = true;\r\n        }\r\n        if (chart.isTouch) {\r\n            this.touchStartList = this.addTouchPointer(this.touchStartList, e, touches);\r\n        }\r\n    };\r\n    /**\r\n     * Handles the mouse up event on the chart.\r\n     *\r\n     * @param {PointerEvent} e - The mouse up event.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Zoom.prototype.mouseUpHandler = function (e) {\r\n        var chart = this.chart;\r\n        var performZoomRedraw = e.target.id.indexOf(chart.element.id + '_ZoomOut_') === -1 ||\r\n            e.target.id.indexOf(chart.element.id + '_ZoomIn_') === -1;\r\n        if (chart.isChartDrag || performZoomRedraw) {\r\n            this.redrawOnZooming(chart, true, true);\r\n        }\r\n        if (chart.isTouch) {\r\n            if (chart.isDoubleTap && withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)\r\n                && this.touchStartList.length === 1 && this.isZoomed) {\r\n                this.toolkit.reset(e);\r\n            }\r\n            this.touchStartList = [];\r\n            chart.isDoubleTap = false;\r\n        }\r\n    };\r\n    /**\r\n     * Handles the mouse cancel event on the chart.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Zoom.prototype.mouseCancelHandler = function () {\r\n        if (this.isZoomed) {\r\n            this.performZoomRedraw(this.chart);\r\n        }\r\n        this.pinchTarget = null;\r\n        this.touchStartList = [];\r\n        this.touchMoveList = [];\r\n    };\r\n    /**\r\n     * Adds touch pointer to the touch list.\r\n     *\r\n     * @param {ITouches[]} touchList - The touch list.\r\n     * @param {PointerEvent} e - The pointer event.\r\n     * @param {TouchList} touches - The touch list.\r\n     * @returns {ITouches[]} - The updated touch list.\r\n     */\r\n    Zoom.prototype.addTouchPointer = function (touchList, e, touches) {\r\n        if (touches) {\r\n            touchList = [];\r\n            for (var i = 0, length_1 = touches.length; i < length_1; i++) {\r\n                touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\r\n            }\r\n        }\r\n        else {\r\n            touchList = touchList ? touchList : [];\r\n            if (touchList.length === 0) {\r\n                touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\r\n            }\r\n            else {\r\n                for (var i = 0, length_2 = touchList.length; i < length_2; i++) {\r\n                    if (touchList[i].pointerId === e.pointerId) {\r\n                        touchList[i] = { pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId };\r\n                    }\r\n                    else {\r\n                        touchList.push({ pageX: e.clientX, pageY: e.clientY, pointerId: e.pointerId });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return touchList;\r\n    };\r\n    /**\r\n     * Get module name.\r\n     *\r\n     * @returns {string} - Returns the module name.\r\n     */\r\n    Zoom.prototype.getModuleName = function () {\r\n        // Returns te module name\r\n        return 'Zoom';\r\n    };\r\n    /**\r\n     * To destroy the zooming.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Zoom.prototype.destroy = function () {\r\n        // Destroy method performed here.\r\n        this.removeEventListener();\r\n    };\r\n    return Zoom;\r\n}());\r\nexport { Zoom };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}