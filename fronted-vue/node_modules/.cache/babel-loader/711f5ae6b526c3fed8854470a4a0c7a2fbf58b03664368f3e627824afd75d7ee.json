{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\r\n * PdfBitmap.ts class for EJ2-PDF\r\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\r\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\r\n * ```typescript\r\n * // create a new PDF document.\r\n * let document : PdfDocument = new PdfDocument();\r\n * // add a page to the document.\r\n * let page1 : PdfPage = document.pages.add();\r\n * // base64 string of an image\r\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\r\n * // load the image from the base64 string of original image.\r\n * let image : PdfBitmap = new PdfBitmap(imageString);\r\n * // draw the image\r\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\r\n * // save the document.\r\n * document.save('output.pdf');\r\n * // destroy the document\r\n * document.destroy();\r\n * ```\r\n */\nvar PdfBitmap = /** @class */function (_super) {\n  __extends(PdfBitmap, _super);\n  /**\r\n   * Create an instance for `PdfBitmap` class.\r\n   * @param encodedString Base64 string of an image.\r\n   * ```typescript\r\n   * // create a new PDF document.\r\n   * let document : PdfDocument = new PdfDocument();\r\n   * // add a page to the document.\r\n   * let page1 : PdfPage = document.pages.add();\r\n   * // base64 string of an image\r\n   * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\r\n   * //\r\n   * // load the image from the base64 string of original image.\r\n   * let image : PdfBitmap = new PdfBitmap(imageString);\r\n   * //\r\n   * // draw the image\r\n   * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\r\n   * // save the document.\r\n   * document.save('output.pdf');\r\n   * // destroy the document\r\n   * document.destroy();\r\n   * ```\r\n   */\n  function PdfBitmap(encodedString) {\n    var _this = _super.call(this) || this;\n    //Fields\n    /**\r\n     * Specifies the `status` of an image.\r\n     * @default true.\r\n     * @hidden\r\n     * @private\r\n     */\n    _this.imageStatus = true;\n    /**\r\n     * Internal variable for accessing fields from `DictionryProperties` class.\r\n     * @hidden\r\n     * @private\r\n     */\n    _this.dictionaryProperties = new DictionaryProperties();\n    _this.loadImage(encodedString);\n    return _this;\n  }\n  /**\r\n   * `Load image`.\r\n   * @hidden\r\n   * @private\r\n   */\n  PdfBitmap.prototype.loadImage = function (encodedString) {\n    var task = this.initializeAsync(encodedString);\n  };\n  /**\r\n   * `Initialize` image parameters.\r\n   * @private\r\n   */\n  PdfBitmap.prototype.initializeAsync = function (encodedString) {\n    var byteArray = new ByteArray(encodedString.length);\n    byteArray.writeFromBase64String(encodedString);\n    this.decoder = new ImageDecoder(byteArray);\n    this.height = this.decoder.height;\n    this.width = this.decoder.width;\n    // FrameCount = BitmapImageDecoder.FrameCount;\n    this.bitsPerComponent = this.decoder.bitsPerComponent;\n  };\n  /**\r\n   * `Saves` the image into stream.\r\n   * @private\r\n   */\n  PdfBitmap.prototype.save = function () {\n    this.imageStatus = true;\n    this.imageStream = this.decoder.getImageDictionary();\n  };\n  return PdfBitmap;\n}(PdfImage);\nexport { PdfBitmap };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ImageDecoder","ByteArray","DictionaryProperties","PdfImage","PdfBitmap","_super","encodedString","_this","call","imageStatus","dictionaryProperties","loadImage","task","initializeAsync","byteArray","length","writeFromBase64String","decoder","height","width","bitsPerComponent","save","imageStream","getImageDictionary"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * PdfBitmap.ts class for EJ2-PDF\r\n */\r\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\r\nimport { ByteArray } from './../../graphics/images/byte-array';\r\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\r\nimport { PdfImage } from './pdf-image';\r\n/**\r\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\r\n * ```typescript\r\n * // create a new PDF document.\r\n * let document : PdfDocument = new PdfDocument();\r\n * // add a page to the document.\r\n * let page1 : PdfPage = document.pages.add();\r\n * // base64 string of an image\r\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\r\n * // load the image from the base64 string of original image.\r\n * let image : PdfBitmap = new PdfBitmap(imageString);\r\n * // draw the image\r\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\r\n * // save the document.\r\n * document.save('output.pdf');\r\n * // destroy the document\r\n * document.destroy();\r\n * ```\r\n */\r\nvar PdfBitmap = /** @class */ (function (_super) {\r\n    __extends(PdfBitmap, _super);\r\n    /**\r\n     * Create an instance for `PdfBitmap` class.\r\n     * @param encodedString Base64 string of an image.\r\n     * ```typescript\r\n     * // create a new PDF document.\r\n     * let document : PdfDocument = new PdfDocument();\r\n     * // add a page to the document.\r\n     * let page1 : PdfPage = document.pages.add();\r\n     * // base64 string of an image\r\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\r\n     * //\r\n     * // load the image from the base64 string of original image.\r\n     * let image : PdfBitmap = new PdfBitmap(imageString);\r\n     * //\r\n     * // draw the image\r\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\r\n     * // save the document.\r\n     * document.save('output.pdf');\r\n     * // destroy the document\r\n     * document.destroy();\r\n     * ```\r\n     */\r\n    function PdfBitmap(encodedString) {\r\n        var _this = _super.call(this) || this;\r\n        //Fields\r\n        /**\r\n         * Specifies the `status` of an image.\r\n         * @default true.\r\n         * @hidden\r\n         * @private\r\n         */\r\n        _this.imageStatus = true;\r\n        /**\r\n         * Internal variable for accessing fields from `DictionryProperties` class.\r\n         * @hidden\r\n         * @private\r\n         */\r\n        _this.dictionaryProperties = new DictionaryProperties();\r\n        _this.loadImage(encodedString);\r\n        return _this;\r\n    }\r\n    /**\r\n     * `Load image`.\r\n     * @hidden\r\n     * @private\r\n     */\r\n    PdfBitmap.prototype.loadImage = function (encodedString) {\r\n        var task = this.initializeAsync(encodedString);\r\n    };\r\n    /**\r\n     * `Initialize` image parameters.\r\n     * @private\r\n     */\r\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\r\n        var byteArray = new ByteArray(encodedString.length);\r\n        byteArray.writeFromBase64String(encodedString);\r\n        this.decoder = new ImageDecoder(byteArray);\r\n        this.height = this.decoder.height;\r\n        this.width = this.decoder.width;\r\n        // FrameCount = BitmapImageDecoder.FrameCount;\r\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\r\n    };\r\n    /**\r\n     * `Saves` the image into stream.\r\n     * @private\r\n     */\r\n    PdfBitmap.prototype.save = function () {\r\n        this.imageStatus = true;\r\n        this.imageStream = this.decoder.getImageDictionary();\r\n    };\r\n    return PdfBitmap;\r\n}(PdfImage));\r\nexport { PdfBitmap };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}