{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { withInRange } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { subArraySum, getElement, appendChildElement, redrawElement } from '../../common/utils/helper';\nimport { ColumnBase } from './column-base';\nimport { animationMode } from '@syncfusion/ej2-base';\n/**\r\n * `WaterfallSeries` module is used to render the waterfall series.\r\n */\nvar WaterfallSeries = /** @class */function (_super) {\n  __extends(WaterfallSeries, _super);\n  function WaterfallSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Render waterfall series.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  WaterfallSeries.prototype.render = function (series) {\n    var rect;\n    var sideBySideInfo = this.getSideBySideInfo(series);\n    var origin = Math.max(series.yAxis.visibleRange.min, 0);\n    var argsData;\n    var prevEndValue = 0;\n    var direction = '';\n    var currentEndValue = 0;\n    var originValue;\n    var prevRegion = null;\n    var y;\n    var isInversed = series.chart.requireInvertedAxis;\n    var intermediateOrigin = 0;\n    var redraw = series.chart.redraw;\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n      point.symbolLocations = [];\n      point.regions = [];\n      if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n        //Calcute the current point value to render waterfall series.\n        var isSum = this.isIntermediateSum(series, point.index);\n        var totalSum = this.isSumIndex(series, point.index);\n        currentEndValue += isSum || totalSum === true ? 0 : point.yValue;\n        //Calcute the origin value for points\n        originValue = isSum === true ? intermediateOrigin : prevEndValue !== null && !totalSum ? prevEndValue : origin;\n        rect = this.getRectangle(point.xValue + sideBySideInfo.start, currentEndValue, point.xValue + sideBySideInfo.end, originValue, series);\n        argsData = this.triggerPointRenderEvent(series, point);\n        //intermediateOrigin is used only for imtermediate data\n        if (isSum) {\n          intermediateOrigin = currentEndValue;\n        }\n        prevEndValue = currentEndValue;\n        if (!argsData.cancel) {\n          this.updateSymbolLocation(point, rect, series);\n          this.drawRectangle(series, point, rect, argsData);\n        }\n        var currentRegion = point.regions[0];\n        if (prevRegion !== null) {\n          var prevLeft = isInversed ? prevRegion.x : prevRegion.y;\n          var currentLeft = isInversed ? currentRegion.x : currentRegion.y;\n          var prevBottom = void 0;\n          var currentBottom = void 0;\n          var currentYValue = currentRegion.y;\n          var currentXValue = currentRegion.x;\n          var beforePoint = series.points[point.index - 1];\n          if (point.yValue === 0) {\n            prevBottom = isInversed ? prevRegion.x + prevRegion.width : prevRegion.y + prevRegion.height;\n            currentBottom = isInversed ? point.symbolLocations[0].x : point.symbolLocations[0].y;\n          } else {\n            prevBottom = isInversed ? beforePoint.yValue === 0 ? beforePoint.symbolLocations[0].x : prevRegion.x + prevRegion.width : beforePoint.yValue === 0 ? beforePoint.symbolLocations[0].y : prevRegion.y + prevRegion.height;\n            currentBottom = isInversed ? currentRegion.x + currentRegion.width : currentRegion.y + currentRegion.height;\n          }\n          if (Math.round(prevLeft) === Math.round(currentLeft) || Math.round(prevBottom) === Math.round(currentLeft)) {\n            y = isInversed ? currentRegion.x === 0 && prevRegion.x === 0 ? currentBottom : currentRegion.x : currentRegion.y;\n            y = point.yValue === 0 ? isInversed ? point.symbolLocations[0].x : point.symbolLocations[0].y : y;\n          } else {\n            y = currentBottom;\n          }\n          if (isInversed) {\n            if (beforePoint.yValue === 0) {\n              prevRegion.y = prevRegion.y + prevRegion.height / 2 + rect.height / 2 - prevRegion.height;\n            }\n            if (point.yValue === 0) {\n              currentYValue = currentRegion.y + currentRegion.height / 2 - rect.height / 2;\n            }\n            direction = direction.concat('M' + ' ' + y + ' ' + (series.xAxis.isInversed ? prevRegion.y + prevRegion.height : prevRegion.y) + ' ' + 'L' + ' ' + y + ' ' + (series.xAxis.isInversed ? currentYValue : currentYValue + currentRegion.height) + ' ');\n          } else {\n            if (beforePoint.yValue === 0) {\n              prevRegion.x = prevRegion.x + prevRegion.width / 2 - rect.width / 2;\n              currentXValue = currentRegion.x + currentRegion.width / 2 + rect.width / 2 - currentRegion.width;\n            }\n            direction = direction.concat('M' + ' ' + (series.xAxis.isInversed ? prevRegion.x : prevRegion.x + prevRegion.width) + ' ' + y + ' ' + 'L' + ' ' + (series.xAxis.isInversed ? currentXValue + currentRegion.width : currentXValue) + ' ' + y + ' ');\n          }\n        }\n        prevRegion = point.regions[0];\n      }\n    }\n    var options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Connector_', 'none', series.connector.width, series.connector.color, series.opacity, series.connector.dashArray, direction);\n    if (redraw && getElement(options.id)) {\n      direction = getElement(options.id).getAttribute('d');\n    }\n    var element = redrawElement(redraw, options.id, options, series.chart.renderer) || series.chart.renderer.drawPath(options, new Int32Array([series.clipRect.x, series.clipRect.y]));\n    element.style.visibility = !series.chart.enableCanvas ? (series.animation.enable && animationMode !== 'Disable' || animationMode === 'Enable') && series.chart.animateSeries ? 'hidden' : 'visible' : null;\n    appendChildElement(series.chart.enableCanvas, series.seriesElement, element, redraw, true, null, null, null, direction, null, null, null, series.chart.duration);\n    this.renderMarker(series);\n  };\n  /**\r\n   * Updates the direction of rendering for the specified series.\r\n   *\r\n   * @param {Series} series - The series to be rendered.\r\n   * @returns {void}\r\n   */\n  WaterfallSeries.prototype.updateDirection = function (series) {\n    this.render(series);\n    if (series.marker.visible) {\n      appendChildElement(series.chart.enableCanvas, series.chart.seriesElements, series.symbolElement, true);\n    }\n    if (series.marker.dataLabel.visible && series.chart.dataLabelModule) {\n      series.chart.dataLabelCollections = [];\n      series.chart.dataLabelModule.render(series, series.chart, series.marker.dataLabel);\n      if (series.textElement) {\n        appendChildElement(series.chart.enableCanvas, series.chart.dataLabelElements, series.shapeElement, true);\n        appendChildElement(series.chart.enableCanvas, series.chart.dataLabelElements, series.textElement, true);\n      }\n    }\n  };\n  /**\r\n   * Checks whether the current point in the series is an intermediate sum.\r\n   *\r\n   * @param {Series} series - The series to check.\r\n   * @param {number} index - The index of the point in the series.\r\n   * @returns {boolean} - Returns true if the current point is an intermediate sum, otherwise false.\r\n   */\n  WaterfallSeries.prototype.isIntermediateSum = function (series, index) {\n    if (series.intermediateSumIndexes !== undefined && series.intermediateSumIndexes.indexOf(index) !== -1) {\n      return true;\n    }\n    return false;\n  };\n  /**\r\n   * Checks whether the current point in the series is a sum index.\r\n   *\r\n   * @param {Series} series - The series to check.\r\n   * @param {number} index - The index of the point in the series.\r\n   * @returns {boolean} - Returns true if the current point is a sum index, otherwise false.\r\n   */\n  WaterfallSeries.prototype.isSumIndex = function (series, index) {\n    if (series.sumIndexes !== undefined && series.sumIndexes.indexOf(index) !== -1) {\n      return true;\n    }\n    return false;\n  };\n  /**\r\n   * Triggers the point render event for a given series and point.\r\n   *\r\n   * @param {Series} series - The series to which the point belongs.\r\n   * @param {Points} point - The point for which to trigger the event.\r\n   * @returns {IPointRenderEventArgs} - The event arguments for the point render event.\r\n   */\n  WaterfallSeries.prototype.triggerPointRenderEvent = function (series, point) {\n    var color;\n    var isSum = this.isIntermediateSum(series, point.index);\n    var totalSum = this.isSumIndex(series, point.index);\n    if (isSum || totalSum) {\n      color = series.summaryFillColor;\n    } else if (point.y < 0) {\n      color = series.negativeFillColor;\n    } else {\n      color = series.interior;\n    }\n    return this.triggerEvent(series, point, color, {\n      color: series.border.color,\n      width: series.border.width\n    });\n  };\n  /**\r\n   * Processes the internal data for a series.\r\n   *\r\n   * @param {Object[]} json - The internal data JSON array.\r\n   * @param {Series} series - The series for which to process the data.\r\n   * @returns {Object[]} - The processed internal data array.\r\n   */\n  WaterfallSeries.prototype.processInternalData = function (json, series) {\n    var data = json;\n    var index;\n    var sumValue = 0;\n    var intermediateSum = series.intermediateSumIndexes;\n    var sumIndex = series.sumIndexes;\n    if (intermediateSum !== undefined && intermediateSum.length > 0) {\n      for (var i = 0; i < intermediateSum.length; i++) {\n        for (var j = 0; j < data.length; j++) {\n          if (j === intermediateSum[i]) {\n            if (i === 0) {\n              index = subArraySum(data, -1, intermediateSum[i], null, series);\n            } else {\n              index = subArraySum(data, intermediateSum[i - 1], intermediateSum[i], null, series);\n            }\n            data[j][series.yName] = index;\n          }\n        }\n      }\n    }\n    if (sumIndex !== undefined && sumIndex.length > 0) {\n      for (var k = 0; k < sumIndex.length; k++) {\n        for (var j = 0; j < data.length; j++) {\n          if (j === sumIndex[k]) {\n            if (intermediateSum !== undefined) {\n              index = subArraySum(data, intermediateSum[k] - 1, sumIndex[k], sumIndex, series);\n            } else {\n              if (k === 0) {\n                index = subArraySum(data, -1, sumIndex[k], null, series);\n              } else {\n                index = subArraySum(data, sumIndex[k - 1], sumIndex[k], null, series);\n              }\n            }\n            sumValue += index;\n            data[j][series.yName] = sumValue;\n          }\n        }\n      }\n    }\n    return data;\n  };\n  /**\r\n   * Animates the series.\r\n   *\r\n   * @param  {Series} series - Defines the series to animate.\r\n   * @returns {void}\r\n   */\n  WaterfallSeries.prototype.doAnimation = function (series) {\n    this.animate(series);\n  };\n  /**\r\n   * Get module name.\r\n   *\r\n   * @returns {string} - Returns the module name.\r\n   */\n  WaterfallSeries.prototype.getModuleName = function () {\n    return 'WaterfallSeries';\n    /**\r\n     * return the module name.\r\n     */\n  };\n  /**\r\n   * To destroy the waterfall series.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  WaterfallSeries.prototype.destroy = function () {\n    /**\r\n     * Destroys the waterfall series.\r\n     */\n  };\n  return WaterfallSeries;\n}(ColumnBase);\nexport { WaterfallSeries };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","withInRange","PathOption","subArraySum","getElement","appendChildElement","redrawElement","ColumnBase","animationMode","WaterfallSeries","_super","apply","arguments","render","series","rect","sideBySideInfo","getSideBySideInfo","origin","Math","max","yAxis","visibleRange","min","argsData","prevEndValue","direction","currentEndValue","originValue","prevRegion","y","isInversed","chart","requireInvertedAxis","intermediateOrigin","redraw","_i","_a","points","length","point","symbolLocations","regions","visible","index","isSum","isIntermediateSum","totalSum","isSumIndex","yValue","getRectangle","xValue","start","end","triggerPointRenderEvent","cancel","updateSymbolLocation","drawRectangle","currentRegion","prevLeft","x","currentLeft","prevBottom","currentBottom","currentYValue","currentXValue","beforePoint","width","height","round","concat","xAxis","options","element","id","connector","color","opacity","dashArray","getAttribute","renderer","drawPath","Int32Array","clipRect","style","visibility","enableCanvas","animation","enable","animateSeries","seriesElement","duration","renderMarker","updateDirection","marker","seriesElements","symbolElement","dataLabel","dataLabelModule","dataLabelCollections","textElement","dataLabelElements","shapeElement","intermediateSumIndexes","undefined","indexOf","sumIndexes","summaryFillColor","negativeFillColor","interior","triggerEvent","border","processInternalData","json","data","sumValue","intermediateSum","sumIndex","i","j","yName","k","doAnimation","animate","getModuleName","destroy"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-charts/src/chart/series/waterfall-series.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { withInRange } from '../../common/utils/helper';\r\nimport { PathOption } from '@syncfusion/ej2-svg-base';\r\nimport { subArraySum, getElement, appendChildElement, redrawElement } from '../../common/utils/helper';\r\nimport { ColumnBase } from './column-base';\r\nimport { animationMode } from '@syncfusion/ej2-base';\r\n/**\r\n * `WaterfallSeries` module is used to render the waterfall series.\r\n */\r\nvar WaterfallSeries = /** @class */ (function (_super) {\r\n    __extends(WaterfallSeries, _super);\r\n    function WaterfallSeries() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Render waterfall series.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    WaterfallSeries.prototype.render = function (series) {\r\n        var rect;\r\n        var sideBySideInfo = this.getSideBySideInfo(series);\r\n        var origin = Math.max(series.yAxis.visibleRange.min, 0);\r\n        var argsData;\r\n        var prevEndValue = 0;\r\n        var direction = '';\r\n        var currentEndValue = 0;\r\n        var originValue;\r\n        var prevRegion = null;\r\n        var y;\r\n        var isInversed = series.chart.requireInvertedAxis;\r\n        var intermediateOrigin = 0;\r\n        var redraw = series.chart.redraw;\r\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\r\n            var point = _a[_i];\r\n            point.symbolLocations = [];\r\n            point.regions = [];\r\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\r\n                //Calcute the current point value to render waterfall series.\r\n                var isSum = this.isIntermediateSum(series, point.index);\r\n                var totalSum = this.isSumIndex(series, point.index);\r\n                currentEndValue += isSum || totalSum === true ? 0 : point.yValue;\r\n                //Calcute the origin value for points\r\n                originValue = (isSum === true ? intermediateOrigin : ((prevEndValue !== null && !totalSum) ? prevEndValue : origin));\r\n                rect = this.getRectangle(point.xValue + sideBySideInfo.start, currentEndValue, point.xValue + sideBySideInfo.end, originValue, series);\r\n                argsData = this.triggerPointRenderEvent(series, point);\r\n                //intermediateOrigin is used only for imtermediate data\r\n                if (isSum) {\r\n                    intermediateOrigin = currentEndValue;\r\n                }\r\n                prevEndValue = currentEndValue;\r\n                if (!argsData.cancel) {\r\n                    this.updateSymbolLocation(point, rect, series);\r\n                    this.drawRectangle(series, point, rect, argsData);\r\n                }\r\n                var currentRegion = point.regions[0];\r\n                if (prevRegion !== null) {\r\n                    var prevLeft = isInversed ? prevRegion.x : prevRegion.y;\r\n                    var currentLeft = isInversed ? currentRegion.x : currentRegion.y;\r\n                    var prevBottom = void 0;\r\n                    var currentBottom = void 0;\r\n                    var currentYValue = currentRegion.y;\r\n                    var currentXValue = currentRegion.x;\r\n                    var beforePoint = series.points[point.index - 1];\r\n                    if (point.yValue === 0) {\r\n                        prevBottom = isInversed ? prevRegion.x + prevRegion.width : prevRegion.y + prevRegion.height;\r\n                        currentBottom = isInversed ?\r\n                            point.symbolLocations[0].x : point.symbolLocations[0].y;\r\n                    }\r\n                    else {\r\n                        prevBottom = isInversed ? (beforePoint.yValue === 0) ?\r\n                            beforePoint.symbolLocations[0].x : prevRegion.x + prevRegion.width : (beforePoint.yValue === 0) ?\r\n                            beforePoint.symbolLocations[0].y : prevRegion.y + prevRegion.height;\r\n                        currentBottom = isInversed ?\r\n                            currentRegion.x + currentRegion.width : currentRegion.y + currentRegion.height;\r\n                    }\r\n                    if (Math.round(prevLeft) === Math.round(currentLeft) ||\r\n                        Math.round(prevBottom) === Math.round(currentLeft)) {\r\n                        y = isInversed ? (currentRegion.x === 0 && prevRegion.x === 0) ? currentBottom : currentRegion.x : currentRegion.y;\r\n                        y = (point.yValue === 0) ?\r\n                            (isInversed ? point.symbolLocations[0].x : point.symbolLocations[0].y) : y;\r\n                    }\r\n                    else {\r\n                        y = currentBottom;\r\n                    }\r\n                    if (isInversed) {\r\n                        if (beforePoint.yValue === 0) {\r\n                            prevRegion.y = ((prevRegion.y + prevRegion.height / 2) + (rect.height / 2)) - prevRegion.height;\r\n                        }\r\n                        if (point.yValue === 0) {\r\n                            currentYValue = ((currentRegion.y + currentRegion.height / 2) - (rect.height / 2));\r\n                        }\r\n                        direction = direction.concat('M' + ' ' + y + ' ' + (series.xAxis.isInversed ? (prevRegion.y + prevRegion.height) : prevRegion.y) + ' ' +\r\n                            'L' + ' ' + y + ' ' + (series.xAxis.isInversed ? currentYValue : (currentYValue + currentRegion.height)) + ' ');\r\n                    }\r\n                    else {\r\n                        if (beforePoint.yValue === 0) {\r\n                            prevRegion.x = ((prevRegion.x + prevRegion.width / 2) - (rect.width / 2));\r\n                            currentXValue = ((currentRegion.x + currentRegion.width / 2) + (rect.width / 2)) - currentRegion.width;\r\n                        }\r\n                        direction = direction.concat('M' + ' ' + (series.xAxis.isInversed ? prevRegion.x : (prevRegion.x + prevRegion.width)) + ' ' + y + ' ' +\r\n                            'L' + ' ' + (series.xAxis.isInversed ? (currentXValue + currentRegion.width) : currentXValue) + ' ' + y + ' ');\r\n                    }\r\n                }\r\n                prevRegion = point.regions[0];\r\n            }\r\n        }\r\n        var options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Connector_', 'none', series.connector.width, series.connector.color, series.opacity, series.connector.dashArray, direction);\r\n        if (redraw && getElement(options.id)) {\r\n            direction = getElement(options.id).getAttribute('d');\r\n        }\r\n        var element = (redrawElement(redraw, options.id, options, series.chart.renderer) ||\r\n            series.chart.renderer.drawPath(options, new Int32Array([series.clipRect.x, series.clipRect.y])));\r\n        element.style.visibility = (!series.chart.enableCanvas) ? ((((series.animation.enable && animationMode !== 'Disable') || animationMode === 'Enable') && series.chart.animateSeries) ?\r\n            'hidden' : 'visible') : null;\r\n        appendChildElement(series.chart.enableCanvas, series.seriesElement, element, redraw, true, null, null, null, direction, null, null, null, series.chart.duration);\r\n        this.renderMarker(series);\r\n    };\r\n    /**\r\n     * Updates the direction of rendering for the specified series.\r\n     *\r\n     * @param {Series} series - The series to be rendered.\r\n     * @returns {void}\r\n     */\r\n    WaterfallSeries.prototype.updateDirection = function (series) {\r\n        this.render(series);\r\n        if (series.marker.visible) {\r\n            appendChildElement(series.chart.enableCanvas, series.chart.seriesElements, series.symbolElement, true);\r\n        }\r\n        if (series.marker.dataLabel.visible && series.chart.dataLabelModule) {\r\n            series.chart.dataLabelCollections = [];\r\n            series.chart.dataLabelModule.render(series, series.chart, series.marker.dataLabel);\r\n            if (series.textElement) {\r\n                appendChildElement(series.chart.enableCanvas, series.chart.dataLabelElements, series.shapeElement, true);\r\n                appendChildElement(series.chart.enableCanvas, series.chart.dataLabelElements, series.textElement, true);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether the current point in the series is an intermediate sum.\r\n     *\r\n     * @param {Series} series - The series to check.\r\n     * @param {number} index - The index of the point in the series.\r\n     * @returns {boolean} - Returns true if the current point is an intermediate sum, otherwise false.\r\n     */\r\n    WaterfallSeries.prototype.isIntermediateSum = function (series, index) {\r\n        if (series.intermediateSumIndexes !== undefined && series.intermediateSumIndexes.indexOf(index) !== -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Checks whether the current point in the series is a sum index.\r\n     *\r\n     * @param {Series} series - The series to check.\r\n     * @param {number} index - The index of the point in the series.\r\n     * @returns {boolean} - Returns true if the current point is a sum index, otherwise false.\r\n     */\r\n    WaterfallSeries.prototype.isSumIndex = function (series, index) {\r\n        if (series.sumIndexes !== undefined && series.sumIndexes.indexOf(index) !== -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Triggers the point render event for a given series and point.\r\n     *\r\n     * @param {Series} series - The series to which the point belongs.\r\n     * @param {Points} point - The point for which to trigger the event.\r\n     * @returns {IPointRenderEventArgs} - The event arguments for the point render event.\r\n     */\r\n    WaterfallSeries.prototype.triggerPointRenderEvent = function (series, point) {\r\n        var color;\r\n        var isSum = this.isIntermediateSum(series, point.index);\r\n        var totalSum = this.isSumIndex(series, point.index);\r\n        if (isSum || totalSum) {\r\n            color = series.summaryFillColor;\r\n        }\r\n        else if (point.y < 0) {\r\n            color = series.negativeFillColor;\r\n        }\r\n        else {\r\n            color = series.interior;\r\n        }\r\n        return this.triggerEvent(series, point, color, { color: series.border.color, width: series.border.width });\r\n    };\r\n    /**\r\n     * Processes the internal data for a series.\r\n     *\r\n     * @param {Object[]} json - The internal data JSON array.\r\n     * @param {Series} series - The series for which to process the data.\r\n     * @returns {Object[]} - The processed internal data array.\r\n     */\r\n    WaterfallSeries.prototype.processInternalData = function (json, series) {\r\n        var data = json;\r\n        var index;\r\n        var sumValue = 0;\r\n        var intermediateSum = series.intermediateSumIndexes;\r\n        var sumIndex = series.sumIndexes;\r\n        if (intermediateSum !== undefined && intermediateSum.length > 0) {\r\n            for (var i = 0; i < intermediateSum.length; i++) {\r\n                for (var j = 0; j < data.length; j++) {\r\n                    if (j === intermediateSum[i]) {\r\n                        if (i === 0) {\r\n                            index = subArraySum(data, -1, intermediateSum[i], null, series);\r\n                        }\r\n                        else {\r\n                            index = subArraySum(data, intermediateSum[i - 1], intermediateSum[i], null, series);\r\n                        }\r\n                        data[j][series.yName] = index;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (sumIndex !== undefined && sumIndex.length > 0) {\r\n            for (var k = 0; k < sumIndex.length; k++) {\r\n                for (var j = 0; j < data.length; j++) {\r\n                    if (j === sumIndex[k]) {\r\n                        if (intermediateSum !== undefined) {\r\n                            index = subArraySum(data, intermediateSum[k] - 1, sumIndex[k], sumIndex, series);\r\n                        }\r\n                        else {\r\n                            if (k === 0) {\r\n                                index = subArraySum(data, -1, sumIndex[k], null, series);\r\n                            }\r\n                            else {\r\n                                index = subArraySum(data, sumIndex[k - 1], sumIndex[k], null, series);\r\n                            }\r\n                        }\r\n                        sumValue += index;\r\n                        data[j][series.yName] = sumValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    };\r\n    /**\r\n     * Animates the series.\r\n     *\r\n     * @param  {Series} series - Defines the series to animate.\r\n     * @returns {void}\r\n     */\r\n    WaterfallSeries.prototype.doAnimation = function (series) {\r\n        this.animate(series);\r\n    };\r\n    /**\r\n     * Get module name.\r\n     *\r\n     * @returns {string} - Returns the module name.\r\n     */\r\n    WaterfallSeries.prototype.getModuleName = function () {\r\n        return 'WaterfallSeries';\r\n        /**\r\n         * return the module name.\r\n         */\r\n    };\r\n    /**\r\n     * To destroy the waterfall series.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    WaterfallSeries.prototype.destroy = function () {\r\n        /**\r\n         * Destroys the waterfall series.\r\n         */\r\n    };\r\n    return WaterfallSeries;\r\n}(ColumnBase));\r\nexport { WaterfallSeries };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}