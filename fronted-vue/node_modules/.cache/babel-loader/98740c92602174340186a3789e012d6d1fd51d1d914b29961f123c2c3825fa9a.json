{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\r\n * `PdfTextWebLink` class represents the class for text web link annotation.\r\n * ```typescript\r\n * // create a new PDF document.\r\n * let document : PdfDocument = new PdfDocument();\r\n * // add a page to the document.\r\n * let page1 : PdfPage = document.pages.add();\r\n * // create the font\r\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\r\n * //\r\n * // create the Text Web Link\r\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\r\n * // set the hyperlink\r\n * textLink.url = 'http://www.google.com';\r\n * // set the link text\r\n * textLink.text = 'Google';\r\n * // set the font\r\n * textLink.font = font;\r\n * // draw the hyperlink in PDF page\r\n * textLink.draw(page1, new PointF(10, 40));\r\n * //\r\n * // save the document.\r\n * document.save('output.pdf');\r\n * // destroy the document\r\n * document.destroy();\r\n * ```\r\n */\nvar PdfTextWebLink = /** @class */function (_super) {\n  __extends(PdfTextWebLink, _super);\n  // Constructors\n  /**\r\n   * Initializes a new instance of the `PdfTextWebLink` class.\r\n   * @private\r\n   */\n  function PdfTextWebLink() {\n    var _this = _super.call(this) || this;\n    // Fields\n    /**\r\n     * Internal variable to store `Url`.\r\n     * @default ''\r\n     * @private\r\n     */\n    _this.uniformResourceLocator = '';\n    /**\r\n     * Internal variable to store `Uri Annotation` object.\r\n     * @default null\r\n     * @private\r\n     */\n    _this.uriAnnotation = null;\n    /**\r\n     * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\r\n     * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\r\n     * @private\r\n     * @hidden\r\n     */\n    _this.recalculateBounds = false;\n    _this.defaultBorder = new PdfArray();\n    for (var i = 0; i < 3; i++) {\n      _this.defaultBorder.add(new PdfNumber(0));\n    }\n    return _this;\n  }\n  Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n    // Properties\n    /**\r\n     * Gets or sets the `Uri address`.\r\n     * ```typescript\r\n     * // create a new PDF document.\r\n     * let document : PdfDocument = new PdfDocument();\r\n     * // add a page to the document.\r\n     * let page1 : PdfPage = document.pages.add();\r\n     * // create the font\r\n     * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\r\n     * // create the Text Web Link\r\n     * let textLink : PdfTextWebLink = new PdfTextWebLink();\r\n     * //\r\n     * // set the hyperlink\r\n     * textLink.url = 'http://www.google.com';\r\n     * //\r\n     * // set the link text\r\n     * textLink.text = 'Google';\r\n     * // set the font\r\n     * textLink.font = font;\r\n     * // draw the hyperlink in PDF page\r\n     * textLink.draw(page1, new PointF(10, 40));\r\n     * // save the document.\r\n     * document.save('output.pdf');\r\n     * // destroy the document\r\n     * document.destroy();\r\n     * ```\r\n     */\n    get: function () {\n      return this.uniformResourceLocator;\n    },\n    set: function (value) {\n      if (value.length === 0) {\n        throw new Error('ArgumentException : Url - string can not be empty');\n      }\n      this.uniformResourceLocator = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n    if (arg1 instanceof PdfPage) {\n      var layout = new PdfStringLayouter();\n      var previousFontStyle = this.font.style;\n      if (arg2 instanceof PointF) {\n        this.recalculateBounds = true;\n        this.font.style = PdfFontStyle.Underline;\n        var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg1.graphics.clientSize.width - arg2.x, 0), true, arg1.graphics.clientSize);\n        if (layoutResult.lines.length === 1) {\n          var textSize = this.font.measureString(this.value);\n          var rect = new RectangleF(arg2, textSize);\n          rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n          this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n          this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n          arg1.annotations.add(this.uriAnnotation);\n          var result = this.drawText(arg1, arg2);\n          this.font.style = previousFontStyle;\n          return result;\n        } else {\n          var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n          this.font.style = previousFontStyle;\n          return result;\n        }\n      } else {\n        var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n        this.font.style = PdfFontStyle.Underline;\n        if (layoutResult.lines.length === 1) {\n          var textSize = this.font.measureString(this.value);\n          var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n          rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n          this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n          this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n          arg1.annotations.add(this.uriAnnotation);\n          var returnValue = this.drawText(arg1, arg2);\n          this.font.style = previousFontStyle;\n          return returnValue;\n        } else {\n          var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n          this.font.style = previousFontStyle;\n          return returnValue;\n        }\n      }\n    } else {\n      var page = new PdfPage();\n      page = arg1.page;\n      return this.draw(page, arg2);\n    }\n  };\n  /* tslint:enable */\n  //Private methods\n  /**\r\n   * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\r\n   * @private\r\n   */\n  PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n    var layoutResult;\n    for (var i = 0; i < result.layoutLines.length; i++) {\n      var size = this.font.measureString(result.lines[i].text);\n      var bounds = new RectangleF(location, size);\n      if (i !== 0) {\n        bounds.x = 0;\n      }\n      this.text = result.lines[i].text;\n      if (bounds.y + size.height > page.graphics.clientSize.height) {\n        if (i !== 0) {\n          page = page.graphics.getNextPage();\n          bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n          location.y = 0;\n        } else {\n          break;\n        }\n      }\n      bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n      this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n      this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n      page.annotations.add(this.uriAnnotation);\n      if (i !== 0) {\n        layoutResult = this.drawText(page, new PointF(0, bounds.y));\n      } else {\n        layoutResult = this.drawText(page, bounds.x, bounds.y);\n      }\n      location.y += size.height;\n    }\n    return layoutResult;\n  };\n  /**\r\n   * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\r\n   * @private\r\n   */\n  PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n    var layoutResult;\n    for (var i = 0; i < result.layoutLines.length; i++) {\n      var size = this.font.measureString(result.lines[i].text);\n      var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n      internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n      this.text = result.lines[i].text;\n      if (bounds.y + size.height > page.graphics.clientSize.height) {\n        if (i !== 0) {\n          page = page.graphics.getNextPage();\n          bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n          internalBounds.y = 0;\n        } else {\n          break;\n        }\n      }\n      this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n      this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n      page.annotations.add(this.uriAnnotation);\n      layoutResult = this.drawText(page, bounds);\n      bounds.y += size.height;\n    }\n    return layoutResult;\n  };\n  /* tslint:disable */\n  PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n    var shift = 0;\n    if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n      currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n      currentBounds.width = lineWidth;\n    } else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n      currentBounds.x = startPosition + (maximumWidth - lineWidth);\n      currentBounds.width = lineWidth;\n    } else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n      currentBounds.x = startPosition;\n      currentBounds.width = maximumWidth;\n    } else {\n      currentBounds.width = startPosition;\n      currentBounds.width = lineWidth;\n    }\n    return currentBounds;\n  };\n  return PdfTextWebLink;\n}(PdfTextElement);\nexport { PdfTextWebLink };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfPage","PointF","RectangleF","SizeF","PdfTextElement","PdfUriAnnotation","PdfStringLayouter","PdfFontStyle","PdfTextAlignment","PdfArray","PdfNumber","PdfTextWebLink","_super","_this","call","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","i","add","defineProperty","get","set","value","length","Error","enumerable","configurable","draw","arg1","arg2","layout","previousFontStyle","font","style","Underline","layoutResult","stringFormat","graphics","clientSize","width","x","lines","textSize","measureString","rect","calculateBounds","url","dictionary","items","setValue","annotations","result","drawText","drawMultipleLineWithPoint","y","returnValue","drawMultipleLineWithBounds","page","location","layoutLines","size","text","bounds","height","getNextPage","internalBounds","currentBounds","lineWidth","maximumWidth","startPosition","shift","alignment","Center","Right","Justify"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/pdf-text-web-link.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { PdfPage } from './../pages/pdf-page';\r\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\r\nimport { PdfTextElement } from './../graphics/figures/text-element';\r\nimport { PdfUriAnnotation } from './uri-annotation';\r\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\r\nimport { PdfFontStyle } from './../graphics/fonts/enum';\r\nimport { PdfTextAlignment } from './../graphics/enum';\r\nimport { PdfArray } from './../primitives/pdf-array';\r\nimport { PdfNumber } from './../primitives/pdf-number';\r\n/**\r\n * `PdfTextWebLink` class represents the class for text web link annotation.\r\n * ```typescript\r\n * // create a new PDF document.\r\n * let document : PdfDocument = new PdfDocument();\r\n * // add a page to the document.\r\n * let page1 : PdfPage = document.pages.add();\r\n * // create the font\r\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\r\n * //\r\n * // create the Text Web Link\r\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\r\n * // set the hyperlink\r\n * textLink.url = 'http://www.google.com';\r\n * // set the link text\r\n * textLink.text = 'Google';\r\n * // set the font\r\n * textLink.font = font;\r\n * // draw the hyperlink in PDF page\r\n * textLink.draw(page1, new PointF(10, 40));\r\n * //\r\n * // save the document.\r\n * document.save('output.pdf');\r\n * // destroy the document\r\n * document.destroy();\r\n * ```\r\n */\r\nvar PdfTextWebLink = /** @class */ (function (_super) {\r\n    __extends(PdfTextWebLink, _super);\r\n    // Constructors\r\n    /**\r\n     * Initializes a new instance of the `PdfTextWebLink` class.\r\n     * @private\r\n     */\r\n    function PdfTextWebLink() {\r\n        var _this = _super.call(this) || this;\r\n        // Fields\r\n        /**\r\n         * Internal variable to store `Url`.\r\n         * @default ''\r\n         * @private\r\n         */\r\n        _this.uniformResourceLocator = '';\r\n        /**\r\n         * Internal variable to store `Uri Annotation` object.\r\n         * @default null\r\n         * @private\r\n         */\r\n        _this.uriAnnotation = null;\r\n        /**\r\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\r\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\r\n         * @private\r\n         * @hidden\r\n         */\r\n        _this.recalculateBounds = false;\r\n        _this.defaultBorder = new PdfArray();\r\n        for (var i = 0; i < 3; i++) {\r\n            _this.defaultBorder.add(new PdfNumber(0));\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\r\n        // Properties\r\n        /**\r\n         * Gets or sets the `Uri address`.\r\n         * ```typescript\r\n         * // create a new PDF document.\r\n         * let document : PdfDocument = new PdfDocument();\r\n         * // add a page to the document.\r\n         * let page1 : PdfPage = document.pages.add();\r\n         * // create the font\r\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\r\n         * // create the Text Web Link\r\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\r\n         * //\r\n         * // set the hyperlink\r\n         * textLink.url = 'http://www.google.com';\r\n         * //\r\n         * // set the link text\r\n         * textLink.text = 'Google';\r\n         * // set the font\r\n         * textLink.font = font;\r\n         * // draw the hyperlink in PDF page\r\n         * textLink.draw(page1, new PointF(10, 40));\r\n         * // save the document.\r\n         * document.save('output.pdf');\r\n         * // destroy the document\r\n         * document.destroy();\r\n         * ```\r\n         */\r\n        get: function () {\r\n            return this.uniformResourceLocator;\r\n        },\r\n        set: function (value) {\r\n            if (value.length === 0) {\r\n                throw new Error('ArgumentException : Url - string can not be empty');\r\n            }\r\n            this.uniformResourceLocator = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\r\n        if (arg1 instanceof PdfPage) {\r\n            var layout = new PdfStringLayouter();\r\n            var previousFontStyle = this.font.style;\r\n            if (arg2 instanceof PointF) {\r\n                this.recalculateBounds = true;\r\n                this.font.style = PdfFontStyle.Underline;\r\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\r\n                if (layoutResult.lines.length === 1) {\r\n                    var textSize = this.font.measureString(this.value);\r\n                    var rect = new RectangleF(arg2, textSize);\r\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\r\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\r\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\r\n                    arg1.annotations.add(this.uriAnnotation);\r\n                    var result = this.drawText(arg1, arg2);\r\n                    this.font.style = previousFontStyle;\r\n                    return result;\r\n                }\r\n                else {\r\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\r\n                    this.font.style = previousFontStyle;\r\n                    return result;\r\n                }\r\n            }\r\n            else {\r\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\r\n                this.font.style = PdfFontStyle.Underline;\r\n                if (layoutResult.lines.length === 1) {\r\n                    var textSize = this.font.measureString(this.value);\r\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\r\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\r\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\r\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\r\n                    arg1.annotations.add(this.uriAnnotation);\r\n                    var returnValue = this.drawText(arg1, arg2);\r\n                    this.font.style = previousFontStyle;\r\n                    return returnValue;\r\n                }\r\n                else {\r\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\r\n                    this.font.style = previousFontStyle;\r\n                    return returnValue;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var page = new PdfPage();\r\n            page = arg1.page;\r\n            return this.draw(page, arg2);\r\n        }\r\n    };\r\n    /* tslint:enable */\r\n    //Private methods\r\n    /**\r\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\r\n     * @private\r\n     */\r\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\r\n        var layoutResult;\r\n        for (var i = 0; i < result.layoutLines.length; i++) {\r\n            var size = this.font.measureString(result.lines[i].text);\r\n            var bounds = new RectangleF(location, size);\r\n            if (i !== 0) {\r\n                bounds.x = 0;\r\n            }\r\n            this.text = result.lines[i].text;\r\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\r\n                if (i !== 0) {\r\n                    page = page.graphics.getNextPage();\r\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\r\n                    location.y = 0;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\r\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\r\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\r\n            page.annotations.add(this.uriAnnotation);\r\n            if (i !== 0) {\r\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\r\n            }\r\n            else {\r\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\r\n            }\r\n            location.y += size.height;\r\n        }\r\n        return layoutResult;\r\n    };\r\n    /**\r\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\r\n     * @private\r\n     */\r\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\r\n        var layoutResult;\r\n        for (var i = 0; i < result.layoutLines.length; i++) {\r\n            var size = this.font.measureString(result.lines[i].text);\r\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\r\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\r\n            this.text = result.lines[i].text;\r\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\r\n                if (i !== 0) {\r\n                    page = page.graphics.getNextPage();\r\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\r\n                    internalBounds.y = 0;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\r\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\r\n            page.annotations.add(this.uriAnnotation);\r\n            layoutResult = this.drawText(page, bounds);\r\n            bounds.y += size.height;\r\n        }\r\n        return layoutResult;\r\n    };\r\n    /* tslint:disable */\r\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\r\n        var shift = 0;\r\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\r\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\r\n            currentBounds.width = lineWidth;\r\n        }\r\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\r\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\r\n            currentBounds.width = lineWidth;\r\n        }\r\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\r\n            currentBounds.x = startPosition;\r\n            currentBounds.width = maximumWidth;\r\n        }\r\n        else {\r\n            currentBounds.width = startPosition;\r\n            currentBounds.width = lineWidth;\r\n        }\r\n        return currentBounds;\r\n    };\r\n    return PdfTextWebLink;\r\n}(PdfTextElement));\r\nexport { PdfTextWebLink };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}