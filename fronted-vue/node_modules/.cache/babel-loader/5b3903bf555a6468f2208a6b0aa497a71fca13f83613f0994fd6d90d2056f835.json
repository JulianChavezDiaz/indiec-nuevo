{"ast":null,"code":"import { Query, DataManager, Deferred } from '@syncfusion/ej2-data';\n/**\r\n * data module is used to generate query and dataSource\r\n */\nvar Data = /** @class */function () {\n  /**\r\n   * Constructor for data module\r\n   *\r\n   * @param dataSource\r\n   * @param query\r\n   * @param dataSource\r\n   * @param query\r\n   * @private\r\n   */\n  function Data(dataSource, query) {\n    this.initDataManager(dataSource, query);\n  }\n  /**\r\n   * The function used to initialize dataManager and query\r\n   *\r\n   * @param dataSource\r\n   * @param query\r\n   * @param dataSource\r\n   * @param query\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Data.prototype.initDataManager = function (dataSource, query) {\n    this.dataManager = dataSource instanceof DataManager ? dataSource : new DataManager(dataSource);\n    this.query = query instanceof Query ? query : new Query();\n  };\n  /**\r\n   * The function used to generate updated Query from chart model\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Data.prototype.generateQuery = function () {\n    var query = this.query.clone();\n    return query;\n  };\n  /**\r\n   * The function used to get dataSource by executing given Query\r\n   *\r\n   * @param  {Query} query - A Query that specifies to generate dataSource\r\n   * @returns {void}\r\n   * @private\r\n   */\n  Data.prototype.getData = function (dataQuery) {\n    var _this = this;\n    if (this.dataManager.ready) {\n      var dataManagerDeferred_1 = new Deferred();\n      var ready = this.dataManager.ready;\n      ready.then(function () {\n        _this.dataManager.executeQuery(dataQuery).then(function (result) {\n          dataManagerDeferred_1.resolve(result);\n        });\n      }).catch(function (e) {\n        dataManagerDeferred_1.reject(e);\n      });\n      return dataManagerDeferred_1.promise;\n    } else {\n      return this.dataManager.executeQuery(dataQuery);\n    }\n  };\n  return Data;\n}();\nexport { Data };","map":{"version":3,"names":["Query","DataManager","Deferred","Data","dataSource","query","initDataManager","prototype","dataManager","generateQuery","clone","getData","dataQuery","_this","ready","dataManagerDeferred_1","then","executeQuery","result","resolve","catch","e","reject","promise"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-charts/src/common/model/data.js"],"sourcesContent":["import { Query, DataManager, Deferred } from '@syncfusion/ej2-data';\r\n/**\r\n * data module is used to generate query and dataSource\r\n */\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructor for data module\r\n     *\r\n     * @param dataSource\r\n     * @param query\r\n     * @param dataSource\r\n     * @param query\r\n     * @private\r\n     */\r\n    function Data(dataSource, query) {\r\n        this.initDataManager(dataSource, query);\r\n    }\r\n    /**\r\n     * The function used to initialize dataManager and query\r\n     *\r\n     * @param dataSource\r\n     * @param query\r\n     * @param dataSource\r\n     * @param query\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Data.prototype.initDataManager = function (dataSource, query) {\r\n        this.dataManager = dataSource instanceof DataManager ? dataSource : new DataManager(dataSource);\r\n        this.query = query instanceof Query ? query : new Query();\r\n    };\r\n    /**\r\n     * The function used to generate updated Query from chart model\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Data.prototype.generateQuery = function () {\r\n        var query = this.query.clone();\r\n        return query;\r\n    };\r\n    /**\r\n     * The function used to get dataSource by executing given Query\r\n     *\r\n     * @param  {Query} query - A Query that specifies to generate dataSource\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Data.prototype.getData = function (dataQuery) {\r\n        var _this = this;\r\n        if (this.dataManager.ready) {\r\n            var dataManagerDeferred_1 = new Deferred();\r\n            var ready = this.dataManager.ready;\r\n            ready.then(function () {\r\n                _this.dataManager.executeQuery(dataQuery).then(function (result) {\r\n                    dataManagerDeferred_1.resolve(result);\r\n                });\r\n            }).catch(function (e) { dataManagerDeferred_1.reject(e); });\r\n            return dataManagerDeferred_1.promise;\r\n        }\r\n        else {\r\n            return this.dataManager.executeQuery(dataQuery);\r\n        }\r\n    };\r\n    return Data;\r\n}());\r\nexport { Data };\r\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,sBAAsB;AACnE;AACA;AACA;AACA,IAAIC,IAAI,GAAG,aAAe,YAAY;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,IAAIA,CAACC,UAAU,EAAEC,KAAK,EAAE;IAC7B,IAAI,CAACC,eAAe,CAACF,UAAU,EAAEC,KAAK,CAAC;EAC3C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIF,IAAI,CAACI,SAAS,CAACD,eAAe,GAAG,UAAUF,UAAU,EAAEC,KAAK,EAAE;IAC1D,IAAI,CAACG,WAAW,GAAGJ,UAAU,YAAYH,WAAW,GAAGG,UAAU,GAAG,IAAIH,WAAW,CAACG,UAAU,CAAC;IAC/F,IAAI,CAACC,KAAK,GAAGA,KAAK,YAAYL,KAAK,GAAGK,KAAK,GAAG,IAAIL,KAAK,CAAC,CAAC;EAC7D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIG,IAAI,CAACI,SAAS,CAACE,aAAa,GAAG,YAAY;IACvC,IAAIJ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACK,KAAK,CAAC,CAAC;IAC9B,OAAOL,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIF,IAAI,CAACI,SAAS,CAACI,OAAO,GAAG,UAAUC,SAAS,EAAE;IAC1C,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACL,WAAW,CAACM,KAAK,EAAE;MACxB,IAAIC,qBAAqB,GAAG,IAAIb,QAAQ,CAAC,CAAC;MAC1C,IAAIY,KAAK,GAAG,IAAI,CAACN,WAAW,CAACM,KAAK;MAClCA,KAAK,CAACE,IAAI,CAAC,YAAY;QACnBH,KAAK,CAACL,WAAW,CAACS,YAAY,CAACL,SAAS,CAAC,CAACI,IAAI,CAAC,UAAUE,MAAM,EAAE;UAC7DH,qBAAqB,CAACI,OAAO,CAACD,MAAM,CAAC;QACzC,CAAC,CAAC;MACN,CAAC,CAAC,CAACE,KAAK,CAAC,UAAUC,CAAC,EAAE;QAAEN,qBAAqB,CAACO,MAAM,CAACD,CAAC,CAAC;MAAE,CAAC,CAAC;MAC3D,OAAON,qBAAqB,CAACQ,OAAO;IACxC,CAAC,MACI;MACD,OAAO,IAAI,CAACf,WAAW,CAACS,YAAY,CAACL,SAAS,CAAC;IACnD;EACJ,CAAC;EACD,OAAOT,IAAI;AACf,CAAC,CAAC,CAAE;AACJ,SAASA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}