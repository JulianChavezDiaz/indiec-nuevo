{"ast":null,"code":"/**\r\n * `PdfNumber` class is used to perform number related primitive operations.\r\n * @private\r\n */\nvar PdfNumber = /** @class */function () {\n  /**\r\n   * Initializes a new instance of the `PdfNumber` class.\r\n   * @private\r\n   */\n  function PdfNumber(value) {\n    /**\r\n     * Sotres the `position`.\r\n     * @default -1\r\n     * @private\r\n     */\n    this.position5 = -1;\n    this.value = value;\n  }\n  Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n    /**\r\n     * Gets or sets the `integer` value.\r\n     * @private\r\n     */\n    get: function () {\n      return this.value;\n    },\n    set: function (value) {\n      this.value = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n    /**\r\n     * Gets or sets a value indicating whether this instance `is integer`.\r\n     * @private\r\n     */\n    get: function () {\n      return this.integer;\n    },\n    set: function (value) {\n      this.integer = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfNumber.prototype, \"status\", {\n    /**\r\n     * Gets or sets the `Status` of the specified object.\r\n     * @private\r\n     */\n    get: function () {\n      return this.status5;\n    },\n    set: function (value) {\n      this.status5 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n    /**\r\n     * Gets or sets a value indicating whether this document `is saving` or not.\r\n     * @private\r\n     */\n    get: function () {\n      return this.isSaving5;\n    },\n    set: function (value) {\n      this.isSaving5 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n    /**\r\n     * Gets or sets the `index` value of the specified object.\r\n     * @private\r\n     */\n    get: function () {\n      return this.index5;\n    },\n    set: function (value) {\n      this.index5 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfNumber.prototype, \"position\", {\n    /**\r\n     * Gets or sets the `position` of the object.\r\n     * @private\r\n     */\n    get: function () {\n      return this.position5;\n    },\n    set: function (value) {\n      this.position5 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n    /**\r\n     * Returns `cloned object`.\r\n     * @private\r\n     */\n    get: function () {\n      var rValue = null;\n      return rValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * `Saves the object`.\r\n   * @private\r\n   */\n  PdfNumber.prototype.save = function (writer) {\n    writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n  };\n  /**\r\n   * Creates a `copy of PdfNumber`.\r\n   * @private\r\n   */\n  PdfNumber.prototype.clone = function (crossTable) {\n    var newNumber = new PdfNumber(this.value);\n    return newNumber;\n  };\n  /**\r\n   * Converts a `float value to a string` using Adobe PDF rules.\r\n   * @private\r\n   */\n  PdfNumber.floatToString = function (number) {\n    // let tempString1 : string = number.toString();\n    // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n    var returnString = number.toFixed(2);\n    if (returnString === '0.00') {\n      returnString = '.00';\n    }\n    // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n    // for (let index : number = 0; index < prefixLength; index++) {\n    //     returnString += '0';\n    // }\n    // returnString += tempString2 + '.00';\n    // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n    // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n    // for (let index : number = 0; index < suffixLength; index++) {\n    //     returnString += '0';\n    // }\n    return returnString;\n  };\n  /**\r\n   * Determines the `minimum of the three values`.\r\n   * @private\r\n   */\n  PdfNumber.min = function (x, y, z) {\n    var r = Math.min(x, y);\n    return Math.min(z, r);\n  };\n  return PdfNumber;\n}();\nexport { PdfNumber };","map":{"version":3,"names":["PdfNumber","value","position5","Object","defineProperty","prototype","get","set","enumerable","configurable","integer","status5","isSaving5","index5","rValue","save","writer","write","intValue","toString","clone","crossTable","newNumber","floatToString","number","returnString","toFixed","min","x","y","z","r","Math"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js"],"sourcesContent":["/**\r\n * `PdfNumber` class is used to perform number related primitive operations.\r\n * @private\r\n */\r\nvar PdfNumber = /** @class */ (function () {\r\n    /**\r\n     * Initializes a new instance of the `PdfNumber` class.\r\n     * @private\r\n     */\r\n    function PdfNumber(value) {\r\n        /**\r\n         * Sotres the `position`.\r\n         * @default -1\r\n         * @private\r\n         */\r\n        this.position5 = -1;\r\n        this.value = value;\r\n    }\r\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\r\n        /**\r\n         * Gets or sets the `integer` value.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (value) {\r\n            this.value = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\r\n        /**\r\n         * Gets or sets a value indicating whether this instance `is integer`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.integer;\r\n        },\r\n        set: function (value) {\r\n            this.integer = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\r\n        /**\r\n         * Gets or sets the `Status` of the specified object.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.status5;\r\n        },\r\n        set: function (value) {\r\n            this.status5 = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\r\n        /**\r\n         * Gets or sets a value indicating whether this document `is saving` or not.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.isSaving5;\r\n        },\r\n        set: function (value) {\r\n            this.isSaving5 = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\r\n        /**\r\n         * Gets or sets the `index` value of the specified object.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.index5;\r\n        },\r\n        set: function (value) {\r\n            this.index5 = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\r\n        /**\r\n         * Gets or sets the `position` of the object.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.position5;\r\n        },\r\n        set: function (value) {\r\n            this.position5 = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\r\n        /**\r\n         * Returns `cloned object`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            var rValue = null;\r\n            return rValue;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * `Saves the object`.\r\n     * @private\r\n     */\r\n    PdfNumber.prototype.save = function (writer) {\r\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\r\n    };\r\n    /**\r\n     * Creates a `copy of PdfNumber`.\r\n     * @private\r\n     */\r\n    PdfNumber.prototype.clone = function (crossTable) {\r\n        var newNumber = new PdfNumber(this.value);\r\n        return newNumber;\r\n    };\r\n    /**\r\n     * Converts a `float value to a string` using Adobe PDF rules.\r\n     * @private\r\n     */\r\n    PdfNumber.floatToString = function (number) {\r\n        // let tempString1 : string = number.toString();\r\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\r\n        var returnString = number.toFixed(2);\r\n        if (returnString === '0.00') {\r\n            returnString = '.00';\r\n        }\r\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\r\n        // for (let index : number = 0; index < prefixLength; index++) {\r\n        //     returnString += '0';\r\n        // }\r\n        // returnString += tempString2 + '.00';\r\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\r\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\r\n        // for (let index : number = 0; index < suffixLength; index++) {\r\n        //     returnString += '0';\r\n        // }\r\n        return returnString;\r\n    };\r\n    /**\r\n     * Determines the `minimum of the three values`.\r\n     * @private\r\n     */\r\n    PdfNumber.min = function (x, y, z) {\r\n        var r = Math.min(x, y);\r\n        return Math.min(z, r);\r\n    };\r\n    return PdfNumber;\r\n}());\r\nexport { PdfNumber };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}