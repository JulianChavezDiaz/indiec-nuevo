{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\r\n * Provides methods and properties to create pages and its elements.\r\n * `PdfPage` class inherited from the `PdfPageBase` class.\r\n * ```typescript\r\n * // create a new PDF document\r\n * let document : PdfDocument = new PdfDocument();\r\n * //\r\n * // add a new page to the document\r\n * let page1 : PdfPage = document.pages.add();\r\n * //\r\n * // set the font\r\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\r\n * // create black brush\r\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n * // draw the text\r\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\r\n * // save the document\r\n * document.save('output.pdf');\r\n * // destroy the document\r\n * document.destroy();\r\n * ```\r\n */\nvar PdfPage = /** @class */function (_super) {\n  __extends(PdfPage, _super);\n  //constructors\n  /**\r\n   * Initialize the new instance for `PdfPage` class.\r\n   * @private\r\n   */\n  function PdfPage() {\n    var _this = _super.call(this, new PdfDictionary()) || this;\n    /**\r\n     * Stores the instance of `PdfAnnotationCollection` class.\r\n     * @hidden\r\n     * @default null\r\n     * @private\r\n     */\n    _this.annotationCollection = null;\n    /**\r\n     * Stores the instance of `PageBeginSave` event for Page Number Field.\r\n     * @default null\r\n     * @private\r\n     */\n    _this.beginSave = null;\n    _this.initialize();\n    return _this;\n  }\n  Object.defineProperty(PdfPage.prototype, \"document\", {\n    //Properties\n    /**\r\n     * Gets current `document`.\r\n     * @private\r\n     */\n    get: function () {\n      if (this.section !== null && this.section.parent !== null) {\n        return this.section.parent.document;\n      } else {\n        return null;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"graphics\", {\n    /**\r\n     * Get the current `graphics`.\r\n     * ```typescript\r\n     * // create a new PDF document\r\n     * let document : PdfDocument = new PdfDocument();\r\n     * // add a new page to the document\r\n     * let page1 : PdfPage = document.pages.add();\r\n     * //\r\n     * // get graphics\r\n     * let graphics : PdfGraphics = page1.graphics;\r\n     * //\r\n     * // set the font\r\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\r\n     * // create black brush\r\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n     * // draw the text\r\n     * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\r\n     * // save the document\r\n     * document.save('output.pdf');\r\n     * // destroy the document\r\n     * document.destroy();\r\n     * ```\r\n     */\n    get: function () {\n      var result = this.defaultLayer.graphics;\n      result.currentPage = this;\n      return result;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n    /**\r\n     * Gets the `cross table`.\r\n     * @private\r\n     */\n    get: function () {\n      if (this.section === null) {\n        throw new Error('PdfDocumentException : Page is not created');\n      }\n      return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"size\", {\n    /**\r\n     * Gets the size of the PDF page- Read only.\r\n     * @public\r\n     */\n    get: function () {\n      return this.section.pageSettings.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"origin\", {\n    /**\r\n     * Gets the `origin` of the page.\r\n     * @private\r\n     */\n    get: function () {\n      return this.section.pageSettings.origin;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"annotations\", {\n    /**\r\n     * Gets a collection of the `annotations` of the page- Read only.\r\n     * @private\r\n     */\n    get: function () {\n      if (this.annotationCollection == null) {\n        this.annotationCollection = new PdfAnnotationCollection(this);\n        // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n        this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n        // }\n        this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n      }\n      return this.annotationCollection;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  //Implementation\n  /**\r\n   * `Initializes` a page.\r\n   * @private\r\n   */\n  PdfPage.prototype.initialize = function () {\n    this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n    this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n  };\n  /**\r\n   * Sets parent `section` to the page.\r\n   * @private\r\n   */\n  PdfPage.prototype.setSection = function (section) {\n    this.section = section;\n    this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n  };\n  /**\r\n   * `Resets the progress`.\r\n   * @private\r\n   */\n  PdfPage.prototype.resetProgress = function () {\n    this.isProgressOn = false;\n  };\n  /**\r\n   * Get the page size reduced by page margins and page template dimensions.\r\n   * ```typescript\r\n   * // create a new PDF document\r\n   * let document : PdfDocument = new PdfDocument();\r\n   * // add a pages to the document\r\n   * let page1 : PdfPage = document.pages.add();\r\n   * // create new standard font\r\n   * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\r\n   * // set brush\r\n   * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n   * //\r\n   * // set the specified point using `getClientSize` method\r\n   * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\r\n   * // draw the text\r\n   * page1.graphics.drawString('Hello World', font, blackBrush, point);\r\n   * //\r\n   * // save the document\r\n   * document.save('output.pdf');\r\n   * // destroy the document\r\n   * document.destroy();\r\n   * ```\r\n   */\n  PdfPage.prototype.getClientSize = function () {\n    var returnValue = this.section.getActualBounds(this, true);\n    return new SizeF(returnValue.width, returnValue.height);\n  };\n  /**\r\n   * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\r\n   * @private\r\n   */\n  PdfPage.prototype.pageBeginSave = function () {\n    var doc = this.document;\n    if (typeof doc !== undefined && doc != null) {\n      this.drawPageTemplates(doc);\n    }\n    if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n      this.beginSave(this);\n    }\n  };\n  /**\r\n   * Helper method to draw template elements.\r\n   * @private\r\n   */\n  PdfPage.prototype.drawPageTemplates = function (document) {\n    // Draw Background templates.\n    var hasBackTemplates = this.section.containsTemplates(document, this, false);\n    if (hasBackTemplates) {\n      var backLayer = new PdfPageLayer(this, false);\n      this.layers.insert(0, backLayer);\n      this.section.drawTemplates(this, backLayer, document, false);\n      if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n        for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n          var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n          fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n        }\n      }\n    }\n    // Draw Foreground templates.\n    var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n    if (hasFrontTemplates) {\n      var frontLayer = new PdfPageLayer(this, false);\n      this.layers.add(frontLayer);\n      this.section.drawTemplates(this, frontLayer, document, true);\n    }\n  };\n  return PdfPage;\n}(PdfPageBase);\nexport { PdfPage };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfPageBase","PdfDictionary","SaveTemplateEventHandler","PdfName","PdfReferenceHolder","SizeF","PdfAnnotationCollection","PdfPageLayer","PdfPage","_super","_this","call","annotationCollection","beginSave","initialize","defineProperty","get","section","parent","document","enumerable","configurable","result","defaultLayer","graphics","currentPage","Error","parentDocument","crossTable","pageSettings","size","origin","dictionary","items","setValue","dictionaryProperties","annots","element","annotations","getValue","type","pageBeginDrawTemplate","setSection","resetProgress","isProgressOn","getClientSize","returnValue","getActualBounds","width","height","pageBeginSave","doc","undefined","drawPageTemplates","hasBackTemplates","containsTemplates","backLayer","layers","insert","drawTemplates","i","automaticFields","length","fieldInfo","field","performDraw","location","scalingX","scalingY","hasFrontTemplates","frontLayer","add"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { PdfPageBase } from './pdf-page-base';\r\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\r\nimport { PdfName } from './../primitives/pdf-name';\r\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\r\nimport { SizeF } from './../drawing/pdf-drawing';\r\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\r\nimport { PdfPageLayer } from './pdf-page-layer';\r\n/**\r\n * Provides methods and properties to create pages and its elements.\r\n * `PdfPage` class inherited from the `PdfPageBase` class.\r\n * ```typescript\r\n * // create a new PDF document\r\n * let document : PdfDocument = new PdfDocument();\r\n * //\r\n * // add a new page to the document\r\n * let page1 : PdfPage = document.pages.add();\r\n * //\r\n * // set the font\r\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\r\n * // create black brush\r\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n * // draw the text\r\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\r\n * // save the document\r\n * document.save('output.pdf');\r\n * // destroy the document\r\n * document.destroy();\r\n * ```\r\n */\r\nvar PdfPage = /** @class */ (function (_super) {\r\n    __extends(PdfPage, _super);\r\n    //constructors\r\n    /**\r\n     * Initialize the new instance for `PdfPage` class.\r\n     * @private\r\n     */\r\n    function PdfPage() {\r\n        var _this = _super.call(this, new PdfDictionary()) || this;\r\n        /**\r\n         * Stores the instance of `PdfAnnotationCollection` class.\r\n         * @hidden\r\n         * @default null\r\n         * @private\r\n         */\r\n        _this.annotationCollection = null;\r\n        /**\r\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\r\n         * @default null\r\n         * @private\r\n         */\r\n        _this.beginSave = null;\r\n        _this.initialize();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PdfPage.prototype, \"document\", {\r\n        //Properties\r\n        /**\r\n         * Gets current `document`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            if (this.section !== null && this.section.parent !== null) {\r\n                return this.section.parent.document;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\r\n        /**\r\n         * Get the current `graphics`.\r\n         * ```typescript\r\n         * // create a new PDF document\r\n         * let document : PdfDocument = new PdfDocument();\r\n         * // add a new page to the document\r\n         * let page1 : PdfPage = document.pages.add();\r\n         * //\r\n         * // get graphics\r\n         * let graphics : PdfGraphics = page1.graphics;\r\n         * //\r\n         * // set the font\r\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\r\n         * // create black brush\r\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n         * // draw the text\r\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\r\n         * // save the document\r\n         * document.save('output.pdf');\r\n         * // destroy the document\r\n         * document.destroy();\r\n         * ```\r\n         */\r\n        get: function () {\r\n            var result = this.defaultLayer.graphics;\r\n            result.currentPage = this;\r\n            return result;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\r\n        /**\r\n         * Gets the `cross table`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            if (this.section === null) {\r\n                throw new Error('PdfDocumentException : Page is not created');\r\n            }\r\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPage.prototype, \"size\", {\r\n        /**\r\n         * Gets the size of the PDF page- Read only.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return this.section.pageSettings.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\r\n        /**\r\n         * Gets the `origin` of the page.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.section.pageSettings.origin;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\r\n        /**\r\n         * Gets a collection of the `annotations` of the page- Read only.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            if (this.annotationCollection == null) {\r\n                this.annotationCollection = new PdfAnnotationCollection(this);\r\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\r\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\r\n                // }\r\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\r\n            }\r\n            return this.annotationCollection;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //Implementation\r\n    /**\r\n     * `Initializes` a page.\r\n     * @private\r\n     */\r\n    PdfPage.prototype.initialize = function () {\r\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\r\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\r\n    };\r\n    /**\r\n     * Sets parent `section` to the page.\r\n     * @private\r\n     */\r\n    PdfPage.prototype.setSection = function (section) {\r\n        this.section = section;\r\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\r\n    };\r\n    /**\r\n     * `Resets the progress`.\r\n     * @private\r\n     */\r\n    PdfPage.prototype.resetProgress = function () {\r\n        this.isProgressOn = false;\r\n    };\r\n    /**\r\n     * Get the page size reduced by page margins and page template dimensions.\r\n     * ```typescript\r\n     * // create a new PDF document\r\n     * let document : PdfDocument = new PdfDocument();\r\n     * // add a pages to the document\r\n     * let page1 : PdfPage = document.pages.add();\r\n     * // create new standard font\r\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\r\n     * // set brush\r\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n     * //\r\n     * // set the specified point using `getClientSize` method\r\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\r\n     * // draw the text\r\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\r\n     * //\r\n     * // save the document\r\n     * document.save('output.pdf');\r\n     * // destroy the document\r\n     * document.destroy();\r\n     * ```\r\n     */\r\n    PdfPage.prototype.getClientSize = function () {\r\n        var returnValue = this.section.getActualBounds(this, true);\r\n        return new SizeF(returnValue.width, returnValue.height);\r\n    };\r\n    /**\r\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\r\n     * @private\r\n     */\r\n    PdfPage.prototype.pageBeginSave = function () {\r\n        var doc = this.document;\r\n        if (typeof doc !== undefined && doc != null) {\r\n            this.drawPageTemplates(doc);\r\n        }\r\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\r\n            this.beginSave(this);\r\n        }\r\n    };\r\n    /**\r\n     * Helper method to draw template elements.\r\n     * @private\r\n     */\r\n    PdfPage.prototype.drawPageTemplates = function (document) {\r\n        // Draw Background templates.\r\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\r\n        if (hasBackTemplates) {\r\n            var backLayer = new PdfPageLayer(this, false);\r\n            this.layers.insert(0, backLayer);\r\n            this.section.drawTemplates(this, backLayer, document, false);\r\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\r\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\r\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\r\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\r\n                }\r\n            }\r\n        }\r\n        // Draw Foreground templates.\r\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\r\n        if (hasFrontTemplates) {\r\n            var frontLayer = new PdfPageLayer(this, false);\r\n            this.layers.add(frontLayer);\r\n            this.section.drawTemplates(this, frontLayer, document, true);\r\n        }\r\n    };\r\n    return PdfPage;\r\n}(PdfPageBase));\r\nexport { PdfPage };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}