{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notifications-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"progress-bar\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.notifications, (notification, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"notification-bar\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(notification.date), 1 /* TEXT */), notification.message.includes('Evento en') ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n      class: \"progress-fill\",\n      style: _normalizeStyle({\n        width: `${notification.progress}%`\n      })\n    }, null, 4 /* STYLE */)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString(notification.message), 1 /* TEXT */))]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","notifications","notification","index","_createElementVNode","_toDisplayString","date","message","includes","_hoisted_2","style","_normalizeStyle","width","progress","_hoisted_3"],"sources":["C:\\Users\\RONNY VILLA\\Downloads\\indiec-nuevo\\fronted-vue\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\r\n  <div class=\"notifications-container\">\r\n    <div\r\n      v-for=\"(notification, index) in notifications\"\r\n      :key=\"index\"\r\n      class=\"notification-bar\"\r\n    >\r\n      <p>{{ notification.date }}</p>\r\n      <div v-if=\"notification.message.includes('Evento en')\" class=\"progress-bar\">\r\n        <div class=\"progress-fill\" :style=\"{ width: `${notification.progress}%` }\"></div>\r\n      </div>\r\n      <p v-else>{{ notification.message }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default {\r\n  setup() {\r\n    const notifications = ref([\r\n      { date: \"11-01-2025\", message: \"¡Evento en 5 días!\" },\r\n      { date: \"12-01-2025\", message: \"¡Próximo evento en 2 días!\" },\r\n      { date: \"13-01-2025\", message: \"Evento finalizado\" },\r\n    ]);\r\n\r\n    const calculateProgress = (eventDate) => {\r\n      const eventDay = dayjs(eventDate, \"DD-MM-YYYY\");\r\n      const today = dayjs();\r\n      const totalDays = 7; // Número de días totales para la barra de progreso\r\n      const daysLeft = eventDay.diff(today, \"day\");\r\n      return Math.max(0, Math.min(100, ((totalDays - daysLeft) / totalDays) * 100));\r\n    };\r\n\r\n    notifications.value.forEach((notification) => {\r\n      if (notification.message.includes(\"Evento en\")) {\r\n        notification.progress = calculateProgress(notification.date);\r\n      } else {\r\n        notification.progress = 0; // No aplica barra de progreso\r\n      }\r\n    });\r\n\r\n    return { notifications };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.notifications-container {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.notification-bar {\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 10px;\r\n  background-color: #e0e0e0;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  margin-top: 5px;\r\n}\r\n\r\n.progress-fill {\r\n  width: 0%; /* Se ajustará dinámicamente */\r\n  height: 100%;\r\n  background-color: #4caf50; /* Verde */\r\n  transition: width 0.5s ease;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAyB;;EADtCC,GAAA;EAQ6DD,KAAK,EAAC;;;EARnEC,GAAA;AAAA;;uBACEC,mBAAA,CAYM,OAZNC,UAYM,I,kBAXJD,mBAAA,CAUME,SAAA,QAZVC,WAAA,CAGsCC,MAAA,CAAAC,aAAa,EAHnD,CAGcC,YAAY,EAAEC,KAAK;yBAD7BP,mBAAA,CAUM;MARHD,GAAG,EAAEQ,KAAK;MACXT,KAAK,EAAC;QAENU,mBAAA,CAA8B,WAAAC,gBAAA,CAAxBH,YAAY,CAACI,IAAI,kBACZJ,YAAY,CAACK,OAAO,CAACC,QAAQ,iB,cAAxCZ,mBAAA,CAEM,OAFNa,UAEM,GADJL,mBAAA,CAAiF;MAA5EV,KAAK,EAAC,eAAe;MAAEgB,KAAK,EATzCC,eAAA;QAAAC,KAAA,KASuDV,YAAY,CAACW,QAAQ;MAAA;gDAEtEjB,mBAAA,CAAwC,KAX9CkB,UAAA,EAAAT,gBAAA,CAWmBH,YAAY,CAACK,OAAO,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}