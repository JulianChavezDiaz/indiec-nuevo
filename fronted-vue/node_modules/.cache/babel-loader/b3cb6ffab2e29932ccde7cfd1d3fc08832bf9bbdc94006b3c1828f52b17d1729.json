{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { getUnicodeText, textTrim, withInBounds } from '../../common/utils/helper';\nimport { BaseLegend, LegendOptions } from '../../common/legend/legend';\nimport { measureText } from '@syncfusion/ej2-svg-base';\nimport { legendClick, legendRender, regSub, regSup } from '../../common/model/constants';\nimport { StockChartBorder, StockChartFont, StockMargin } from '../model/base';\nimport { Browser } from '@syncfusion/ej2-base';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ContainerPadding, Location } from '../../common/model/base';\n/**\r\n * Configures the legends in charts.\r\n */\nvar StockChartLegendSettings = /** @class */function (_super) {\n  __extends(StockChartLegendSettings, _super);\n  function StockChartLegendSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], StockChartLegendSettings.prototype, \"visible\", void 0);\n  __decorate([Property(null)], StockChartLegendSettings.prototype, \"height\", void 0);\n  __decorate([Property(null)], StockChartLegendSettings.prototype, \"width\", void 0);\n  __decorate([Complex({\n    x: 0,\n    y: 0\n  }, Location)], StockChartLegendSettings.prototype, \"location\", void 0);\n  __decorate([Property('Auto')], StockChartLegendSettings.prototype, \"position\", void 0);\n  __decorate([Property('Series')], StockChartLegendSettings.prototype, \"mode\", void 0);\n  __decorate([Property(8)], StockChartLegendSettings.prototype, \"padding\", void 0);\n  __decorate([Property(null)], StockChartLegendSettings.prototype, \"itemPadding\", void 0);\n  __decorate([Property('Center')], StockChartLegendSettings.prototype, \"alignment\", void 0);\n  __decorate([Complex({\n    fontFamily: null,\n    size: null,\n    fontStyle: null,\n    fontWeight: null,\n    color: null\n  }, StockChartFont)], StockChartLegendSettings.prototype, \"textStyle\", void 0);\n  __decorate([Property(10)], StockChartLegendSettings.prototype, \"shapeHeight\", void 0);\n  __decorate([Property(10)], StockChartLegendSettings.prototype, \"shapeWidth\", void 0);\n  __decorate([Complex({}, StockChartBorder)], StockChartLegendSettings.prototype, \"border\", void 0);\n  __decorate([Complex({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }, StockMargin)], StockChartLegendSettings.prototype, \"margin\", void 0);\n  __decorate([Complex({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }, ContainerPadding)], StockChartLegendSettings.prototype, \"containerPadding\", void 0);\n  __decorate([Property(8)], StockChartLegendSettings.prototype, \"shapePadding\", void 0);\n  __decorate([Property('transparent')], StockChartLegendSettings.prototype, \"background\", void 0);\n  __decorate([Property(1)], StockChartLegendSettings.prototype, \"opacity\", void 0);\n  __decorate([Property(true)], StockChartLegendSettings.prototype, \"toggleVisibility\", void 0);\n  __decorate([Property(null)], StockChartLegendSettings.prototype, \"description\", void 0);\n  __decorate([Property(3)], StockChartLegendSettings.prototype, \"tabIndex\", void 0);\n  __decorate([Property(null)], StockChartLegendSettings.prototype, \"title\", void 0);\n  __decorate([Complex({\n    fontFamily: null,\n    size: null,\n    fontStyle: null,\n    fontWeight: null,\n    color: null\n  }, StockChartFont)], StockChartLegendSettings.prototype, \"titleStyle\", void 0);\n  __decorate([Property('Top')], StockChartLegendSettings.prototype, \"titlePosition\", void 0);\n  __decorate([Property(100)], StockChartLegendSettings.prototype, \"maximumTitleWidth\", void 0);\n  __decorate([Property(true)], StockChartLegendSettings.prototype, \"enablePages\", void 0);\n  __decorate([Property(false)], StockChartLegendSettings.prototype, \"isInversed\", void 0);\n  return StockChartLegendSettings;\n}(ChildProperty);\nexport { StockChartLegendSettings };\n/**\r\n * `Legend` module is used to render legend for the stockchart.\r\n */\nvar StockLegend = /** @class */function (_super) {\n  __extends(StockLegend, _super);\n  function StockLegend(chart) {\n    var _this = _super.call(this, chart) || this;\n    _this.library = _this;\n    _this.addEventListener();\n    return _this;\n  }\n  /**\r\n   * Binding events for Stocklegend module.\r\n   *\r\n   * @returns {void}\r\n   */\n  StockLegend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.on('click', this.click, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n  };\n  /**\r\n   * UnBinding events for Stocklegend module.\r\n   *\r\n   * @returns {void}\r\n   */\n  StockLegend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n  };\n  /**\r\n   * To handle mouse move for Stocklegend module.\r\n   *\r\n   * @param {MouseEvent} e - The mouse move event.\r\n   * @returns {void}\r\n   */\n  StockLegend.prototype.mouseMove = function (e) {\n    if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\r\n   * To handle mouse end for Stocklegend module.\r\n   *\r\n   * @param {MouseEvent} e - The mouse move event.\r\n   * @returns {void}\r\n   */\n  StockLegend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  StockLegend.prototype.getLegendOptions = function (visibleSeriesCollection) {\n    this.legendCollections = [];\n    var seriesType;\n    var fillColor;\n    if (visibleSeriesCollection.length > 1) {\n      this.legend.mode = 'Series';\n    }\n    for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n      var series = visibleSeriesCollection_1[_i];\n      if (this.legend.mode === 'Series') {\n        if (series.category !== 'Indicator') {\n          seriesType = series.type;\n          fillColor = series.pointColorMapping && series.points.length > 0 ? series.points[0].interior ? series.points[0].interior : series.interior : series.interior;\n          this.legendCollections.push(new LegendOptions(series.name, fillColor, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible, seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n        }\n      }\n    }\n  };\n  /**\r\n   * Retrieves the bounds of the legend.\r\n   *\r\n   * @param {Size} availableSize - The available size for the legend.\r\n   * @param {Rect} legendBound - The bounds of the legend element.\r\n   * @param {StockChartLegendSettingsModel} legend - The settings for the legend.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  StockLegend.prototype.getLegendBounds = function (availableSize, legendBound, legend) {\n    this.calculateLegendTitle(legend, legendBound);\n    var padding = legend.padding;\n    this.isTitle = legend.title ? true : false;\n    var titlePosition = legend.titlePosition;\n    var extraWidth = 0;\n    var extraHeight = 0;\n    var legendOption;\n    var arrowHeight = this.arrowHeight;\n    var arrowWidth = this.arrowWidth;\n    var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n    var titleSpace = this.isTitle && titlePosition === 'Top' ? this.fivePixel + this.legendTitleSize.height : 0;\n    titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.height : titleSpace;\n    if (!this.isVertical) {\n      extraHeight = !legend.height ? availableSize.height / 100 * 5 : 0;\n    } else {\n      extraWidth = !legend.width ? availableSize.width / 100 * 5 : 0;\n    }\n    legendBound.height += extraHeight;\n    legendBound.width += extraWidth;\n    var shapePadding = legend.shapePadding;\n    var shapeWidth = legend.shapeWidth;\n    var maximumWidth = 0;\n    var rowWidth = 0;\n    var legendWidth = 0;\n    var columnHeight = 0;\n    var rowCount = 0;\n    var titlePlusArrowSpace = 0;\n    var legendEventArgs;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle, this.chart.themeStyle.legendLabelFont).height, legend.shapeHeight);\n    var render = false;\n    for (var i = 0; i < this.legendCollections.length; i++) {\n      legendOption = this.legendCollections[i];\n      if (regSup.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSup);\n      }\n      if (regSub.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSub);\n      }\n      legendEventArgs = {\n        fill: legendOption.fill,\n        text: legendOption.text,\n        shape: legendOption.shape,\n        markerShape: legendOption.markerShape,\n        name: legendRender,\n        cancel: false\n      };\n      this.chart.trigger(legendRender, legendEventArgs);\n      legendOption.text = legendEventArgs.text;\n      legendOption.render = !legendEventArgs.cancel;\n      legendOption.shape = legendEventArgs.shape;\n      legendOption.fill = legendEventArgs.fill;\n      legendOption.markerShape = legendEventArgs.markerShape;\n      legendOption.textSize = measureText(legendOption.text, legend.textStyle, this.chart.themeStyle.legendLabelFont);\n      if (legendOption.render) {\n        render = true;\n        legendWidth = shapePadding + shapeWidth + legendOption.textSize.width + (!this.isVertical ? i === 0 ? padding : this.itemPadding : padding);\n        rowWidth = rowWidth + legendWidth;\n        if (!legend.enablePages && !this.isVertical) {\n          titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n          titlePlusArrowSpace += arrowWidth;\n        }\n        if (legendBound.width < padding + rowWidth + titlePlusArrowSpace || this.isVertical) {\n          maximumWidth = Math.max(maximumWidth, rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth));\n          if (rowCount === 0 && legendWidth !== rowWidth) {\n            rowCount = 1;\n          }\n          rowWidth = this.isVertical ? 0 : legendWidth;\n          rowCount++;\n          columnHeight = rowCount * (this.maxItemHeight + (this.isVertical ? this.itemPadding : padding)) + padding + titleSpace + verticalArrowSpace;\n        }\n      }\n    }\n    columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding + titleSpace);\n    this.isPaging = legendBound.height < columnHeight;\n    if (this.isPaging && !legend.enablePages) {\n      if (!this.isVertical) {\n        columnHeight = this.maxItemHeight + padding + padding + (titlePosition === 'Top' ? titleSpace : 0);\n      }\n    }\n    this.totalPages = rowCount;\n    if (!this.isPaging && !this.isVertical) {\n      rowWidth += this.isTitle && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.width + this.fivePixel : 0;\n    }\n    if (render) {\n      this.setBounds(Math.max(rowWidth + padding, maximumWidth), columnHeight, legend, legendBound);\n    } else {\n      this.setBounds(0, 0, legend, legendBound);\n    }\n  };\n  /**\r\n   * Retrieves the render point for the legend.\r\n   *\r\n   * @param {LegendOptions} legendOptions - The options for the legend.\r\n   * @param {ChartLocation} start - The starting point for rendering the legend.\r\n   * @param {number} textPadding - The padding around legend text.\r\n   * @param {LegendOptions} prevLegend - The options for the previous legend.\r\n   * @param {Rect} rect - The bounding for the legend.\r\n   * @param {number} count - The count of legends.\r\n   * @param {number} firstLegend - The index of the first legend.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  StockLegend.prototype.getRenderPoint = function (legendOptions, start, textPadding, prevLegend, rect, count, firstLegend) {\n    var previousBound = prevLegend.location.x + textPadding + prevLegend.textSize.width;\n    var padding = this.legend.padding;\n    if (previousBound + (legendOptions.textSize.width + textPadding - this.itemPadding) > rect.x + rect.width + this.legend.shapeWidth / 2 || this.isVertical) {\n      legendOptions.location.x = start.x;\n      legendOptions.location.y = count === firstLegend ? prevLegend.location.y : prevLegend.location.y + this.maxItemHeight + (this.isVertical ? this.itemPadding : padding);\n    } else {\n      legendOptions.location.x = count === firstLegend ? prevLegend.location.x : previousBound;\n      legendOptions.location.y = prevLegend.location.y;\n    }\n    var availwidth = this.legendBounds.width + this.legendBounds.x - (legendOptions.location.x + textPadding - this.itemPadding - this.legend.shapeWidth / 2);\n    legendOptions.text = textTrim(+availwidth.toFixed(4), legendOptions.text, this.legend.textStyle, this.chart.enableRtl, this.chart.themeStyle.legendLabelFont);\n  };\n  /**\r\n   * Handles the click event on the legend.\r\n   *\r\n   * @param {number} index - The index of the legend item.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  StockLegend.prototype.legendClick = function (index) {\n    var chart = this.chart;\n    var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\n    var targetSeries = chart.visibleSeries[seriesIndex];\n    var targetLegend = this.legendCollections[index];\n    var legendClickArgs = {\n      legendText: targetLegend.text,\n      legendShape: targetLegend.shape,\n      chart: chart,\n      series: targetSeries,\n      name: legendClick,\n      cancel: false\n    };\n    this.chart.trigger(legendClick, legendClickArgs);\n    targetSeries.legendShape = legendClickArgs.legendShape;\n    if (targetSeries.fill !== null) {\n      chart.visibleSeries[index].interior = targetSeries.fill;\n    }\n    if (chart.legendSettings.toggleVisibility) {\n      this.changeSeriesVisiblity(targetSeries, targetSeries.visible);\n      targetLegend.visible = targetSeries.category === 'TrendLine' ? chart.series[targetSeries.sourceIndex].trendlines[targetSeries.index].visible : targetSeries.visible;\n      this.refreshLegendToggle(chart);\n    }\n  };\n  StockLegend.prototype.refreshLegendToggle = function (chart) {\n    var bounds = chart.stockLegendModule.legendBounds;\n    chart.stockLegendModule.renderLegend(chart, chart.legendSettings, bounds);\n    chart.cartesianChart.cartesianChartRefresh(chart);\n  };\n  StockLegend.prototype.changeSeriesVisiblity = function (series, visibility) {\n    series.visible = !visibility;\n    if (this.SecondaryAxis(series.yAxis)) {\n      series.yAxis.internalVisibility = series.yAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n    if (this.SecondaryAxis(series.xAxis)) {\n      series.xAxis.internalVisibility = series.xAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n  };\n  StockLegend.prototype.SecondaryAxis = function (axis) {\n    return this.chart.axes.indexOf(axis) > -1;\n  };\n  /**\r\n   * To show the tooltip for the trimmed text in legend.\r\n   *\r\n   * @param {Event | PointerEvent} event - The click event.\r\n   * @returns {void}\r\n   */\n  StockLegend.prototype.click = function (event) {\n    var _this = this;\n    if (!this.chart.legendSettings.visible) {\n      return;\n    }\n    var pageY = this.chart.mouseY;\n    var pageX = this.chart.mouseX;\n    var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_', this.legendID + '_shape_'];\n    var targetId = event.target.id;\n    var seriesIndex;\n    for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n      var id = legendItemsId_1[_i];\n      if (targetId.indexOf(id) > -1) {\n        seriesIndex = parseInt(targetId.split(id)[1], 10);\n        this.legendClick(seriesIndex);\n        break;\n      }\n    }\n    if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    } else if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    }\n    this.legendRegions.filter(function (region) {\n      return withInBounds(pageX, pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(false, null, 1, 2) : 0), region.rect);\n    });\n  };\n  /**\r\n   * Get module name.\r\n   *\r\n   * @returns {string} - Returns the module name.\r\n   */\n  StockLegend.prototype.getModuleName = function () {\n    return 'StockLegend';\n  };\n  /**\r\n   * To destroy the Legend.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  StockLegend.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return StockLegend;\n}(BaseLegend);\nexport { StockLegend };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","getUnicodeText","textTrim","withInBounds","BaseLegend","LegendOptions","measureText","legendClick","legendRender","regSub","regSup","StockChartBorder","StockChartFont","StockMargin","Browser","Property","Complex","ChildProperty","ContainerPadding","Location","StockChartLegendSettings","_super","apply","x","y","fontFamily","size","fontStyle","fontWeight","color","left","right","top","bottom","StockLegend","chart","_this","call","library","addEventListener","isDestroyed","on","click","touchEndEvent","mouseEnd","touchMoveEvent","mouseMove","removeEventListener","off","e","legendSettings","visible","isTouch","move","getLegendOptions","visibleSeriesCollection","legendCollections","seriesType","fillColor","legend","mode","_i","visibleSeriesCollection_1","series","category","type","pointColorMapping","points","interior","push","name","legendShape","sourceIndex","trendlines","index","legendImageUrl","marker","shape","getLegendBounds","availableSize","legendBound","calculateLegendTitle","padding","isTitle","title","titlePosition","extraWidth","extraHeight","legendOption","arrowHeight","arrowWidth","verticalArrowSpace","isVertical","enablePages","titleSpace","fivePixel","legendTitleSize","height","width","shapePadding","shapeWidth","maximumWidth","rowWidth","legendWidth","columnHeight","rowCount","titlePlusArrowSpace","legendEventArgs","maxItemHeight","Math","max","textStyle","themeStyle","legendLabelFont","shapeHeight","render","test","text","fill","markerShape","cancel","trigger","textSize","itemPadding","isPaging","totalPages","setBounds","getRenderPoint","legendOptions","start","textPadding","prevLegend","rect","count","firstLegend","previousBound","location","availwidth","legendBounds","toFixed","enableRtl","seriesIndex","targetSeries","visibleSeries","targetLegend","legendClickArgs","legendText","toggleVisibility","changeSeriesVisiblity","refreshLegendToggle","bounds","stockLegendModule","renderLegend","cartesianChart","cartesianChartRefresh","visibility","SecondaryAxis","yAxis","internalVisibility","some","value","xAxis","axis","axes","indexOf","event","pageY","mouseY","pageX","mouseX","legendItemsId","legendID","targetId","id","legendItemsId_1","parseInt","split","changePage","legendRegions","filter","region","currentPageNumber","translatePage","getModuleName","destroy"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-charts/src/stock-chart/legend/legend.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { getUnicodeText, textTrim, withInBounds } from '../../common/utils/helper';\r\nimport { BaseLegend, LegendOptions } from '../../common/legend/legend';\r\nimport { measureText } from '@syncfusion/ej2-svg-base';\r\nimport { legendClick, legendRender, regSub, regSup } from '../../common/model/constants';\r\nimport { StockChartBorder, StockChartFont, StockMargin } from '../model/base';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\r\nimport { ContainerPadding, Location } from '../../common/model/base';\r\n/**\r\n * Configures the legends in charts.\r\n */\r\nvar StockChartLegendSettings = /** @class */ (function (_super) {\r\n    __extends(StockChartLegendSettings, _super);\r\n    function StockChartLegendSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property(false)\r\n    ], StockChartLegendSettings.prototype, \"visible\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], StockChartLegendSettings.prototype, \"height\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], StockChartLegendSettings.prototype, \"width\", void 0);\r\n    __decorate([\r\n        Complex({ x: 0, y: 0 }, Location)\r\n    ], StockChartLegendSettings.prototype, \"location\", void 0);\r\n    __decorate([\r\n        Property('Auto')\r\n    ], StockChartLegendSettings.prototype, \"position\", void 0);\r\n    __decorate([\r\n        Property('Series')\r\n    ], StockChartLegendSettings.prototype, \"mode\", void 0);\r\n    __decorate([\r\n        Property(8)\r\n    ], StockChartLegendSettings.prototype, \"padding\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], StockChartLegendSettings.prototype, \"itemPadding\", void 0);\r\n    __decorate([\r\n        Property('Center')\r\n    ], StockChartLegendSettings.prototype, \"alignment\", void 0);\r\n    __decorate([\r\n        Complex({ fontFamily: null, size: null, fontStyle: null, fontWeight: null, color: null }, StockChartFont)\r\n    ], StockChartLegendSettings.prototype, \"textStyle\", void 0);\r\n    __decorate([\r\n        Property(10)\r\n    ], StockChartLegendSettings.prototype, \"shapeHeight\", void 0);\r\n    __decorate([\r\n        Property(10)\r\n    ], StockChartLegendSettings.prototype, \"shapeWidth\", void 0);\r\n    __decorate([\r\n        Complex({}, StockChartBorder)\r\n    ], StockChartLegendSettings.prototype, \"border\", void 0);\r\n    __decorate([\r\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, StockMargin)\r\n    ], StockChartLegendSettings.prototype, \"margin\", void 0);\r\n    __decorate([\r\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, ContainerPadding)\r\n    ], StockChartLegendSettings.prototype, \"containerPadding\", void 0);\r\n    __decorate([\r\n        Property(8)\r\n    ], StockChartLegendSettings.prototype, \"shapePadding\", void 0);\r\n    __decorate([\r\n        Property('transparent')\r\n    ], StockChartLegendSettings.prototype, \"background\", void 0);\r\n    __decorate([\r\n        Property(1)\r\n    ], StockChartLegendSettings.prototype, \"opacity\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], StockChartLegendSettings.prototype, \"toggleVisibility\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], StockChartLegendSettings.prototype, \"description\", void 0);\r\n    __decorate([\r\n        Property(3)\r\n    ], StockChartLegendSettings.prototype, \"tabIndex\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], StockChartLegendSettings.prototype, \"title\", void 0);\r\n    __decorate([\r\n        Complex({ fontFamily: null, size: null, fontStyle: null, fontWeight: null, color: null }, StockChartFont)\r\n    ], StockChartLegendSettings.prototype, \"titleStyle\", void 0);\r\n    __decorate([\r\n        Property('Top')\r\n    ], StockChartLegendSettings.prototype, \"titlePosition\", void 0);\r\n    __decorate([\r\n        Property(100)\r\n    ], StockChartLegendSettings.prototype, \"maximumTitleWidth\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], StockChartLegendSettings.prototype, \"enablePages\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], StockChartLegendSettings.prototype, \"isInversed\", void 0);\r\n    return StockChartLegendSettings;\r\n}(ChildProperty));\r\nexport { StockChartLegendSettings };\r\n/**\r\n * `Legend` module is used to render legend for the stockchart.\r\n */\r\nvar StockLegend = /** @class */ (function (_super) {\r\n    __extends(StockLegend, _super);\r\n    function StockLegend(chart) {\r\n        var _this = _super.call(this, chart) || this;\r\n        _this.library = _this;\r\n        _this.addEventListener();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Binding events for Stocklegend module.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    StockLegend.prototype.addEventListener = function () {\r\n        if (this.chart.isDestroyed) {\r\n            return;\r\n        }\r\n        this.chart.on('click', this.click, this);\r\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\r\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\r\n    };\r\n    /**\r\n     * UnBinding events for Stocklegend module.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    StockLegend.prototype.removeEventListener = function () {\r\n        if (this.chart.isDestroyed) {\r\n            return;\r\n        }\r\n        this.chart.off('click', this.click);\r\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\r\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\r\n    };\r\n    /**\r\n     * To handle mouse move for Stocklegend module.\r\n     *\r\n     * @param {MouseEvent} e - The mouse move event.\r\n     * @returns {void}\r\n     */\r\n    StockLegend.prototype.mouseMove = function (e) {\r\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\r\n            this.move(e);\r\n        }\r\n    };\r\n    /**\r\n     * To handle mouse end for Stocklegend module.\r\n     *\r\n     * @param {MouseEvent} e - The mouse move event.\r\n     * @returns {void}\r\n     */\r\n    StockLegend.prototype.mouseEnd = function (e) {\r\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\r\n            this.move(e);\r\n        }\r\n    };\r\n    StockLegend.prototype.getLegendOptions = function (visibleSeriesCollection) {\r\n        this.legendCollections = [];\r\n        var seriesType;\r\n        var fillColor;\r\n        if (visibleSeriesCollection.length > 1) {\r\n            this.legend.mode = 'Series';\r\n        }\r\n        for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\r\n            var series = visibleSeriesCollection_1[_i];\r\n            if (this.legend.mode === 'Series') {\r\n                if (series.category !== 'Indicator') {\r\n                    seriesType = series.type;\r\n                    fillColor = (series.pointColorMapping && series.points.length > 0) ?\r\n                        (series.points[0].interior ? series.points[0].interior : series.interior) : series.interior;\r\n                    this.legendCollections.push(new LegendOptions(series.name, fillColor, series.legendShape, (series.category === 'TrendLine' ?\r\n                        this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible), seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the bounds of the legend.\r\n     *\r\n     * @param {Size} availableSize - The available size for the legend.\r\n     * @param {Rect} legendBound - The bounds of the legend element.\r\n     * @param {StockChartLegendSettingsModel} legend - The settings for the legend.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    StockLegend.prototype.getLegendBounds = function (availableSize, legendBound, legend) {\r\n        this.calculateLegendTitle(legend, legendBound);\r\n        var padding = legend.padding;\r\n        this.isTitle = legend.title ? true : false;\r\n        var titlePosition = legend.titlePosition;\r\n        var extraWidth = 0;\r\n        var extraHeight = 0;\r\n        var legendOption;\r\n        var arrowHeight = this.arrowHeight;\r\n        var arrowWidth = this.arrowWidth;\r\n        var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\r\n        var titleSpace = this.isTitle && titlePosition === 'Top' ? this.fivePixel + this.legendTitleSize.height : 0;\r\n        titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.height : titleSpace;\r\n        if (!this.isVertical) {\r\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\r\n        }\r\n        else {\r\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\r\n        }\r\n        legendBound.height += (extraHeight);\r\n        legendBound.width += extraWidth;\r\n        var shapePadding = legend.shapePadding;\r\n        var shapeWidth = legend.shapeWidth;\r\n        var maximumWidth = 0;\r\n        var rowWidth = 0;\r\n        var legendWidth = 0;\r\n        var columnHeight = 0;\r\n        var rowCount = 0;\r\n        var titlePlusArrowSpace = 0;\r\n        var legendEventArgs;\r\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle, this.chart.themeStyle.legendLabelFont).height, legend.shapeHeight);\r\n        var render = false;\r\n        for (var i = 0; i < this.legendCollections.length; i++) {\r\n            legendOption = this.legendCollections[i];\r\n            if (regSup.test(legendOption.text)) {\r\n                legendOption.text = getUnicodeText(legendOption.text, regSup);\r\n            }\r\n            if (regSub.test(legendOption.text)) {\r\n                legendOption.text = getUnicodeText(legendOption.text, regSub);\r\n            }\r\n            legendEventArgs = {\r\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\r\n                markerShape: legendOption.markerShape, name: legendRender, cancel: false\r\n            };\r\n            this.chart.trigger(legendRender, legendEventArgs);\r\n            legendOption.text = legendEventArgs.text;\r\n            legendOption.render = !legendEventArgs.cancel;\r\n            legendOption.shape = legendEventArgs.shape;\r\n            legendOption.fill = legendEventArgs.fill;\r\n            legendOption.markerShape = legendEventArgs.markerShape;\r\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle, this.chart.themeStyle.legendLabelFont);\r\n            if (legendOption.render) {\r\n                render = true;\r\n                legendWidth = shapePadding + shapeWidth + legendOption.textSize.width + (!this.isVertical ? (i === 0) ? padding :\r\n                    this.itemPadding : padding);\r\n                rowWidth = rowWidth + legendWidth;\r\n                if (!legend.enablePages && !this.isVertical) {\r\n                    titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\r\n                    titlePlusArrowSpace += arrowWidth;\r\n                }\r\n                if (legendBound.width < (padding + rowWidth + titlePlusArrowSpace) || this.isVertical) {\r\n                    maximumWidth = Math.max(maximumWidth, (rowWidth + padding + titlePlusArrowSpace -\r\n                        (this.isVertical ? 0 : legendWidth)));\r\n                    if (rowCount === 0 && (legendWidth !== rowWidth)) {\r\n                        rowCount = 1;\r\n                    }\r\n                    rowWidth = this.isVertical ? 0 : legendWidth;\r\n                    rowCount++;\r\n                    columnHeight = (rowCount * (this.maxItemHeight + (this.isVertical ? this.itemPadding : padding))) +\r\n                        padding + titleSpace + verticalArrowSpace;\r\n                }\r\n            }\r\n        }\r\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding + titleSpace);\r\n        this.isPaging = legendBound.height < columnHeight;\r\n        if (this.isPaging && !legend.enablePages) {\r\n            if (!this.isVertical) {\r\n                columnHeight = (this.maxItemHeight + padding) + padding + (titlePosition === 'Top' ? titleSpace : 0);\r\n            }\r\n        }\r\n        this.totalPages = rowCount;\r\n        if (!this.isPaging && !this.isVertical) {\r\n            rowWidth += this.isTitle && titlePosition !== 'Top' ? (this.fivePixel + this.legendTitleSize.width + this.fivePixel) : 0;\r\n        }\r\n        if (render) {\r\n            this.setBounds(Math.max((rowWidth + padding), maximumWidth), columnHeight, legend, legendBound);\r\n        }\r\n        else {\r\n            this.setBounds(0, 0, legend, legendBound);\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the render point for the legend.\r\n     *\r\n     * @param {LegendOptions} legendOptions - The options for the legend.\r\n     * @param {ChartLocation} start - The starting point for rendering the legend.\r\n     * @param {number} textPadding - The padding around legend text.\r\n     * @param {LegendOptions} prevLegend - The options for the previous legend.\r\n     * @param {Rect} rect - The bounding for the legend.\r\n     * @param {number} count - The count of legends.\r\n     * @param {number} firstLegend - The index of the first legend.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    StockLegend.prototype.getRenderPoint = function (legendOptions, start, textPadding, prevLegend, rect, count, firstLegend) {\r\n        var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\r\n        var padding = this.legend.padding;\r\n        if ((previousBound + (legendOptions.textSize.width + textPadding - this.itemPadding)) >\r\n            (rect.x + rect.width + this.legend.shapeWidth / 2) ||\r\n            this.isVertical) {\r\n            legendOptions.location.x = start.x;\r\n            legendOptions.location.y = (count === firstLegend) ? prevLegend.location.y :\r\n                prevLegend.location.y + this.maxItemHeight + (this.isVertical ? this.itemPadding : padding);\r\n        }\r\n        else {\r\n            legendOptions.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\r\n            legendOptions.location.y = prevLegend.location.y;\r\n        }\r\n        var availwidth = (this.legendBounds.width + this.legendBounds.x) - (legendOptions.location.x +\r\n            textPadding - this.itemPadding - this.legend.shapeWidth / 2);\r\n        legendOptions.text = textTrim(+availwidth.toFixed(4), legendOptions.text, this.legend.textStyle, this.chart.enableRtl, this.chart.themeStyle.legendLabelFont);\r\n    };\r\n    /**\r\n     * Handles the click event on the legend.\r\n     *\r\n     * @param {number} index - The index of the legend item.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    StockLegend.prototype.legendClick = function (index) {\r\n        var chart = this.chart;\r\n        var seriesIndex = chart.legendSettings.mode === 'Series' ? index : 0;\r\n        var targetSeries = chart.visibleSeries[seriesIndex];\r\n        var targetLegend = this.legendCollections[index];\r\n        var legendClickArgs = {\r\n            legendText: targetLegend.text, legendShape: targetLegend.shape,\r\n            chart: chart, series: targetSeries, name: legendClick, cancel: false\r\n        };\r\n        this.chart.trigger(legendClick, legendClickArgs);\r\n        targetSeries.legendShape = legendClickArgs.legendShape;\r\n        if (targetSeries.fill !== null) {\r\n            chart.visibleSeries[index].interior = targetSeries.fill;\r\n        }\r\n        if (chart.legendSettings.toggleVisibility) {\r\n            this.changeSeriesVisiblity(targetSeries, targetSeries.visible);\r\n            targetLegend.visible = targetSeries.category === 'TrendLine' ? chart.series[targetSeries.sourceIndex].trendlines[targetSeries.index].visible :\r\n                (targetSeries.visible);\r\n            this.refreshLegendToggle(chart);\r\n        }\r\n    };\r\n    StockLegend.prototype.refreshLegendToggle = function (chart) {\r\n        var bounds = chart.stockLegendModule.legendBounds;\r\n        chart.stockLegendModule.renderLegend(chart, chart.legendSettings, bounds);\r\n        chart.cartesianChart.cartesianChartRefresh(chart);\r\n    };\r\n    StockLegend.prototype.changeSeriesVisiblity = function (series, visibility) {\r\n        series.visible = !visibility;\r\n        if (this.SecondaryAxis(series.yAxis)) {\r\n            series.yAxis.internalVisibility = series.yAxis.series.some(function (value) { return (value.visible); });\r\n        }\r\n        if (this.SecondaryAxis(series.xAxis)) {\r\n            series.xAxis.internalVisibility = series.xAxis.series.some(function (value) { return (value.visible); });\r\n        }\r\n    };\r\n    StockLegend.prototype.SecondaryAxis = function (axis) {\r\n        return (this.chart.axes.indexOf(axis) > -1);\r\n    };\r\n    /**\r\n     * To show the tooltip for the trimmed text in legend.\r\n     *\r\n     * @param {Event | PointerEvent} event - The click event.\r\n     * @returns {void}\r\n     */\r\n    StockLegend.prototype.click = function (event) {\r\n        var _this = this;\r\n        if (!this.chart.legendSettings.visible) {\r\n            return;\r\n        }\r\n        var pageY = this.chart.mouseY;\r\n        var pageX = this.chart.mouseX;\r\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\r\n            this.legendID + '_shape_'];\r\n        var targetId = event.target.id;\r\n        var seriesIndex;\r\n        for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\r\n            var id = legendItemsId_1[_i];\r\n            if (targetId.indexOf(id) > -1) {\r\n                seriesIndex = parseInt(targetId.split(id)[1], 10);\r\n                this.legendClick(seriesIndex);\r\n                break;\r\n            }\r\n        }\r\n        if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\r\n            this.changePage(event, false);\r\n        }\r\n        else if (targetId.indexOf(this.legendID + '_pageup') > -1) {\r\n            this.changePage(event, true);\r\n        }\r\n        this.legendRegions.filter(function (region) {\r\n            return (withInBounds(pageX, (pageY + (_this.isPaging ? (_this.currentPageNumber - 1) *\r\n                _this.translatePage(false, null, 1, 2) : 0)), region.rect));\r\n        });\r\n    };\r\n    /**\r\n     * Get module name.\r\n     *\r\n     * @returns {string} - Returns the module name.\r\n     */\r\n    StockLegend.prototype.getModuleName = function () {\r\n        return 'StockLegend';\r\n    };\r\n    /**\r\n     * To destroy the Legend.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    StockLegend.prototype.destroy = function () {\r\n        this.removeEventListener();\r\n    };\r\n    return StockLegend;\r\n}(BaseLegend));\r\nexport { StockLegend };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}