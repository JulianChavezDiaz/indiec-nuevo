{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { ChartLocation, RectOption, isCollide, isOverlap, rotateTextSize } from '../../common/utils/helper';\nimport { markerAnimate, appendChildElement, getVisiblePoints } from '../../common/utils/helper';\nimport { getLabelText, convertHexToColor, calculateRect, textElement, colorNameToHex } from '../../common/utils/helper';\nimport { measureText, TextOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { textRender } from '../../common/model/constants';\nimport { createTemplate, getFontStyle, getElement, measureElementRect, templateAnimate, withIn, withInBounds } from '../../common/utils/helper';\nimport { createElement, getValue, extend } from '@syncfusion/ej2-base';\nimport { getPoint, isRotatedRectIntersect } from '../../common/utils/helper';\n/**\r\n * `DataLabel` module is used to render data label for the data point.\r\n */\nvar DataLabel = /** @class */function () {\n  /**\r\n   * Constructor for the data label module.\r\n   *\r\n   * @private\r\n   */\n  function DataLabel(chart) {\n    this.errorHeight = 0;\n    this.chart = chart;\n  }\n  DataLabel.prototype.initPrivateVariables = function (series, marker) {\n    var transform = '';\n    var clipPath = '';\n    var render = series.chart.renderer;\n    var index = series.index === undefined ? series.category : series.index;\n    if (series.chart.chartAreaType === 'Cartesian') {\n      transform = 'translate(' + series.clipRect.x + ',' + series.clipRect.y + ')';\n      clipPath = 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')';\n    }\n    if (marker.dataLabel.visible && !this.chart.enableCanvas) {\n      series.shapeElement = render.createGroup({\n        'id': this.chart.element.id + 'ShapeGroup' + index,\n        'transform': transform,\n        'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')'\n      });\n      series.textElement = render.createGroup({\n        'id': this.chart.element.id + 'TextGroup' + index,\n        'transform': transform,\n        'clip-path': clipPath\n      });\n      series.textElement.setAttribute('aria-hidden', 'true');\n    }\n    this.markerHeight = series.type === 'Scatter' || marker.visible ? marker.height / 2 : 0;\n    this.commonId = this.chart.element.id + '_Series_' + index + '_Point_';\n    this.calculateErrorHeight(series, series.marker.dataLabel.position);\n    this.chartBackground = this.chart.chartArea.background === 'transparent' ? this.chart.background || this.chart.themeStyle.background : this.chart.chartArea.background;\n  };\n  DataLabel.prototype.calculateErrorHeight = function (series, position) {\n    if (!series.errorBar.visible) {\n      return null;\n    } else if (series.errorBar.visible && this.chart.chartAreaType !== 'PolarRadar') {\n      var direction = series.errorBar.direction;\n      var positiveHeight = this.chart.errorBarModule.positiveHeight;\n      var negativeHeight = this.chart.errorBarModule.negativeHeight;\n      if (this.isRectSeries(series)) {\n        if (position === 'Top' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Minus') {\n            this.errorHeight = negativeHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n        if (position === 'Outer' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Plus') {\n            this.errorHeight = positiveHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n      } else {\n        if (position === 'Top' || position === 'Outer' || position === 'Auto') {\n          if ((direction === 'Both' || direction === 'Plus') && !series.chart.isTransposed) {\n            this.errorHeight = positiveHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n        if (position === 'Bottom' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Minus') {\n            this.errorHeight = negativeHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n      }\n    } else {\n      this.errorHeight = 0;\n    }\n  };\n  DataLabel.prototype.isRectSeries = function (series) {\n    return series.isRectSeries || series.type === 'RangeArea' || series.type === 'SplineRangeArea' || series.type === 'RangeStepArea';\n  };\n  /**\r\n   * Render the data label for series.\r\n   *\r\n   * @param {Series} series - The series to render.\r\n   * @param {Chart} chart - The parent chart.\r\n   * @param {DataLabelSettingsModel} dataLabel - The settings for data labels.\r\n   * @returns {void}\r\n   */\n  DataLabel.prototype.render = function (series, chart, dataLabel) {\n    // initialize the private variable\n    this.initPrivateVariables(series, series.marker);\n    this.inverted = chart.requireInvertedAxis;\n    this.yAxisInversed = series.yAxis.isAxisInverse;\n    var templateId = chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections';\n    var element = createElement('div', {\n      id: templateId\n    });\n    var visiblePoints = getVisiblePoints(series);\n    // Data label point iteration started\n    if (series.visible) {\n      for (var i = 0; i < visiblePoints.length; i++) {\n        this.renderDataLabel(series, visiblePoints[i], element, dataLabel);\n      }\n    }\n    if (element.childElementCount) {\n      if (!chart.enableCanvas) {\n        appendChildElement(chart.enableCanvas, getElement(chart.element.id + '_Secondary_Element'), element, chart.redraw, false, 'x', 'y', null, '', false, false, null, chart.duration);\n      } else {\n        getElement(chart.element.id + '_Secondary_Element').appendChild(element);\n      }\n    }\n  };\n  DataLabel.prototype.renderDataLabel = function (series, point, element, dataLabel) {\n    if (!dataLabel.showZero && (point.y === 0 || point.y === 0 && series.emptyPointSettings.mode === 'Zero')) {\n      return null;\n    }\n    this.margin = dataLabel.margin;\n    var labelText = [];\n    var labelLength;\n    var xPos;\n    var yPos;\n    var xValue;\n    var yValue;\n    var degree;\n    var isRender = true;\n    var rectCenterX;\n    var rectCenterY;\n    var labelLocation = {\n      x: 0,\n      y: 0\n    };\n    var textSize;\n    var clip = series.clipRect;\n    var shapeRect;\n    var isDataLabelOverlap = false;\n    var dataLabelElement = [];\n    dataLabel.angle = dataLabel.labelIntersectAction === 'Rotate90' ? 90 : dataLabel.angle;\n    dataLabel.enableRotation = dataLabel.labelIntersectAction === 'Rotate90' ? true : dataLabel.enableRotation;\n    var angle = degree = dataLabel.angle;\n    var border = {\n      width: dataLabel.border.width,\n      color: dataLabel.border.color\n    };\n    var argsFont = extend({}, getValue('properties', dataLabel.font), null, true);\n    if (point.symbolLocations.length && point.symbolLocations[0] || series.type === 'BoxAndWhisker' && point.regions.length) {\n      labelText = point.text !== null ? getLabelText(point, series, this.chart) : [];\n      labelLength = labelText.length;\n      for (var i = 0; i < labelLength; i++) {\n        var argsData = {\n          cancel: false,\n          name: textRender,\n          series: series,\n          point: point,\n          text: labelText[i],\n          border: border,\n          color: dataLabel.fill,\n          template: dataLabel.template,\n          font: argsFont,\n          location: labelLocation,\n          textSize: measureText(labelText[i], dataLabel.font, this.chart.themeStyle.datalabelFont)\n        };\n        this.chart.trigger(textRender, argsData);\n        if (!argsData.cancel) {\n          this.fontBackground = argsData.color;\n          this.isDataLabelShape(argsData);\n          this.markerHeight = series.type === 'Bubble' ? point.regions[0].height / 2 : this.markerHeight;\n          if (argsData.template !== null) {\n            this.createDataLabelTemplate(element, series, dataLabel, point, argsData, i, this.chart.redraw);\n          } else {\n            if (dataLabel.enableRotation) {\n              textSize = rotateTextSize(dataLabel.font, argsData.text, dataLabel.angle, this.chart, this.chart.themeStyle.datalabelFont);\n            } else {\n              textSize = measureText(argsData.text, dataLabel.font, this.chart.themeStyle.datalabelFont);\n            }\n            var rect = this.calculateTextPosition(point, series, textSize, dataLabel, i);\n            // To check whether the polar radar chart datalabel intersects the axis label or not\n            if (this.chart.chartAreaType === 'PolarRadar') {\n              for (var _i = 0, _a = this.chart.chartAxisLayoutPanel.visibleAxisLabelRect; _i < _a.length; _i++) {\n                var rectRegion = _a[_i];\n                if (isOverlap(new Rect(rect.x, rect.y, rect.width, rect.height), rectRegion)) {\n                  isRender = false;\n                  break;\n                }\n              }\n            }\n            var actualRect = new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height);\n            //let notOverlapping: boolean;\n            if (dataLabel.enableRotation) {\n              var rectCoordinates = this.getRectanglePoints(rect);\n              rectCenterX = rect.x + rect.width / 2;\n              rectCenterY = rect.y + rect.height / 2;\n              isDataLabelOverlap = dataLabel.labelIntersectAction === 'Rotate90' || angle === -90 ? false : this.isDataLabelOverlapWithChartBound(rectCoordinates, this.chart, clip);\n              if (!isDataLabelOverlap) {\n                this.chart.rotatedDataLabelCollections.push(rectCoordinates);\n                var currentPointIndex = this.chart.rotatedDataLabelCollections.length - 1;\n                for (var index = currentPointIndex; index >= 0; index--) {\n                  if (this.chart.rotatedDataLabelCollections[currentPointIndex] && this.chart.rotatedDataLabelCollections[index - 1] && isRotatedRectIntersect(this.chart.rotatedDataLabelCollections[currentPointIndex], this.chart.rotatedDataLabelCollections[index - 1])) {\n                    isDataLabelOverlap = true;\n                    this.chart.rotatedDataLabelCollections[currentPointIndex] = null;\n                    break;\n                  }\n                }\n              }\n            } else {\n              isDataLabelOverlap = isCollide(rect, this.chart.dataLabelCollections, clip);\n            }\n            if ((!isDataLabelOverlap || dataLabel.labelIntersectAction === 'None') && isRender) {\n              this.chart.dataLabelCollections.push(actualRect);\n              if (this.isShape) {\n                shapeRect = this.chart.renderer.drawRectangle(new RectOption(this.commonId + point.index + '_TextShape_' + i, argsData.color, argsData.border, dataLabel.opacity, rect, dataLabel.rx, dataLabel.ry, '', dataLabel.border.dashArray), new Int32Array([clip.x, clip.y]));\n                if (series.shapeElement) {\n                  series.shapeElement.appendChild(shapeRect);\n                }\n              }\n              // Checking the font color\n              var backgroundColor = this.fontBackground === 'transparent' ? this.chart.theme.indexOf('Dark') > -1 || this.chart.theme.indexOf('HighContrast') > -1 ? 'black' : 'white' : this.fontBackground;\n              var rgbValue = convertHexToColor(colorNameToHex(backgroundColor));\n              var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n              xPos = rect.x + this.margin.left + textSize.width / 2 + labelLocation.x;\n              yPos = dataLabel.enableRotation && this.chart.chartAreaType !== 'PolarRadar' ? rect.y + this.margin.top + textSize.height / 2 + textSize.width / 4 + (dataLabel.position === 'Auto' ? point.regions[0].width / 10 : 0) + labelLocation.y : rect.y + this.margin.top + textSize.height * 3 / 4 + labelLocation.y;\n              labelLocation = {\n                x: 0,\n                y: 0\n              };\n              if (angle !== 0 && dataLabel.enableRotation) {\n                // xValue = xPos - (dataLabel.margin.left) / 2 + (dataLabel.margin.right / 2);\n                xValue = rectCenterX;\n                //yValue = yPos - (dataLabel.margin.top) / 2 - (textSize.height / dataLabel.margin.top) +\n                // (dataLabel.margin.bottom) / 2;\n                yValue = rectCenterY;\n                degree = angle > 360 ? angle - 360 : angle < -360 ? angle + 360 : angle;\n              } else {\n                degree = 0;\n                xValue = rect.x;\n                yValue = rect.y;\n                xPos -= this.chart.chartAreaType === 'Cartesian' && xPos + textSize.width / 2 > clip.width ? xPos + textSize.width / 2 - clip.width : 0;\n                yPos -= yPos + textSize.height > clip.y + clip.height && !(series.type.indexOf('Bar') > -1) ? yPos + textSize.height - (clip.y + clip.height) : 0;\n              }\n              var textAnchor = dataLabel.labelIntersectAction === 'Rotate90' ? dataLabel.position === 'Top' ? 'start' : dataLabel.position === 'Middle' ? 'middle' : 'end' : angle === -90 && dataLabel.enableRotation ? dataLabel.position === 'Top' ? 'end' : dataLabel.position === 'Middle' ? 'middle' : 'start' : 'middle';\n              dataLabelElement.push(textElement(this.chart.renderer, new TextOption(this.commonId + (series.removedPointIndex !== null && series.removedPointIndex <= point.index ? point.index + 1 : point.index) + '_Text_' + i, xPos, yPos, textAnchor, argsData.text, 'rotate(' + degree + ',' + xValue + ',' + yValue + ')', 'auto', degree), argsData.font, argsData.font.color || (contrast >= 128 || series.type === 'Hilo' || series.type === 'HiloOpenClose' ? 'black' : 'white'), series.textElement, false, this.chart.redraw, true, false, series.chart.duration, series.clipRect, null, null, this.chart.enableCanvas, null, this.chart.themeStyle.datalabelFont, new ChartLocation(xValue, yValue)));\n              if (series.removedPointIndex !== null && series.removedPointIndex <= point.index) {\n                series.textElement.lastChild.id = this.commonId + point.index + '_Text_' + i;\n              }\n            }\n          }\n        }\n      }\n    }\n    return dataLabelElement;\n  };\n  /**\r\n   * Retrieves the points of a rectangle.\r\n   *\r\n   * @param {Rect} rect - The rectangle whose points are to be retrieved.\r\n   * @returns {ChartLocation[]} - The points of the rectangle.\r\n   */\n  DataLabel.prototype.getRectanglePoints = function (rect) {\n    var loc1 = new ChartLocation(rect.x, rect.y);\n    var loc2 = new ChartLocation(rect.x + rect.width, rect.y);\n    var loc3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n    var loc4 = new ChartLocation(rect.x, rect.y + rect.height);\n    return [loc1, loc2, loc3, loc4];\n  };\n  DataLabel.prototype.isDataLabelOverlapWithChartBound = function (rectCoordinates, chart, clip) {\n    for (var index = 0; index < rectCoordinates.length; index++) {\n      if (!withInBounds(rectCoordinates[index].x + clip.x, rectCoordinates[index].y + clip.y, chart.initialClipRect)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\r\n   * Creates a template for data labels.\r\n   *\r\n   * @param {HTMLElement} parentElement - The parent element to which the template will be appended.\r\n   * @param {Series} series - The series associated with the data label.\r\n   * @param {DataLabelSettingsModel} dataLabel - The settings for the data label.\r\n   * @param {Points} point - The data point to which the data label is associated.\r\n   * @param {ITextRenderEventArgs} data - The event data associated with rendering the data label.\r\n   * @param {number} labelIndex - The index of the data label.\r\n   * @param {boolean} redraw - Specifies whether to redraw the template.\r\n   * @returns {void}\r\n   */\n  DataLabel.prototype.createDataLabelTemplate = function (parentElement, series, dataLabel, point, data, labelIndex, redraw) {\n    this.margin = {\n      left: 0,\n      right: 0,\n      bottom: 0,\n      top: 0\n    };\n    var clip = series.clipRect;\n    var childElement = createTemplate(createElement('div', {\n      id: this.chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabel_' + point.index + (labelIndex ? '_' + labelIndex : ''),\n      styles: 'position: absolute;background-color:' + data.color + ';' + getFontStyle(dataLabel.font, this.chart.themeStyle.datalabelFont) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n    }), point.index, data.template, this.chart, point, series, this.chart.element.id + '_DataLabel', labelIndex);\n    this.calculateTemplateLabelSize(parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw);\n  };\n  DataLabel.prototype.calculateTemplateLabelSize = function (parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw, isReactCallback) {\n    var elementRect = measureElementRect(childElement, redraw, isReactCallback);\n    var rect = this.calculateTextPosition(point, series, {\n      width: elementRect.width,\n      height: elementRect.height\n    }, dataLabel, labelIndex);\n    var clipWidth = 0;\n    var clipHeight = 0;\n    var isOverlap = false;\n    if (isReactCallback) {\n      isOverlap = elementRect.width === 0 || elementRect.height === 0; // To check the data label already overlap before react callback call\n      // clipWidth = ((series.clipRect.x + rect.x) + elementRect.width) > parentElement.clientWidth ?\n      //     (parentElement.clientWidth - (series.clipRect.x + rect.x)) : 0;\n      // clipHeight = (series.points.length - 1 === point.index) ? elementRect.height / 2 : 0;\n    }\n    childElement.style.left = (this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x) + rect.x - clipWidth + 'px';\n    childElement.style.top = (this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y) + rect.y + clipHeight + 'px';\n    var backgroundColor = this.fontBackground === 'transparent' ? this.chart.theme.indexOf('Dark') > -1 ? 'black' : 'white' : this.fontBackground;\n    var rgbValue = convertHexToColor(colorNameToHex(backgroundColor));\n    var vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n    var hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n    childElement.style.color = dataLabel.font.color || (Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000) >= 128 ? 'black' : 'white');\n    if (childElement.childElementCount && !isOverlap && (!isCollide(rect, this.chart.dataLabelCollections, clip) || dataLabel.labelIntersectAction === 'None') && (series.seriesType !== 'XY' || point.yValue === undefined || withIn(point.yValue, series.yAxis.visibleRange) || series.type.indexOf('Stacking') > -1 || series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange)) && withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y && parseFloat(childElement.style.left) >= hAxis.rect.x && parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height && parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n      this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n      appendChildElement(this.chart.enableCanvas, parentElement, childElement, redraw, true, 'left', 'top');\n      if (series.animation.enable && this.chart.animateSeries && !this.chart.enableCanvas) {\n        this.doDataLabelAnimation(series, childElement);\n      } else if (this.chart.enableCanvas) {\n        parentElement.appendChild(childElement);\n      }\n    }\n  };\n  DataLabel.prototype.calculateTextPosition = function (point, series, textSize, dataLabel, labelIndex) {\n    var labelRegion = labelIndex > 1 ? series.type === 'Candle' ? point.regions[1] : point.regions[0] : point.regions[0];\n    if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n      labelRegion = labelIndex === 2 ? point.regions[1] : point.regions[2];\n    }\n    var location;\n    location = this.getLabelLocation(point, series, textSize, labelIndex);\n    var padding = 5;\n    var clipRect = series.clipRect;\n    // calculating alignment\n    if (!this.chart.requireInvertedAxis || !this.isRectSeries(series) || series.type === 'BoxAndWhisker') {\n      this.locationX = location.x;\n      var alignmentValue = textSize.height + this.borderWidth * 2 + this.markerHeight + this.margin.bottom + this.margin.top + padding;\n      location.x = dataLabel.position === 'Auto' ? location.x : this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, this.isRectSeries(series) ? point.yValue < 0 : false);\n      // calculating position\n      location.y = !this.isRectSeries(series) || series.type === 'BoxAndWhisker' ? this.calculatePathPosition(location.y, dataLabel.position, series, point, textSize, labelIndex) : this.calculateRectPosition(location.y, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n      if (this.isRectSeries(series) && this.chart.chartAreaType === 'PolarRadar') {\n        location = this.calculatePolarRectPosition(location, dataLabel.position, series, point, textSize, labelIndex, dataLabel.alignment, alignmentValue);\n      }\n    } else {\n      this.locationY = location.y;\n      var alignmentValue = textSize.width + this.borderWidth + this.margin.left + this.margin.right - padding;\n      location.x = dataLabel.position === 'Auto' ? location.x : this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, point.yValue < 0);\n      location.x = this.calculateRectPosition(location.x, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n    }\n    var rect = calculateRect(location, textSize, this.margin);\n    // Checking the condition whether data Label has been exist the clip rect\n    if (!(dataLabel.enableRotation === true && dataLabel.angle !== 0) && !(rect.y > clipRect.y + clipRect.height || rect.x > clipRect.x + clipRect.width || rect.x + rect.width < 0 || rect.y + rect.height < 0)) {\n      rect.x = rect.x < 0 ? padding : rect.x;\n      rect.y = rect.y < 0 && !(dataLabel.labelIntersectAction === 'None') ? padding : rect.y;\n      rect.x -= rect.x + rect.width > clipRect.x + clipRect.width ? rect.x + rect.width - (clipRect.x + clipRect.width) + padding : 0;\n      rect.y -= rect.y + rect.height > clipRect.y + clipRect.height ? rect.y + rect.height - (clipRect.y + clipRect.height) + padding : 0;\n      this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n    }\n    var dataLabelOutRegion;\n    if (this.inverted && series.isRectSeries && rect.x + rect.width > labelRegion.x + labelRegion.width) {\n      dataLabelOutRegion = true;\n    }\n    this.fontBackground = dataLabelOutRegion ? this.chartBackground : this.fontBackground;\n    return rect;\n  };\n  // Calculation label location for polar column draw types\n  DataLabel.prototype.calculatePolarRectPosition = function (location, position, series, point, size, labelIndex, alignment, alignmentValue) {\n    var padding = 5;\n    var columnRadius;\n    var chartWidth = this.chart.availableSize.width;\n    var alignmentSign = alignment === 'Center' ? 0 : alignment === 'Far' ? 1 : -1;\n    var angle = point.regionData.startAngle - 0.5 * Math.PI + (point.regionData.endAngle - point.regionData.startAngle) / 2;\n    if (labelIndex === 0) {\n      columnRadius = point.regionData.radius < point.regionData.innerRadius ? point.regionData.innerRadius : point.regionData.radius;\n    } else {\n      columnRadius = point.regionData.radius > point.regionData.innerRadius ? point.regionData.innerRadius : point.regionData.radius;\n    }\n    this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n    if (series.drawType.indexOf('Stacking') > -1) {\n      position = position === 'Outer' ? 'Top' : position;\n    } else if (series.drawType.indexOf('Range') > -1) {\n      position = position === 'Outer' || position === 'Top' ? position : 'Auto';\n    }\n    if (position === 'Outer') {\n      columnRadius = labelIndex === 0 ? columnRadius + 2 * padding + this.markerHeight : columnRadius - 2 * padding - this.markerHeight;\n    } else if (position === 'Middle') {\n      columnRadius = columnRadius / 2 + padding;\n      if (series.drawType === 'StackingColumn') {\n        columnRadius = point.regionData.innerRadius + (point.regionData.radius - point.regionData.innerRadius) / 2 + padding - size.height / 2;\n      }\n    } else if (position === 'Top') {\n      columnRadius = labelIndex === 0 ? columnRadius - 2 * padding - this.markerHeight : columnRadius + 2 * padding + this.markerHeight;\n    } else if (position === 'Bottom') {\n      columnRadius = 2 * padding;\n      columnRadius += series.drawType === 'StackingColumn' ? point.regionData.innerRadius + this.markerHeight : 0;\n    } else {\n      if (labelIndex === 0) {\n        columnRadius = columnRadius >= series.chart.radius ? columnRadius - padding : series.drawType === 'StackingColumn' ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n      } else {\n        columnRadius = columnRadius >= series.chart.radius ? columnRadius + padding : columnRadius - 2 * padding;\n      }\n    }\n    columnRadius += alignmentValue * alignmentSign;\n    location.x = series.clipRect.width / 2 + series.clipRect.x + columnRadius * Math.cos(angle);\n    // To change x location based on text anchor for column and stackingcolumn chart\n    if (series.drawType === 'StackingColumn') {\n      location.x = location.x < chartWidth / 2 ? location.x + size.width / 2 : location.x > chartWidth / 2 ? location.x - size.width / 2 : location.x;\n    } else if (series.drawType === 'Column') {\n      location.x = location.x < chartWidth / 2 ? location.x - size.width / 2 : location.x > chartWidth / 2 ? location.x + size.width / 2 : location.x;\n    }\n    location.y = series.clipRect.height / 2 + series.clipRect.y + columnRadius * Math.sin(angle);\n    return location;\n  };\n  /**\r\n   * Gets the location for the data label.\r\n   *\r\n   * @param {Points} point - The data point associated with the label.\r\n   * @param {Series} series - The series associated with the data label.\r\n   * @param {Size} textSize - The size of the text to be displayed in the data label.\r\n   * @param {number} labelIndex - The index of the data label.\r\n   * @returns {ChartLocation} - The location for the data label.\r\n   */\n  DataLabel.prototype.getLabelLocation = function (point, series, textSize, labelIndex) {\n    var location = new ChartLocation(0, 0);\n    var labelRegion = series.type === 'Candle' && labelIndex > 1 ? point.regions[1] : point.regions[0];\n    if (series.type === 'HiloOpenClose') {\n      labelRegion = labelIndex === 2 ? point.regions[1] : point.regions[2];\n    }\n    var xAxis = series.xAxis;\n    var yAxis = series.yAxis;\n    var isInverted = series.chart.requireInvertedAxis;\n    if (series.type === 'BoxAndWhisker') {\n      this.markerHeight = 0;\n      switch (labelIndex) {\n        case 0:\n          location = getPoint(point.xValue, point.median, xAxis, yAxis, isInverted);\n          break;\n        case 1:\n          location = getPoint(point.xValue, point.maximum, xAxis, yAxis, isInverted);\n          break;\n        case 2:\n          location = getPoint(point.xValue, point.minimum, xAxis, yAxis, isInverted);\n          break;\n        case 3:\n          location = getPoint(point.xValue, point.upperQuartile, xAxis, yAxis, isInverted);\n          break;\n        case 4:\n          location = getPoint(point.xValue, point.lowerQuartile, xAxis, yAxis, isInverted);\n          break;\n        default:\n          {\n            location = getPoint(point.xValue, point.outliers[labelIndex - 5], xAxis, yAxis, isInverted);\n            this.markerHeight = series.marker.height / 2;\n            break;\n          }\n      }\n      if (isInverted) {\n        location.y = point.regions[0].y + point.regions[0].height / 2;\n      } else {\n        location.x = point.regions[0].x + point.regions[0].width / 2;\n      }\n    } else if (labelIndex === 0 || labelIndex === 1) {\n      location = new ChartLocation(point.symbolLocations[0].x, point.symbolLocations[0].y);\n    } else if ((labelIndex === 2 || labelIndex === 3) && series.type === 'Candle') {\n      location = new ChartLocation(point.symbolLocations[1].x, point.symbolLocations[1].y);\n    } else if (isInverted) {\n      location = {\n        x: labelRegion.x + labelRegion.width / 2,\n        y: labelRegion.y\n      };\n    } else {\n      location = {\n        x: labelRegion.x + labelRegion.width,\n        y: labelRegion.y + labelRegion.height / 2\n      };\n    }\n    //Aligning the label at the beginning of the tick, when tick size is less than text size\n    if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n      if (series.chart.requireInvertedAxis) {\n        var height = labelRegion.height;\n        location.y = labelRegion.y + height / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n      } else {\n        var width = labelRegion.width;\n        location.x = labelRegion.x + width / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n      }\n    }\n    return location;\n  };\n  DataLabel.prototype.calculateRectPosition = function (labelLocation, rect, isMinus, position, series, textSize, labelIndex, point) {\n    if (series.chart.chartAreaType === 'PolarRadar') {\n      return null;\n    }\n    var padding = 5;\n    var margin = this.margin;\n    var textLength = series.marker.dataLabel.enableRotation ? textSize.width : !this.inverted ? textSize.height : textSize.width;\n    this.extraSpace = this.borderWidth + textLength / 2 + (position !== 'Outer' && series.type.indexOf('Column') > -1 && Math.abs(rect.height - textSize.height) < padding ? 0 : padding);\n    if (series.type === 'StackingColumn100' || series.type === 'StackingBar100') {\n      position = position === 'Outer' ? 'Top' : position;\n    } else if (series.type.indexOf('Range') > -1) {\n      position = position === 'Outer' || position === 'Top' ? position : 'Auto';\n    } else if (series.type === 'Waterfall') {\n      position = position === 'Auto' ? 'Middle' : position;\n    }\n    switch (position) {\n      case 'Bottom':\n        labelLocation = !this.inverted ? isMinus ? labelLocation + (series.type === 'Waterfall' ? -this.extraSpace - margin.top - this.markerHeight : -rect.height + this.extraSpace + margin.top) : labelLocation + rect.height - this.extraSpace - margin.bottom : isMinus ? labelLocation + (series.type === 'Waterfall' ? +this.extraSpace + margin.left + this.markerHeight : +rect.width - this.extraSpace - margin.left) : labelLocation - rect.width + this.extraSpace + margin.right;\n        break;\n      case 'Middle':\n        labelLocation = labelLocation = !this.inverted ? isMinus ? labelLocation - rect.height / 2 : labelLocation + rect.height / 2 : isMinus ? labelLocation + rect.width / 2 : labelLocation - rect.width / 2;\n        break;\n      case 'Auto':\n        labelLocation = this.calculateRectActualPosition(labelLocation, rect, isMinus, series, textSize, labelIndex, point);\n        break;\n      default:\n        this.extraSpace += this.errorHeight;\n        labelLocation = this.calculateTopAndOuterPosition(labelLocation, rect, position, series, labelIndex, this.extraSpace, isMinus, point);\n        break;\n    }\n    var check = !this.inverted ? labelLocation < rect.y || labelLocation > rect.y + rect.height : labelLocation < rect.x || labelLocation > rect.x + rect.width;\n    this.fontBackground = check ? this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground : this.fontBackground === 'transparent' ? point.color || series.interior : this.fontBackground;\n    var seriesLength = series.chart.series.length;\n    if (position === 'Outer' && series.type.indexOf('Stacking') > -1 && seriesLength - 1 > series.index) {\n      var nextSeries = void 0;\n      var nextSeriesPoint = void 0;\n      for (var i = series.index + 1; i < seriesLength; i++) {\n        nextSeries = series.chart.series[i];\n        nextSeriesPoint = nextSeries.points[point.index];\n        if (nextSeries.type.indexOf('Stacking') > -1 && nextSeries.type.indexOf('100') === -1) {\n          this.fontBackground = nextSeriesPoint && (nextSeriesPoint.yValue < 0 && point.yValue < 0 || nextSeriesPoint.yValue > 0 && point.yValue > 0) ? nextSeriesPoint ? nextSeriesPoint.color : nextSeries.interior : this.fontBackground;\n          break;\n        }\n      }\n    }\n    return labelLocation;\n  };\n  DataLabel.prototype.calculatePathPosition = function (labelLocation, position, series, point, size, labelIndex) {\n    var padding = 5;\n    if (series.type.indexOf('Area') > -1 && series.type !== 'RangeArea' && series.type !== 'SplineRangeArea' && series.type !== 'RangeStepArea' && this.yAxisInversed && series.marker.dataLabel.position !== 'Auto') {\n      position = position === 'Top' ? 'Bottom' : position === 'Bottom' ? 'Top' : position;\n    }\n    this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n    switch (position) {\n      case 'Top':\n      case 'Outer':\n        labelLocation = labelLocation - this.markerHeight - this.borderWidth - size.height / 2 - this.margin.bottom - padding - this.errorHeight;\n        break;\n      case 'Bottom':\n        labelLocation = labelLocation + this.markerHeight + this.borderWidth + size.height / 2 + this.margin.top + padding + this.errorHeight;\n        break;\n      case 'Auto':\n        labelLocation = this.calculatePathActualPosition(labelLocation, this.markerHeight, series, point, size, labelIndex);\n        break;\n    }\n    return labelLocation;\n  };\n  DataLabel.prototype.isDataLabelShape = function (style) {\n    this.isShape = style.color !== 'transparent' || style.border.width > 0;\n    this.borderWidth = style.border.width;\n    if (!this.isShape) {\n      this.margin = {\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0\n      };\n    }\n  };\n  DataLabel.prototype.calculateRectActualPosition = function (labelLocation, rect, isMinus, series, size, labelIndex, point) {\n    var location;\n    var labelRect;\n    var isOverLap = true;\n    var position = 0;\n    var collection = this.chart.dataLabelCollections;\n    var finalPosition = series.type.indexOf('Range') !== -1 || series.type === 'Hilo' ? 2 : 4;\n    while (isOverLap && position < finalPosition) {\n      var actualPosition = this.getPosition(position);\n      this.fontBackground = series.marker.dataLabel.fill;\n      if (series.type.indexOf('Stacking') > -1 && actualPosition === 'Outer') {\n        actualPosition = 'Top';\n        position++;\n      }\n      location = this.calculateRectPosition(labelLocation, rect, isMinus, actualPosition, series, size, labelIndex, point);\n      if (!this.inverted) {\n        if (series.marker.dataLabel.enableRotation) {\n          size.width = size.width - point.regions[0].width / 10;\n        }\n        labelRect = calculateRect(new ChartLocation(this.locationX, location), size, this.margin);\n        isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y > series.clipRect.height;\n        if (series.marker.dataLabel.template === null && isOverLap !== true) {\n          isOverLap = labelRect.y / 2 + size.height + (actualPosition === 'Outer' ? point.regions[0].height + this.extraSpace : point.regions[0].height - 2 * this.extraSpace) > series.clipRect.height;\n        }\n      } else {\n        labelRect = calculateRect(new ChartLocation(location, this.locationY), size, this.margin);\n        isOverLap = labelRect.x < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.x + labelRect.width > series.clipRect.width;\n      }\n      position++;\n    }\n    return location;\n  };\n  // alignment calculation assigned here\n  DataLabel.prototype.calculateAlignment = function (value, labelLocation, alignment, isMinus) {\n    switch (alignment) {\n      case 'Far':\n        labelLocation = !this.inverted ? isMinus ? labelLocation + value : labelLocation - value : isMinus ? labelLocation - value : labelLocation + value;\n        break;\n      case 'Near':\n        labelLocation = !this.inverted ? isMinus ? labelLocation - value : labelLocation + value : isMinus ? labelLocation + value : labelLocation - value;\n        break;\n    }\n    return labelLocation;\n  };\n  //calculation for top and outer position of datalabel for rect series\n  DataLabel.prototype.calculateTopAndOuterPosition = function (location, rect, position, series, index, extraSpace, isMinus, point) {\n    var margin = this.margin;\n    var top;\n    switch (series.type) {\n      case 'RangeColumn':\n      case 'RangeArea':\n      case 'RangeStepArea':\n      case 'SplineRangeArea':\n      case 'Hilo':\n        top = index === 0 && !this.yAxisInversed || index === 1 && this.yAxisInversed;\n        location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n        break;\n      case 'Candle':\n        top = (index === 0 || index === 2) && !this.yAxisInversed || (index === 1 || index === 3) && this.yAxisInversed;\n        location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top, index > 1);\n        break;\n      case 'HiloOpenClose':\n        if (index <= 1) {\n          top = index === 0 && !this.yAxisInversed || index === 1 && this.yAxisInversed;\n          location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n        } else {\n          if (this.yAxisInversed) {\n            location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n          } else {\n            location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n          }\n        }\n        break;\n      default:\n        if (isMinus && position === 'Top' || !isMinus && position === 'Outer' || position === 'Top' && series.visiblePoints[point.index].yValue === 0) {\n          location = !this.inverted ? location + (isMinus && series.type === 'Waterfall' ? -rect.height + extraSpace + margin.bottom : -extraSpace - margin.bottom - this.markerHeight) : location + (isMinus && series.type === 'Waterfall' ? +rect.width - extraSpace - margin.left : +extraSpace + margin.left + this.markerHeight);\n        } else {\n          location = !this.inverted ? location + (isMinus && series.type === 'Waterfall' ? -rect.height - extraSpace - margin.top : +extraSpace + margin.top + this.markerHeight) : location + (isMinus && series.type === 'Waterfall' ? +rect.width + extraSpace + margin.top : -extraSpace - margin.right - this.markerHeight);\n        }\n        break;\n    }\n    return location;\n  };\n  /**\r\n   * Updates the location of the data label.\r\n   *\r\n   * @param {LabelPosition} position - The position of the data label.\r\n   * @param {number} location - The initial location of the data label.\r\n   * @param {number} extraSpace - Extra space to adjust the label position.\r\n   * @param {MarginModel} margin - The margin for the chart.\r\n   * @param {Rect} rect - The rectangle associated with the data label.\r\n   * @param {boolean} top - Indicates whether the label is positioned at the top.\r\n   * @param {boolean} inside - Indicates whether the label is inside the chart area.\r\n   * @returns {number} The updated location of the data label.\r\n   */\n  DataLabel.prototype.updateLabelLocation = function (position, location, extraSpace, margin, rect, top, inside) {\n    if (inside === void 0) {\n      inside = false;\n    }\n    if (!this.inverted) {\n      if (top) {\n        location = position === 'Outer' && !inside ? location - extraSpace - margin.bottom - this.markerHeight : location + extraSpace + margin.top + this.markerHeight;\n      } else {\n        location = position === 'Outer' && !inside ? location + rect.height + extraSpace + margin.top + this.markerHeight : location + rect.height - extraSpace - margin.bottom - this.markerHeight;\n      }\n    } else {\n      if (top) {\n        location = position === 'Outer' && !inside ? location + extraSpace + margin.left + this.markerHeight : location - extraSpace - margin.right - this.markerHeight;\n      } else {\n        location = position === 'Outer' && !inside ? location - rect.width - extraSpace - margin.right - this.markerHeight : location - rect.width + extraSpace + margin.left + this.markerHeight;\n      }\n    }\n    return location;\n  };\n  DataLabel.prototype.calculatePathActualPosition = function (y, markerSize, series, point, size, labelIndex) {\n    var points = series.points;\n    var index = point.index;\n    var yValue = points[index].yValue;\n    var position;\n    var nextPoint = points.length - 1 > index ? points[index + 1] : null;\n    var previousPoint = index > 0 ? points[index - 1] : null;\n    var yLocation;\n    var isOverLap = true;\n    var labelRect;\n    var isBottom;\n    var positionIndex;\n    var collection = this.chart.dataLabelCollections;\n    if (series.type === 'Bubble') {\n      position = 'Top';\n    } else if (series.type.indexOf('Step') > -1) {\n      position = 'Top';\n      if (index) {\n        position = !previousPoint || !previousPoint.visible || yValue > previousPoint.yValue !== this.yAxisInversed || yValue === previousPoint.yValue ? 'Top' : 'Bottom';\n      }\n    } else if (series.type === 'BoxAndWhisker') {\n      if (labelIndex === 1 || labelIndex === 3 || labelIndex > 4) {\n        position = series.yAxis.isAxisInverse ? 'Bottom' : 'Top';\n      } else if (labelIndex === 2 || labelIndex === 4) {\n        position = series.yAxis.isAxisInverse ? 'Top' : 'Bottom';\n      } else {\n        isOverLap = false;\n        position = 'Middle';\n        yLocation = this.calculatePathPosition(y, position, series, point, size, labelIndex);\n      }\n    } else {\n      if (index === 0) {\n        position = !nextPoint || !nextPoint.visible || yValue > nextPoint.yValue || yValue < nextPoint.yValue && this.yAxisInversed ? 'Top' : 'Bottom';\n      } else if (index === points.length - 1) {\n        position = !previousPoint || !previousPoint.visible || yValue > previousPoint.yValue || yValue < previousPoint.yValue && this.yAxisInversed ? 'Top' : 'Bottom';\n      } else {\n        if (!nextPoint.visible && !(previousPoint && previousPoint.visible)) {\n          position = 'Top';\n        } else if (!nextPoint.visible || !previousPoint) {\n          position = nextPoint.yValue > yValue || previousPoint && previousPoint.yValue > yValue ? 'Bottom' : 'Top';\n        } else {\n          var slope = (nextPoint.yValue - previousPoint.yValue) / 2;\n          var intersectY = slope * index + (nextPoint.yValue - slope * (index + 1));\n          position = !this.yAxisInversed ? intersectY < yValue ? 'Top' : 'Bottom' : intersectY < yValue ? 'Bottom' : 'Top';\n        }\n      }\n    }\n    isBottom = position === 'Bottom';\n    positionIndex = ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'].indexOf(position);\n    while (isOverLap && positionIndex < 4) {\n      yLocation = this.calculatePathPosition(y, this.getPosition(positionIndex), series, point, size, labelIndex);\n      labelRect = calculateRect(new ChartLocation(this.locationX, yLocation), size, this.margin);\n      isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y + labelRect.height > series.clipRect.height;\n      positionIndex = isBottom ? positionIndex - 1 : positionIndex + 1;\n      isBottom = false;\n    }\n    return yLocation;\n  };\n  /**\r\n   * Initiates the animation for data labels.\r\n   *\r\n   * @param {Series} series - The series associated with the data labels.\r\n   * @param {Element} [element] - The element to animate.\r\n   * @returns {void}\r\n   */\n  DataLabel.prototype.doDataLabelAnimation = function (series, element) {\n    var shapeElements = series.shapeElement.childNodes;\n    var textNode = series.textElement.childNodes;\n    var delay = series.animation.delay + series.animation.duration;\n    var duration = series.chart.animated ? series.chart.duration : 200;\n    var location;\n    var length = element ? 1 : textNode.length;\n    var tempElement;\n    for (var i = 0; i < length; i++) {\n      tempElement = textNode[i];\n      if (element) {\n        element.style.visibility = 'hidden';\n        templateAnimate(element, delay, duration, 'ZoomIn');\n      } else {\n        location = new ChartLocation(+tempElement.getAttribute('x') + +tempElement.getAttribute('width') / 2, +tempElement.getAttribute('y') + +tempElement.getAttribute('height') / 2);\n        markerAnimate(tempElement, delay, duration, series, null, location, true);\n        if (shapeElements[i]) {\n          tempElement = shapeElements[i];\n          location = new ChartLocation(+tempElement.getAttribute('x') + +tempElement.getAttribute('width') / 2, +tempElement.getAttribute('y') + +tempElement.getAttribute('height') / 2);\n          markerAnimate(tempElement, delay, duration, series, null, location, true);\n        }\n      }\n    }\n  };\n  DataLabel.prototype.getPosition = function (index) {\n    return ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'][index];\n  };\n  /**\r\n   * Get module name.\r\n   *\r\n   * @returns {string} - Returns the module name.\r\n   */\n  DataLabel.prototype.getModuleName = function () {\n    // Returns the module name\n    return 'DataLabel';\n  };\n  /**\r\n   * To destroy the dataLabel for series.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  DataLabel.prototype.destroy = function () {\n    // Destroy method performed here\n  };\n  return DataLabel;\n}();\nexport { DataLabel };","map":{"version":3,"names":["ChartLocation","RectOption","isCollide","isOverlap","rotateTextSize","markerAnimate","appendChildElement","getVisiblePoints","getLabelText","convertHexToColor","calculateRect","textElement","colorNameToHex","measureText","TextOption","Rect","textRender","createTemplate","getFontStyle","getElement","measureElementRect","templateAnimate","withIn","withInBounds","createElement","getValue","extend","getPoint","isRotatedRectIntersect","DataLabel","chart","errorHeight","prototype","initPrivateVariables","series","marker","transform","clipPath","render","renderer","index","undefined","category","chartAreaType","clipRect","x","y","element","id","dataLabel","visible","enableCanvas","shapeElement","createGroup","setAttribute","markerHeight","type","height","commonId","calculateErrorHeight","position","chartBackground","chartArea","background","themeStyle","errorBar","direction","positiveHeight","errorBarModule","negativeHeight","isRectSeries","isTransposed","inverted","requireInvertedAxis","yAxisInversed","yAxis","isAxisInverse","templateId","visiblePoints","i","length","renderDataLabel","childElementCount","redraw","duration","appendChild","point","showZero","emptyPointSettings","mode","margin","labelText","labelLength","xPos","yPos","xValue","yValue","degree","isRender","rectCenterX","rectCenterY","labelLocation","textSize","clip","shapeRect","isDataLabelOverlap","dataLabelElement","angle","labelIntersectAction","enableRotation","border","width","color","argsFont","font","symbolLocations","regions","text","argsData","cancel","name","fill","template","location","datalabelFont","trigger","fontBackground","isDataLabelShape","createDataLabelTemplate","rect","calculateTextPosition","_i","_a","chartAxisLayoutPanel","visibleAxisLabelRect","rectRegion","actualRect","rectCoordinates","getRectanglePoints","isDataLabelOverlapWithChartBound","rotatedDataLabelCollections","push","currentPointIndex","dataLabelCollections","isShape","drawRectangle","opacity","rx","ry","dashArray","Int32Array","backgroundColor","theme","indexOf","rgbValue","contrast","Math","round","r","g","b","left","top","textAnchor","removedPointIndex","lastChild","loc1","loc2","loc3","loc4","initialClipRect","parentElement","data","labelIndex","right","bottom","childElement","styles","calculateTemplateLabelSize","isReactCallback","elementRect","clipWidth","clipHeight","style","vAxis","xAxis","hAxis","seriesType","visibleRange","stackedValues","endValues","parseFloat","animation","enable","animateSeries","doDataLabelAnimation","labelRegion","getLabelLocation","padding","locationX","alignmentValue","borderWidth","calculateAlignment","alignment","calculatePathPosition","calculateRectPosition","calculatePolarRectPosition","locationY","dataLabelOutRegion","size","columnRadius","chartWidth","availableSize","alignmentSign","regionData","startAngle","PI","endAngle","radius","innerRadius","drawType","cos","sin","isInverted","median","maximum","minimum","upperQuartile","lowerQuartile","outliers","isMinus","textLength","extraSpace","abs","calculateRectActualPosition","calculateTopAndOuterPosition","check","interior","seriesLength","nextSeries","nextSeriesPoint","points","calculatePathActualPosition","labelRect","isOverLap","collection","finalPosition","actualPosition","getPosition","value","updateLabelLocation","inside","markerSize","nextPoint","previousPoint","yLocation","isBottom","positionIndex","slope","intersectY","shapeElements","childNodes","textNode","delay","animated","tempElement","visibility","getAttribute","getModuleName","destroy"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-charts/src/chart/series/data-label.js"],"sourcesContent":["import { ChartLocation, RectOption, isCollide, isOverlap, rotateTextSize } from '../../common/utils/helper';\r\nimport { markerAnimate, appendChildElement, getVisiblePoints } from '../../common/utils/helper';\r\nimport { getLabelText, convertHexToColor, calculateRect, textElement, colorNameToHex } from '../../common/utils/helper';\r\nimport { measureText, TextOption, Rect } from '@syncfusion/ej2-svg-base';\r\nimport { textRender } from '../../common/model/constants';\r\nimport { createTemplate, getFontStyle, getElement, measureElementRect, templateAnimate, withIn, withInBounds } from '../../common/utils/helper';\r\nimport { createElement, getValue, extend } from '@syncfusion/ej2-base';\r\nimport { getPoint, isRotatedRectIntersect } from '../../common/utils/helper';\r\n/**\r\n * `DataLabel` module is used to render data label for the data point.\r\n */\r\nvar DataLabel = /** @class */ (function () {\r\n    /**\r\n     * Constructor for the data label module.\r\n     *\r\n     * @private\r\n     */\r\n    function DataLabel(chart) {\r\n        this.errorHeight = 0;\r\n        this.chart = chart;\r\n    }\r\n    DataLabel.prototype.initPrivateVariables = function (series, marker) {\r\n        var transform = '';\r\n        var clipPath = '';\r\n        var render = series.chart.renderer;\r\n        var index = (series.index === undefined) ? series.category : series.index;\r\n        if (series.chart.chartAreaType === 'Cartesian') {\r\n            transform = 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')';\r\n            clipPath = 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')';\r\n        }\r\n        if (marker.dataLabel.visible && !this.chart.enableCanvas) {\r\n            series.shapeElement = render.createGroup({\r\n                'id': this.chart.element.id + 'ShapeGroup' + index,\r\n                'transform': transform,\r\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')'\r\n            });\r\n            series.textElement = render.createGroup({\r\n                'id': this.chart.element.id + 'TextGroup' + index,\r\n                'transform': transform,\r\n                'clip-path': clipPath\r\n            });\r\n            series.textElement.setAttribute('aria-hidden', 'true');\r\n        }\r\n        this.markerHeight = ((series.type === 'Scatter' || marker.visible)) ? (marker.height / 2) : 0;\r\n        this.commonId = this.chart.element.id + '_Series_' + index + '_Point_';\r\n        this.calculateErrorHeight(series, series.marker.dataLabel.position);\r\n        this.chartBackground = this.chart.chartArea.background === 'transparent' ?\r\n            this.chart.background || this.chart.themeStyle.background : this.chart.chartArea.background;\r\n    };\r\n    DataLabel.prototype.calculateErrorHeight = function (series, position) {\r\n        if (!series.errorBar.visible) {\r\n            return null;\r\n        }\r\n        else if (series.errorBar.visible && this.chart.chartAreaType !== 'PolarRadar') {\r\n            var direction = series.errorBar.direction;\r\n            var positiveHeight = this.chart.errorBarModule.positiveHeight;\r\n            var negativeHeight = this.chart.errorBarModule.negativeHeight;\r\n            if (this.isRectSeries(series)) {\r\n                if (position === 'Top' || position === 'Auto') {\r\n                    if (direction === 'Both' || direction === 'Minus') {\r\n                        this.errorHeight = negativeHeight;\r\n                    }\r\n                    else {\r\n                        this.errorHeight = 0;\r\n                    }\r\n                }\r\n                if (position === 'Outer' || position === 'Auto') {\r\n                    if (direction === 'Both' || direction === 'Plus') {\r\n                        this.errorHeight = positiveHeight;\r\n                    }\r\n                    else {\r\n                        this.errorHeight = 0;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (position === 'Top' || position === 'Outer' || position === 'Auto') {\r\n                    if ((direction === 'Both' || direction === 'Plus') && (!series.chart.isTransposed)) {\r\n                        this.errorHeight = positiveHeight;\r\n                    }\r\n                    else {\r\n                        this.errorHeight = 0;\r\n                    }\r\n                }\r\n                if (position === 'Bottom' || position === 'Auto') {\r\n                    if (direction === 'Both' || direction === 'Minus') {\r\n                        this.errorHeight = negativeHeight;\r\n                    }\r\n                    else {\r\n                        this.errorHeight = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.errorHeight = 0;\r\n        }\r\n    };\r\n    DataLabel.prototype.isRectSeries = function (series) {\r\n        return series.isRectSeries || series.type === 'RangeArea' || series.type === 'SplineRangeArea' || series.type === 'RangeStepArea';\r\n    };\r\n    /**\r\n     * Render the data label for series.\r\n     *\r\n     * @param {Series} series - The series to render.\r\n     * @param {Chart} chart - The parent chart.\r\n     * @param {DataLabelSettingsModel} dataLabel - The settings for data labels.\r\n     * @returns {void}\r\n     */\r\n    DataLabel.prototype.render = function (series, chart, dataLabel) {\r\n        // initialize the private variable\r\n        this.initPrivateVariables(series, series.marker);\r\n        this.inverted = chart.requireInvertedAxis;\r\n        this.yAxisInversed = series.yAxis.isAxisInverse;\r\n        var templateId = chart.element.id + '_Series_' +\r\n            (series.index === undefined ? series.category : series.index) + '_DataLabelCollections';\r\n        var element = createElement('div', {\r\n            id: templateId\r\n        });\r\n        var visiblePoints = getVisiblePoints(series);\r\n        // Data label point iteration started\r\n        if (series.visible) {\r\n            for (var i = 0; i < visiblePoints.length; i++) {\r\n                this.renderDataLabel(series, visiblePoints[i], element, dataLabel);\r\n            }\r\n        }\r\n        if (element.childElementCount) {\r\n            if (!chart.enableCanvas) {\r\n                appendChildElement(chart.enableCanvas, getElement(chart.element.id + '_Secondary_Element'), element, chart.redraw, false, 'x', 'y', null, '', false, false, null, chart.duration);\r\n            }\r\n            else {\r\n                getElement(chart.element.id + '_Secondary_Element').appendChild(element);\r\n            }\r\n        }\r\n    };\r\n    DataLabel.prototype.renderDataLabel = function (series, point, element, dataLabel) {\r\n        if (!dataLabel.showZero && ((point.y === 0) || (point.y === 0 && series.emptyPointSettings.mode === 'Zero'))) {\r\n            return null;\r\n        }\r\n        this.margin = dataLabel.margin;\r\n        var labelText = [];\r\n        var labelLength;\r\n        var xPos;\r\n        var yPos;\r\n        var xValue;\r\n        var yValue;\r\n        var degree;\r\n        var isRender = true;\r\n        var rectCenterX;\r\n        var rectCenterY;\r\n        var labelLocation = { x: 0, y: 0 };\r\n        var textSize;\r\n        var clip = series.clipRect;\r\n        var shapeRect;\r\n        var isDataLabelOverlap = false;\r\n        var dataLabelElement = [];\r\n        dataLabel.angle = dataLabel.labelIntersectAction === 'Rotate90' ? 90 : dataLabel.angle;\r\n        dataLabel.enableRotation = dataLabel.labelIntersectAction === 'Rotate90' ? true : dataLabel.enableRotation;\r\n        var angle = degree = dataLabel.angle;\r\n        var border = { width: dataLabel.border.width, color: dataLabel.border.color };\r\n        var argsFont = (extend({}, getValue('properties', dataLabel.font), null, true));\r\n        if ((point.symbolLocations.length && point.symbolLocations[0]) ||\r\n            (series.type === 'BoxAndWhisker' && point.regions.length)) {\r\n            labelText = point.text !== null ? getLabelText(point, series, this.chart) : [];\r\n            labelLength = labelText.length;\r\n            for (var i = 0; i < labelLength; i++) {\r\n                var argsData = {\r\n                    cancel: false, name: textRender, series: series,\r\n                    point: point, text: labelText[i], border: border,\r\n                    color: dataLabel.fill, template: dataLabel.template, font: argsFont, location: labelLocation,\r\n                    textSize: measureText(labelText[i], dataLabel.font, this.chart.themeStyle.datalabelFont)\r\n                };\r\n                this.chart.trigger(textRender, argsData);\r\n                if (!argsData.cancel) {\r\n                    this.fontBackground = argsData.color;\r\n                    this.isDataLabelShape(argsData);\r\n                    this.markerHeight = series.type === 'Bubble' ? (point.regions[0].height / 2) : this.markerHeight;\r\n                    if (argsData.template !== null) {\r\n                        this.createDataLabelTemplate(element, series, dataLabel, point, argsData, i, this.chart.redraw);\r\n                    }\r\n                    else {\r\n                        if (dataLabel.enableRotation) {\r\n                            textSize = rotateTextSize(dataLabel.font, argsData.text, dataLabel.angle, this.chart, this.chart.themeStyle.datalabelFont);\r\n                        }\r\n                        else {\r\n                            textSize = measureText(argsData.text, dataLabel.font, this.chart.themeStyle.datalabelFont);\r\n                        }\r\n                        var rect = this.calculateTextPosition(point, series, textSize, dataLabel, i);\r\n                        // To check whether the polar radar chart datalabel intersects the axis label or not\r\n                        if (this.chart.chartAreaType === 'PolarRadar') {\r\n                            for (var _i = 0, _a = this.chart.chartAxisLayoutPanel.visibleAxisLabelRect; _i < _a.length; _i++) {\r\n                                var rectRegion = _a[_i];\r\n                                if (isOverlap(new Rect(rect.x, rect.y, rect.width, rect.height), rectRegion)) {\r\n                                    isRender = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        var actualRect = new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height);\r\n                        //let notOverlapping: boolean;\r\n                        if (dataLabel.enableRotation) {\r\n                            var rectCoordinates = this.getRectanglePoints(rect);\r\n                            rectCenterX = rect.x + (rect.width / 2);\r\n                            rectCenterY = (rect.y + (rect.height / 2));\r\n                            isDataLabelOverlap = (dataLabel.labelIntersectAction === 'Rotate90' || angle === -90) ? false : this.isDataLabelOverlapWithChartBound(rectCoordinates, this.chart, clip);\r\n                            if (!isDataLabelOverlap) {\r\n                                this.chart.rotatedDataLabelCollections.push(rectCoordinates);\r\n                                var currentPointIndex = this.chart.rotatedDataLabelCollections.length - 1;\r\n                                for (var index = currentPointIndex; index >= 0; index--) {\r\n                                    if (this.chart.rotatedDataLabelCollections[currentPointIndex] &&\r\n                                        this.chart.rotatedDataLabelCollections[index - 1] &&\r\n                                        isRotatedRectIntersect(this.chart.rotatedDataLabelCollections[currentPointIndex], this.chart.rotatedDataLabelCollections[index - 1])) {\r\n                                        isDataLabelOverlap = true;\r\n                                        this.chart.rotatedDataLabelCollections[currentPointIndex] = null;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            isDataLabelOverlap = isCollide(rect, this.chart.dataLabelCollections, clip);\r\n                        }\r\n                        if ((!isDataLabelOverlap || dataLabel.labelIntersectAction === 'None') && isRender) {\r\n                            this.chart.dataLabelCollections.push(actualRect);\r\n                            if (this.isShape) {\r\n                                shapeRect = this.chart.renderer.drawRectangle(new RectOption(this.commonId + point.index + '_TextShape_' + i, argsData.color, argsData.border, dataLabel.opacity, rect, dataLabel.rx, dataLabel.ry, '', dataLabel.border.dashArray), new Int32Array([clip.x, clip.y]));\r\n                                if (series.shapeElement) {\r\n                                    series.shapeElement.appendChild(shapeRect);\r\n                                }\r\n                            }\r\n                            // Checking the font color\r\n                            var backgroundColor = this.fontBackground === 'transparent' ? ((this.chart.theme.indexOf('Dark') > -1 || this.chart.theme.indexOf('HighContrast') > -1) ? 'black' : 'white') : this.fontBackground;\r\n                            var rgbValue = convertHexToColor(colorNameToHex(backgroundColor));\r\n                            var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\r\n                            xPos = (rect.x + this.margin.left + textSize.width / 2) + labelLocation.x;\r\n                            yPos = dataLabel.enableRotation && this.chart.chartAreaType !== 'PolarRadar' ? (rect.y + this.margin.top + textSize.height / 2 + textSize.width / 4 + (dataLabel.position === 'Auto' ? point.regions[0].width / 10 : 0)) + labelLocation.y : (rect.y + this.margin.top + textSize.height * 3 / 4) + labelLocation.y;\r\n                            labelLocation = { x: 0, y: 0 };\r\n                            if (angle !== 0 && dataLabel.enableRotation) {\r\n                                // xValue = xPos - (dataLabel.margin.left) / 2 + (dataLabel.margin.right / 2);\r\n                                xValue = rectCenterX;\r\n                                //yValue = yPos - (dataLabel.margin.top) / 2 - (textSize.height / dataLabel.margin.top) +\r\n                                // (dataLabel.margin.bottom) / 2;\r\n                                yValue = rectCenterY;\r\n                                degree = (angle > 360) ? angle - 360 : (angle < -360) ? angle + 360 : angle;\r\n                            }\r\n                            else {\r\n                                degree = 0;\r\n                                xValue = rect.x;\r\n                                yValue = rect.y;\r\n                                xPos -= this.chart.chartAreaType === 'Cartesian' && xPos + (textSize.width / 2) > clip.width ? (xPos + textSize.width / 2) - clip.width : 0;\r\n                                yPos -= (yPos + textSize.height > clip.y + clip.height && !(series.type.indexOf('Bar') > -1)) ? (yPos + textSize.height) - (clip.y + clip.height) : 0;\r\n                            }\r\n                            var textAnchor = dataLabel.labelIntersectAction === 'Rotate90' ? (dataLabel.position === 'Top' ? 'start' : (dataLabel.position === 'Middle' ? 'middle' : 'end')) :\r\n                                ((angle === -90 && dataLabel.enableRotation) ? (dataLabel.position === 'Top' ? 'end' : (dataLabel.position === 'Middle' ? 'middle' : 'start')) : 'middle');\r\n                            dataLabelElement.push(textElement(this.chart.renderer, new TextOption(this.commonId + ((series.removedPointIndex !== null && series.removedPointIndex <= point.index) ? (point.index + 1) : point.index) + '_Text_' + i, xPos, yPos, textAnchor, argsData.text, 'rotate(' + degree + ',' + (xValue) + ',' + (yValue) + ')', 'auto', degree), argsData.font, argsData.font.color ||\r\n                                ((contrast >= 128 || series.type === 'Hilo' || series.type === 'HiloOpenClose') ? 'black' : 'white'), series.textElement, false, this.chart.redraw, true, false, series.chart.duration, series.clipRect, null, null, this.chart.enableCanvas, null, this.chart.themeStyle.datalabelFont, new ChartLocation(xValue, yValue)));\r\n                            if (series.removedPointIndex !== null && series.removedPointIndex <= point.index) {\r\n                                series.textElement.lastChild.id = this.commonId + point.index + '_Text_' + i;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return dataLabelElement;\r\n    };\r\n    /**\r\n     * Retrieves the points of a rectangle.\r\n     *\r\n     * @param {Rect} rect - The rectangle whose points are to be retrieved.\r\n     * @returns {ChartLocation[]} - The points of the rectangle.\r\n     */\r\n    DataLabel.prototype.getRectanglePoints = function (rect) {\r\n        var loc1 = new ChartLocation(rect.x, rect.y);\r\n        var loc2 = new ChartLocation(rect.x + rect.width, rect.y);\r\n        var loc3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\r\n        var loc4 = new ChartLocation(rect.x, rect.y + rect.height);\r\n        return [loc1, loc2, loc3, loc4];\r\n    };\r\n    DataLabel.prototype.isDataLabelOverlapWithChartBound = function (rectCoordinates, chart, clip) {\r\n        for (var index = 0; index < rectCoordinates.length; index++) {\r\n            if (!withInBounds(rectCoordinates[index].x + clip.x, rectCoordinates[index].y + clip.y, chart.initialClipRect)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Creates a template for data labels.\r\n     *\r\n     * @param {HTMLElement} parentElement - The parent element to which the template will be appended.\r\n     * @param {Series} series - The series associated with the data label.\r\n     * @param {DataLabelSettingsModel} dataLabel - The settings for the data label.\r\n     * @param {Points} point - The data point to which the data label is associated.\r\n     * @param {ITextRenderEventArgs} data - The event data associated with rendering the data label.\r\n     * @param {number} labelIndex - The index of the data label.\r\n     * @param {boolean} redraw - Specifies whether to redraw the template.\r\n     * @returns {void}\r\n     */\r\n    DataLabel.prototype.createDataLabelTemplate = function (parentElement, series, dataLabel, point, data, labelIndex, redraw) {\r\n        this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\r\n        var clip = series.clipRect;\r\n        var childElement = createTemplate(createElement('div', {\r\n            id: this.chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabel_'\r\n                + point.index + (labelIndex ? ('_' + labelIndex) : ''),\r\n            styles: 'position: absolute;background-color:' + data.color + ';' +\r\n                getFontStyle(dataLabel.font, this.chart.themeStyle.datalabelFont) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\r\n        }), point.index, data.template, this.chart, point, series, this.chart.element.id + '_DataLabel', labelIndex);\r\n        this.calculateTemplateLabelSize(parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw);\r\n    };\r\n    DataLabel.prototype.calculateTemplateLabelSize = function (parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw, isReactCallback) {\r\n        var elementRect = measureElementRect(childElement, redraw, isReactCallback);\r\n        var rect = this.calculateTextPosition(point, series, { width: elementRect.width, height: elementRect.height }, dataLabel, labelIndex);\r\n        var clipWidth = 0;\r\n        var clipHeight = 0;\r\n        var isOverlap = false;\r\n        if (isReactCallback) {\r\n            isOverlap = (elementRect.width === 0 || elementRect.height === 0); // To check the data label already overlap before react callback call\r\n            // clipWidth = ((series.clipRect.x + rect.x) + elementRect.width) > parentElement.clientWidth ?\r\n            //     (parentElement.clientWidth - (series.clipRect.x + rect.x)) : 0;\r\n            // clipHeight = (series.points.length - 1 === point.index) ? elementRect.height / 2 : 0;\r\n        }\r\n        childElement.style.left = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x) + rect.x - clipWidth) + 'px';\r\n        childElement.style.top = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y) + rect.y + clipHeight) + 'px';\r\n        var backgroundColor = this.fontBackground === 'transparent' ? (this.chart.theme.indexOf('Dark') > -1 ? 'black' : 'white') : this.fontBackground;\r\n        var rgbValue = convertHexToColor(colorNameToHex(backgroundColor));\r\n        var vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\r\n        var hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\r\n        childElement.style.color = dataLabel.font.color ||\r\n            ((Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000)) >= 128 ? 'black' : 'white');\r\n        if (childElement.childElementCount && !isOverlap && (!isCollide(rect, this.chart.dataLabelCollections, clip) ||\r\n            dataLabel.labelIntersectAction === 'None') && (series.seriesType !== 'XY' || point.yValue === undefined ||\r\n            withIn(point.yValue, series.yAxis.visibleRange) || (series.type.indexOf('Stacking') > -1) ||\r\n            (series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange))) &&\r\n            withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y &&\r\n            parseFloat(childElement.style.left) >= hAxis.rect.x &&\r\n            parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height &&\r\n            parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\r\n            this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\r\n            appendChildElement(this.chart.enableCanvas, parentElement, childElement, redraw, true, 'left', 'top');\r\n            if (series.animation.enable && this.chart.animateSeries && !this.chart.enableCanvas) {\r\n                this.doDataLabelAnimation(series, childElement);\r\n            }\r\n            else if (this.chart.enableCanvas) {\r\n                parentElement.appendChild(childElement);\r\n            }\r\n        }\r\n    };\r\n    DataLabel.prototype.calculateTextPosition = function (point, series, textSize, dataLabel, labelIndex) {\r\n        var labelRegion = labelIndex > 1 ? (series.type === 'Candle') ? point.regions[1] : point.regions[0] : point.regions[0];\r\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\r\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\r\n        }\r\n        var location;\r\n        location = this.getLabelLocation(point, series, textSize, labelIndex);\r\n        var padding = 5;\r\n        var clipRect = series.clipRect;\r\n        // calculating alignment\r\n        if (!this.chart.requireInvertedAxis || !this.isRectSeries(series) || series.type === 'BoxAndWhisker') {\r\n            this.locationX = location.x;\r\n            var alignmentValue = textSize.height + (this.borderWidth * 2) + this.markerHeight +\r\n                this.margin.bottom + this.margin.top + padding;\r\n            location.x = (dataLabel.position === 'Auto') ? location.x :\r\n                this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, this.isRectSeries(series) ? point.yValue < 0 : false);\r\n            // calculating position\r\n            location.y = (!this.isRectSeries(series) || series.type === 'BoxAndWhisker') ?\r\n                this.calculatePathPosition(location.y, dataLabel.position, series, point, textSize, labelIndex) :\r\n                this.calculateRectPosition(location.y, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\r\n            if (this.isRectSeries(series) && this.chart.chartAreaType === 'PolarRadar') {\r\n                location = this.calculatePolarRectPosition(location, dataLabel.position, series, point, textSize, labelIndex, dataLabel.alignment, alignmentValue);\r\n            }\r\n        }\r\n        else {\r\n            this.locationY = location.y;\r\n            var alignmentValue = textSize.width + this.borderWidth + this.margin.left + this.margin.right - padding;\r\n            location.x = dataLabel.position === 'Auto' ? location.x :\r\n                this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, point.yValue < 0);\r\n            location.x = this.calculateRectPosition(location.x, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\r\n        }\r\n        var rect = calculateRect(location, textSize, this.margin);\r\n        // Checking the condition whether data Label has been exist the clip rect\r\n        if (!(dataLabel.enableRotation === true && dataLabel.angle !== 0) &&\r\n            !((rect.y > (clipRect.y + clipRect.height)) || (rect.x > (clipRect.x + clipRect.width)) ||\r\n                (rect.x + rect.width < 0) || (rect.y + rect.height < 0))) {\r\n            rect.x = rect.x < 0 ? padding : rect.x;\r\n            rect.y = (rect.y < 0) && !(dataLabel.labelIntersectAction === 'None') ? padding : rect.y;\r\n            rect.x -= (rect.x + rect.width) > (clipRect.x + clipRect.width) ? (rect.x + rect.width)\r\n                - (clipRect.x + clipRect.width) + padding : 0;\r\n            rect.y -= (rect.y + rect.height) > (clipRect.y + clipRect.height) ? (rect.y + rect.height)\r\n                - (clipRect.y + clipRect.height) + padding : 0;\r\n            this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\r\n        }\r\n        var dataLabelOutRegion;\r\n        if (this.inverted && series.isRectSeries && (rect.x + rect.width > labelRegion.x + labelRegion.width)) {\r\n            dataLabelOutRegion = true;\r\n        }\r\n        this.fontBackground = dataLabelOutRegion ? this.chartBackground : this.fontBackground;\r\n        return rect;\r\n    };\r\n    // Calculation label location for polar column draw types\r\n    DataLabel.prototype.calculatePolarRectPosition = function (location, position, series, point, size, labelIndex, alignment, alignmentValue) {\r\n        var padding = 5;\r\n        var columnRadius;\r\n        var chartWidth = this.chart.availableSize.width;\r\n        var alignmentSign = (alignment === 'Center') ? 0 : (alignment === 'Far' ? 1 : -1);\r\n        var angle = (point.regionData.startAngle - 0.5 * Math.PI) + (point.regionData.endAngle - point.regionData.startAngle) / 2;\r\n        if (labelIndex === 0) {\r\n            columnRadius = point.regionData.radius < point.regionData.innerRadius ? point.regionData.innerRadius\r\n                : point.regionData.radius;\r\n        }\r\n        else {\r\n            columnRadius = point.regionData.radius > point.regionData.innerRadius ? point.regionData.innerRadius\r\n                : point.regionData.radius;\r\n        }\r\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\r\n        if (series.drawType.indexOf('Stacking') > -1) {\r\n            position = position === 'Outer' ? 'Top' : position;\r\n        }\r\n        else if (series.drawType.indexOf('Range') > -1) {\r\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\r\n        }\r\n        if (position === 'Outer') {\r\n            columnRadius = labelIndex === 0 ? columnRadius + 2 * padding + this.markerHeight :\r\n                columnRadius - 2 * padding - this.markerHeight;\r\n        }\r\n        else if (position === 'Middle') {\r\n            columnRadius = columnRadius / 2 + padding;\r\n            if (series.drawType === 'StackingColumn') {\r\n                columnRadius = point.regionData.innerRadius + ((point.regionData.radius - point.regionData.innerRadius) / 2)\r\n                    + padding - (size.height / 2);\r\n            }\r\n        }\r\n        else if (position === 'Top') {\r\n            columnRadius = labelIndex === 0 ? columnRadius - 2 * padding - this.markerHeight :\r\n                columnRadius + 2 * padding + this.markerHeight;\r\n        }\r\n        else if (position === 'Bottom') {\r\n            columnRadius = 2 * padding;\r\n            columnRadius += (series.drawType === 'StackingColumn') ? (point.regionData.innerRadius + this.markerHeight) : 0;\r\n        }\r\n        else {\r\n            if (labelIndex === 0) {\r\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius - padding :\r\n                    series.drawType === 'StackingColumn' ? columnRadius - 2 * padding : columnRadius + 2 * padding;\r\n            }\r\n            else {\r\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius + padding : columnRadius - 2 * padding;\r\n            }\r\n        }\r\n        columnRadius += (alignmentValue * alignmentSign);\r\n        location.x = series.clipRect.width / 2 + series.clipRect.x + columnRadius * Math.cos(angle);\r\n        // To change x location based on text anchor for column and stackingcolumn chart\r\n        if (series.drawType === 'StackingColumn') {\r\n            location.x = location.x < chartWidth / 2 ? location.x + size.width / 2 :\r\n                (location.x > chartWidth / 2 ? location.x - size.width / 2 : location.x);\r\n        }\r\n        else if (series.drawType === 'Column') {\r\n            location.x = location.x < chartWidth / 2 ? location.x - size.width / 2 :\r\n                (location.x > chartWidth / 2 ? location.x + size.width / 2 : location.x);\r\n        }\r\n        location.y = series.clipRect.height / 2 + series.clipRect.y + columnRadius * Math.sin(angle);\r\n        return location;\r\n    };\r\n    /**\r\n     * Gets the location for the data label.\r\n     *\r\n     * @param {Points} point - The data point associated with the label.\r\n     * @param {Series} series - The series associated with the data label.\r\n     * @param {Size} textSize - The size of the text to be displayed in the data label.\r\n     * @param {number} labelIndex - The index of the data label.\r\n     * @returns {ChartLocation} - The location for the data label.\r\n     */\r\n    DataLabel.prototype.getLabelLocation = function (point, series, textSize, labelIndex) {\r\n        var location = new ChartLocation(0, 0);\r\n        var labelRegion = (series.type === 'Candle' && labelIndex > 1) ? point.regions[1] : point.regions[0];\r\n        if (series.type === 'HiloOpenClose') {\r\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\r\n        }\r\n        var xAxis = series.xAxis;\r\n        var yAxis = series.yAxis;\r\n        var isInverted = series.chart.requireInvertedAxis;\r\n        if (series.type === 'BoxAndWhisker') {\r\n            this.markerHeight = 0;\r\n            switch (labelIndex) {\r\n                case 0:\r\n                    location = getPoint(point.xValue, point.median, xAxis, yAxis, isInverted);\r\n                    break;\r\n                case 1:\r\n                    location = getPoint(point.xValue, point.maximum, xAxis, yAxis, isInverted);\r\n                    break;\r\n                case 2:\r\n                    location = getPoint(point.xValue, point.minimum, xAxis, yAxis, isInverted);\r\n                    break;\r\n                case 3:\r\n                    location = getPoint(point.xValue, point.upperQuartile, xAxis, yAxis, isInverted);\r\n                    break;\r\n                case 4:\r\n                    location = getPoint(point.xValue, point.lowerQuartile, xAxis, yAxis, isInverted);\r\n                    break;\r\n                default: {\r\n                    location = getPoint(point.xValue, point.outliers[labelIndex - 5], xAxis, yAxis, isInverted);\r\n                    this.markerHeight = series.marker.height / 2;\r\n                    break;\r\n                }\r\n            }\r\n            if (isInverted) {\r\n                location.y = point.regions[0].y + (point.regions[0].height / 2);\r\n            }\r\n            else {\r\n                location.x = point.regions[0].x + (point.regions[0].width / 2);\r\n            }\r\n        }\r\n        else if (labelIndex === 0 || labelIndex === 1) {\r\n            location = new ChartLocation(point.symbolLocations[0].x, point.symbolLocations[0].y);\r\n        }\r\n        else if ((labelIndex === 2 || labelIndex === 3) && series.type === 'Candle') {\r\n            location = new ChartLocation(point.symbolLocations[1].x, point.symbolLocations[1].y);\r\n        }\r\n        else if (isInverted) {\r\n            location = { x: labelRegion.x + (labelRegion.width) / 2, y: labelRegion.y };\r\n        }\r\n        else {\r\n            location = { x: labelRegion.x + labelRegion.width, y: labelRegion.y + (labelRegion.height) / 2 };\r\n        }\r\n        //Aligning the label at the beginning of the tick, when tick size is less than text size\r\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\r\n            if (series.chart.requireInvertedAxis) {\r\n                var height = labelRegion.height;\r\n                location.y = labelRegion.y + height / 2 + 2 * (labelIndex === 2 ? 1 : -1);\r\n            }\r\n            else {\r\n                var width = labelRegion.width;\r\n                location.x = labelRegion.x + width / 2 + 2 * (labelIndex === 2 ? 1 : -1);\r\n            }\r\n        }\r\n        return location;\r\n    };\r\n    DataLabel.prototype.calculateRectPosition = function (labelLocation, rect, isMinus, position, series, textSize, labelIndex, point) {\r\n        if (series.chart.chartAreaType === 'PolarRadar') {\r\n            return null;\r\n        }\r\n        var padding = 5;\r\n        var margin = this.margin;\r\n        var textLength = (series.marker.dataLabel.enableRotation ? textSize.width :\r\n            (!this.inverted ? textSize.height : textSize.width));\r\n        this.extraSpace = this.borderWidth + textLength / 2 + (position !== 'Outer' && series.type.indexOf('Column') > -1 &&\r\n            (Math.abs(rect.height - textSize.height) < padding) ? 0 : padding);\r\n        if (series.type === 'StackingColumn100' || series.type === 'StackingBar100') {\r\n            position = (position === 'Outer') ? 'Top' : position;\r\n        }\r\n        else if (series.type.indexOf('Range') > -1) {\r\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\r\n        }\r\n        else if (series.type === 'Waterfall') {\r\n            position = position === 'Auto' ? 'Middle' : position;\r\n        }\r\n        switch (position) {\r\n            case 'Bottom':\r\n                labelLocation = !this.inverted ?\r\n                    isMinus ? (labelLocation + (series.type === 'Waterfall' ? (-this.extraSpace - margin.top - this.markerHeight) : (-rect.height + this.extraSpace + margin.top))) :\r\n                        (labelLocation + rect.height - this.extraSpace - margin.bottom) :\r\n                    isMinus ? (labelLocation + (series.type === 'Waterfall' ? (+this.extraSpace + margin.left + this.markerHeight) : (+rect.width - this.extraSpace - margin.left))) :\r\n                        (labelLocation - rect.width + this.extraSpace + margin.right);\r\n                break;\r\n            case 'Middle':\r\n                labelLocation = labelLocation = !this.inverted ?\r\n                    (isMinus ? labelLocation - (rect.height / 2) : labelLocation + (rect.height / 2)) :\r\n                    (isMinus ? labelLocation + (rect.width / 2) : labelLocation - (rect.width / 2));\r\n                break;\r\n            case 'Auto':\r\n                labelLocation = this.calculateRectActualPosition(labelLocation, rect, isMinus, series, textSize, labelIndex, point);\r\n                break;\r\n            default:\r\n                this.extraSpace += this.errorHeight;\r\n                labelLocation = this.calculateTopAndOuterPosition(labelLocation, rect, position, series, labelIndex, this.extraSpace, isMinus, point);\r\n                break;\r\n        }\r\n        var check = !this.inverted ? (labelLocation < rect.y || labelLocation > rect.y + rect.height) :\r\n            (labelLocation < rect.x || labelLocation > rect.x + rect.width);\r\n        this.fontBackground = check ?\r\n            (this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground)\r\n            : this.fontBackground === 'transparent' ? (point.color || series.interior) : this.fontBackground;\r\n        var seriesLength = series.chart.series.length;\r\n        if (position === 'Outer' && (series.type.indexOf('Stacking') > -1) && ((seriesLength - 1) > series.index)) {\r\n            var nextSeries = void 0;\r\n            var nextSeriesPoint = void 0;\r\n            for (var i = series.index + 1; i < seriesLength; i++) {\r\n                nextSeries = series.chart.series[i];\r\n                nextSeriesPoint = nextSeries.points[point.index];\r\n                if ((nextSeries.type.indexOf('Stacking') > -1) && (nextSeries.type.indexOf('100') === -1)) {\r\n                    this.fontBackground = (nextSeriesPoint && ((nextSeriesPoint.yValue < 0 && point.yValue < 0) ||\r\n                        (nextSeriesPoint.yValue > 0 && point.yValue > 0))) ? (nextSeriesPoint ? nextSeriesPoint.color :\r\n                        nextSeries.interior) : this.fontBackground;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return labelLocation;\r\n    };\r\n    DataLabel.prototype.calculatePathPosition = function (labelLocation, position, series, point, size, labelIndex) {\r\n        var padding = 5;\r\n        if ((series.type.indexOf('Area') > -1 && series.type !== 'RangeArea' && series.type !== 'SplineRangeArea' && series.type !== 'RangeStepArea')\r\n            && this.yAxisInversed && series.marker.dataLabel.position !== 'Auto') {\r\n            position = position === 'Top' ? 'Bottom' : position === 'Bottom' ? 'Top' : position;\r\n        }\r\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\r\n        switch (position) {\r\n            case 'Top':\r\n            case 'Outer':\r\n                labelLocation = labelLocation - this.markerHeight - this.borderWidth - size.height / 2 - this.margin.bottom - padding -\r\n                    this.errorHeight;\r\n                break;\r\n            case 'Bottom':\r\n                labelLocation = labelLocation + this.markerHeight + this.borderWidth + size.height / 2 + this.margin.top + padding +\r\n                    this.errorHeight;\r\n                break;\r\n            case 'Auto':\r\n                labelLocation = this.calculatePathActualPosition(labelLocation, this.markerHeight, series, point, size, labelIndex);\r\n                break;\r\n        }\r\n        return labelLocation;\r\n    };\r\n    DataLabel.prototype.isDataLabelShape = function (style) {\r\n        this.isShape = (style.color !== 'transparent' || style.border.width > 0);\r\n        this.borderWidth = style.border.width;\r\n        if (!this.isShape) {\r\n            this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\r\n        }\r\n    };\r\n    DataLabel.prototype.calculateRectActualPosition = function (labelLocation, rect, isMinus, series, size, labelIndex, point) {\r\n        var location;\r\n        var labelRect;\r\n        var isOverLap = true;\r\n        var position = 0;\r\n        var collection = this.chart.dataLabelCollections;\r\n        var finalPosition = series.type.indexOf('Range') !== -1 || series.type === 'Hilo' ? 2 : 4;\r\n        while (isOverLap && position < finalPosition) {\r\n            var actualPosition = this.getPosition(position);\r\n            this.fontBackground = series.marker.dataLabel.fill;\r\n            if (series.type.indexOf('Stacking') > -1 && actualPosition === 'Outer') {\r\n                actualPosition = 'Top';\r\n                position++;\r\n            }\r\n            location = this.calculateRectPosition(labelLocation, rect, isMinus, actualPosition, series, size, labelIndex, point);\r\n            if (!this.inverted) {\r\n                if (series.marker.dataLabel.enableRotation) {\r\n                    size.width = size.width - point.regions[0].width / 10;\r\n                }\r\n                labelRect = calculateRect(new ChartLocation(this.locationX, location), size, this.margin);\r\n                isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y > series.clipRect.height;\r\n                if (series.marker.dataLabel.template === null && isOverLap !== true) {\r\n                    isOverLap = labelRect.y / 2 + size.height + (actualPosition === 'Outer' ? point.regions[0].height + this.extraSpace : point.regions[0].height - 2 * this.extraSpace) > series.clipRect.height;\r\n                }\r\n            }\r\n            else {\r\n                labelRect = calculateRect(new ChartLocation(location, this.locationY), size, this.margin);\r\n                isOverLap = labelRect.x < 0 || isCollide(labelRect, collection, series.clipRect) ||\r\n                    labelRect.x + labelRect.width > series.clipRect.width;\r\n            }\r\n            position++;\r\n        }\r\n        return location;\r\n    };\r\n    // alignment calculation assigned here\r\n    DataLabel.prototype.calculateAlignment = function (value, labelLocation, alignment, isMinus) {\r\n        switch (alignment) {\r\n            case 'Far':\r\n                labelLocation = !this.inverted ? (isMinus ? labelLocation + value : labelLocation - value) :\r\n                    (isMinus ? labelLocation - value : labelLocation + value);\r\n                break;\r\n            case 'Near':\r\n                labelLocation = !this.inverted ? (isMinus ? labelLocation - value : labelLocation + value) :\r\n                    (isMinus ? labelLocation + value : labelLocation - value);\r\n                break;\r\n        }\r\n        return labelLocation;\r\n    };\r\n    //calculation for top and outer position of datalabel for rect series\r\n    DataLabel.prototype.calculateTopAndOuterPosition = function (location, rect, position, series, index, extraSpace, isMinus, point) {\r\n        var margin = this.margin;\r\n        var top;\r\n        switch (series.type) {\r\n            case 'RangeColumn':\r\n            case 'RangeArea':\r\n            case 'RangeStepArea':\r\n            case 'SplineRangeArea':\r\n            case 'Hilo':\r\n                top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\r\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\r\n                break;\r\n            case 'Candle':\r\n                top = (index === 0 || index === 2) && !this.yAxisInversed\r\n                    || (index === 1 || index === 3) && this.yAxisInversed;\r\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top, index > 1);\r\n                break;\r\n            case 'HiloOpenClose':\r\n                if (index <= 1) {\r\n                    top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\r\n                    location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\r\n                }\r\n                else {\r\n                    if (this.yAxisInversed) {\r\n                        location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\r\n                    }\r\n                    else {\r\n                        location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                if (((isMinus && position === 'Top') || (!isMinus && position === 'Outer')) || (position === 'Top' && series.visiblePoints[point.index].yValue === 0)) {\r\n                    location = !this.inverted ? location + (isMinus && series.type === 'Waterfall' ? (-rect.height + extraSpace + margin.bottom) : (-extraSpace - margin.bottom - this.markerHeight)) :\r\n                        location + (isMinus && series.type === 'Waterfall' ? (+rect.width - extraSpace - margin.left) : (+extraSpace + margin.left + this.markerHeight));\r\n                }\r\n                else {\r\n                    location = !this.inverted ? location + (isMinus && series.type === 'Waterfall' ? (-rect.height - extraSpace - margin.top) : (+extraSpace + margin.top + this.markerHeight)) :\r\n                        location + (isMinus && series.type === 'Waterfall' ? (+rect.width + extraSpace + margin.top) : (-extraSpace - margin.right - this.markerHeight));\r\n                }\r\n                break;\r\n        }\r\n        return location;\r\n    };\r\n    /**\r\n     * Updates the location of the data label.\r\n     *\r\n     * @param {LabelPosition} position - The position of the data label.\r\n     * @param {number} location - The initial location of the data label.\r\n     * @param {number} extraSpace - Extra space to adjust the label position.\r\n     * @param {MarginModel} margin - The margin for the chart.\r\n     * @param {Rect} rect - The rectangle associated with the data label.\r\n     * @param {boolean} top - Indicates whether the label is positioned at the top.\r\n     * @param {boolean} inside - Indicates whether the label is inside the chart area.\r\n     * @returns {number} The updated location of the data label.\r\n     */\r\n    DataLabel.prototype.updateLabelLocation = function (position, location, extraSpace, margin, rect, top, inside) {\r\n        if (inside === void 0) { inside = false; }\r\n        if (!this.inverted) {\r\n            if (top) {\r\n                location = (position === 'Outer' && !inside) ? location - extraSpace - margin.bottom - this.markerHeight :\r\n                    location + extraSpace + margin.top + this.markerHeight;\r\n            }\r\n            else {\r\n                location = (position === 'Outer' && !inside) ? location + rect.height + extraSpace + margin.top + this.markerHeight :\r\n                    location + rect.height - extraSpace - margin.bottom - this.markerHeight;\r\n            }\r\n        }\r\n        else {\r\n            if (top) {\r\n                location = (position === 'Outer' && !inside) ? location + extraSpace + margin.left + this.markerHeight :\r\n                    location - extraSpace - margin.right - this.markerHeight;\r\n            }\r\n            else {\r\n                location = (position === 'Outer' && !inside) ? location - rect.width - extraSpace - margin.right - this.markerHeight :\r\n                    location - rect.width + extraSpace + margin.left + this.markerHeight;\r\n            }\r\n        }\r\n        return location;\r\n    };\r\n    DataLabel.prototype.calculatePathActualPosition = function (y, markerSize, series, point, size, labelIndex) {\r\n        var points = series.points;\r\n        var index = point.index;\r\n        var yValue = points[index].yValue;\r\n        var position;\r\n        var nextPoint = points.length - 1 > index ? points[index + 1] : null;\r\n        var previousPoint = index > 0 ? points[index - 1] : null;\r\n        var yLocation;\r\n        var isOverLap = true;\r\n        var labelRect;\r\n        var isBottom;\r\n        var positionIndex;\r\n        var collection = this.chart.dataLabelCollections;\r\n        if (series.type === 'Bubble') {\r\n            position = 'Top';\r\n        }\r\n        else if (series.type.indexOf('Step') > -1) {\r\n            position = 'Top';\r\n            if (index) {\r\n                position = (!previousPoint || !previousPoint.visible || (yValue > previousPoint.yValue !== this.yAxisInversed)\r\n                    || yValue === previousPoint.yValue) ? 'Top' : 'Bottom';\r\n            }\r\n        }\r\n        else if (series.type === 'BoxAndWhisker') {\r\n            if (labelIndex === 1 || labelIndex === 3 || labelIndex > 4) {\r\n                position = series.yAxis.isAxisInverse ? 'Bottom' : 'Top';\r\n            }\r\n            else if (labelIndex === 2 || labelIndex === 4) {\r\n                position = series.yAxis.isAxisInverse ? 'Top' : 'Bottom';\r\n            }\r\n            else {\r\n                isOverLap = false;\r\n                position = 'Middle';\r\n                yLocation = this.calculatePathPosition(y, position, series, point, size, labelIndex);\r\n            }\r\n        }\r\n        else {\r\n            if (index === 0) {\r\n                position = (!nextPoint || !nextPoint.visible || yValue > nextPoint.yValue ||\r\n                    (yValue < nextPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\r\n            }\r\n            else if (index === points.length - 1) {\r\n                position = (!previousPoint || !previousPoint.visible || yValue > previousPoint.yValue ||\r\n                    (yValue < previousPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\r\n            }\r\n            else {\r\n                if (!nextPoint.visible && !(previousPoint && previousPoint.visible)) {\r\n                    position = 'Top';\r\n                }\r\n                else if (!nextPoint.visible || !previousPoint) {\r\n                    position = (nextPoint.yValue > yValue || (previousPoint && previousPoint.yValue > yValue)) ?\r\n                        'Bottom' : 'Top';\r\n                }\r\n                else {\r\n                    var slope = (nextPoint.yValue - previousPoint.yValue) / 2;\r\n                    var intersectY = (slope * index) + (nextPoint.yValue - (slope * (index + 1)));\r\n                    position = !this.yAxisInversed ? intersectY < yValue ? 'Top' : 'Bottom' :\r\n                        intersectY < yValue ? 'Bottom' : 'Top';\r\n                }\r\n            }\r\n        }\r\n        isBottom = position === 'Bottom';\r\n        positionIndex = ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'].indexOf(position);\r\n        while (isOverLap && positionIndex < 4) {\r\n            yLocation = this.calculatePathPosition(y, this.getPosition(positionIndex), series, point, size, labelIndex);\r\n            labelRect = calculateRect(new ChartLocation(this.locationX, yLocation), size, this.margin);\r\n            isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect)\r\n                || (labelRect.y + labelRect.height) > series.clipRect.height;\r\n            positionIndex = isBottom ? positionIndex - 1 : positionIndex + 1;\r\n            isBottom = false;\r\n        }\r\n        return yLocation;\r\n    };\r\n    /**\r\n     * Initiates the animation for data labels.\r\n     *\r\n     * @param {Series} series - The series associated with the data labels.\r\n     * @param {Element} [element] - The element to animate.\r\n     * @returns {void}\r\n     */\r\n    DataLabel.prototype.doDataLabelAnimation = function (series, element) {\r\n        var shapeElements = series.shapeElement.childNodes;\r\n        var textNode = series.textElement.childNodes;\r\n        var delay = series.animation.delay + series.animation.duration;\r\n        var duration = series.chart.animated ? series.chart.duration : 200;\r\n        var location;\r\n        var length = element ? 1 : textNode.length;\r\n        var tempElement;\r\n        for (var i = 0; i < length; i++) {\r\n            tempElement = textNode[i];\r\n            if (element) {\r\n                element.style.visibility = 'hidden';\r\n                templateAnimate(element, delay, duration, 'ZoomIn');\r\n            }\r\n            else {\r\n                location = new ChartLocation((+tempElement.getAttribute('x')) + ((+tempElement.getAttribute('width')) / 2), (+tempElement.getAttribute('y')) + ((+tempElement.getAttribute('height')) / 2));\r\n                markerAnimate(tempElement, delay, duration, series, null, location, true);\r\n                if (shapeElements[i]) {\r\n                    tempElement = shapeElements[i];\r\n                    location = new ChartLocation((+tempElement.getAttribute('x')) + ((+tempElement.getAttribute('width')) / 2), (+tempElement.getAttribute('y')) + ((+tempElement.getAttribute('height')) / 2));\r\n                    markerAnimate(tempElement, delay, duration, series, null, location, true);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    DataLabel.prototype.getPosition = function (index) {\r\n        return (['Outer', 'Top', 'Bottom', 'Middle', 'Auto'][index]);\r\n    };\r\n    /**\r\n     * Get module name.\r\n     *\r\n     * @returns {string} - Returns the module name.\r\n     */\r\n    DataLabel.prototype.getModuleName = function () {\r\n        // Returns the module name\r\n        return 'DataLabel';\r\n    };\r\n    /**\r\n     * To destroy the dataLabel for series.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    DataLabel.prototype.destroy = function () {\r\n        // Destroy method performed here\r\n    };\r\n    return DataLabel;\r\n}());\r\nexport { DataLabel };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}