{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\r\n * PdfCacheCollection.ts class for EJ2-PDF\r\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\r\n * `Collection of the cached objects`.\r\n * @private\r\n */\nvar PdfCacheCollection = /** @class */function () {\n  // Constructors\n  /**\r\n   * Initializes a new instance of the `PdfCacheCollection` class.\r\n   * @private\r\n   */\n  function PdfCacheCollection() {\n    this.referenceObjects = [];\n    this.pdfFontCollection = new Dictionary();\n  }\n  // Public methods\n  /**\r\n   * `Searches` for the similar cached object. If is not found - adds the object to the cache.\r\n   * @private\r\n   */\n  PdfCacheCollection.prototype.search = function (obj) {\n    var result = null;\n    var group = this.getGroup(obj);\n    if (group == null) {\n      group = this.createNewGroup();\n    } else if (group.length > 0) {\n      result = group[0];\n    }\n    group.push(obj);\n    return result;\n  };\n  // Implementation\n  /**\r\n   * `Creates` a new group.\r\n   * @private\r\n   */\n  PdfCacheCollection.prototype.createNewGroup = function () {\n    var group = [];\n    this.referenceObjects.push(group);\n    return group;\n  };\n  /**\r\n   * `Find and Return` a group.\r\n   * @private\r\n   */\n  PdfCacheCollection.prototype.getGroup = function (result) {\n    var group = null;\n    if (result !== null) {\n      var len = this.referenceObjects.length;\n      for (var i = 0; i < len; i++) {\n        if (this.referenceObjects.length > 0) {\n          var tGroup = this.referenceObjects[i];\n          if (tGroup.length > 0) {\n            var representative = tGroup[0];\n            if (result.equalsTo(representative)) {\n              group = tGroup;\n              break;\n            }\n          } else {\n            this.removeGroup(tGroup);\n          }\n        }\n        len = this.referenceObjects.length;\n      }\n    }\n    return group;\n  };\n  /**\r\n   * Remove a group from the storage.\r\n   */\n  PdfCacheCollection.prototype.removeGroup = function (group) {\n    if (group !== null) {\n      var index = this.referenceObjects.indexOf(group);\n      this.referenceObjects.slice(index, index + 1);\n    }\n  };\n  PdfCacheCollection.prototype.destroy = function () {\n    this.pdfFontCollection = undefined;\n    this.referenceObjects = undefined;\n  };\n  return PdfCacheCollection;\n}();\nexport { PdfCacheCollection };","map":{"version":3,"names":["Dictionary","PdfCacheCollection","referenceObjects","pdfFontCollection","prototype","search","obj","result","group","getGroup","createNewGroup","length","push","len","i","tGroup","representative","equalsTo","removeGroup","index","indexOf","slice","destroy","undefined"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-cache-collection.js"],"sourcesContent":["/**\r\n * PdfCacheCollection.ts class for EJ2-PDF\r\n */\r\nimport { Dictionary } from './../collections/dictionary';\r\n/**\r\n * `Collection of the cached objects`.\r\n * @private\r\n */\r\nvar PdfCacheCollection = /** @class */ (function () {\r\n    // Constructors\r\n    /**\r\n     * Initializes a new instance of the `PdfCacheCollection` class.\r\n     * @private\r\n     */\r\n    function PdfCacheCollection() {\r\n        this.referenceObjects = [];\r\n        this.pdfFontCollection = new Dictionary();\r\n    }\r\n    // Public methods\r\n    /**\r\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\r\n     * @private\r\n     */\r\n    PdfCacheCollection.prototype.search = function (obj) {\r\n        var result = null;\r\n        var group = this.getGroup(obj);\r\n        if (group == null) {\r\n            group = this.createNewGroup();\r\n        }\r\n        else if (group.length > 0) {\r\n            result = group[0];\r\n        }\r\n        group.push(obj);\r\n        return result;\r\n    };\r\n    // Implementation\r\n    /**\r\n     * `Creates` a new group.\r\n     * @private\r\n     */\r\n    PdfCacheCollection.prototype.createNewGroup = function () {\r\n        var group = [];\r\n        this.referenceObjects.push(group);\r\n        return group;\r\n    };\r\n    /**\r\n     * `Find and Return` a group.\r\n     * @private\r\n     */\r\n    PdfCacheCollection.prototype.getGroup = function (result) {\r\n        var group = null;\r\n        if (result !== null) {\r\n            var len = this.referenceObjects.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (this.referenceObjects.length > 0) {\r\n                    var tGroup = this.referenceObjects[i];\r\n                    if (tGroup.length > 0) {\r\n                        var representative = tGroup[0];\r\n                        if (result.equalsTo(representative)) {\r\n                            group = tGroup;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.removeGroup(tGroup);\r\n                    }\r\n                }\r\n                len = this.referenceObjects.length;\r\n            }\r\n        }\r\n        return group;\r\n    };\r\n    /**\r\n     * Remove a group from the storage.\r\n     */\r\n    PdfCacheCollection.prototype.removeGroup = function (group) {\r\n        if (group !== null) {\r\n            var index = this.referenceObjects.indexOf(group);\r\n            this.referenceObjects.slice(index, index + 1);\r\n        }\r\n    };\r\n    PdfCacheCollection.prototype.destroy = function () {\r\n        this.pdfFontCollection = undefined;\r\n        this.referenceObjects = undefined;\r\n    };\r\n    return PdfCacheCollection;\r\n}());\r\nexport { PdfCacheCollection };\r\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,6BAA6B;AACxD;AACA;AACA;AACA;AACA,IAAIC,kBAAkB,GAAG,aAAe,YAAY;EAChD;EACA;AACJ;AACA;AACA;EACI,SAASA,kBAAkBA,CAAA,EAAG;IAC1B,IAAI,CAACC,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACC,iBAAiB,GAAG,IAAIH,UAAU,CAAC,CAAC;EAC7C;EACA;EACA;AACJ;AACA;AACA;EACIC,kBAAkB,CAACG,SAAS,CAACC,MAAM,GAAG,UAAUC,GAAG,EAAE;IACjD,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACH,GAAG,CAAC;IAC9B,IAAIE,KAAK,IAAI,IAAI,EAAE;MACfA,KAAK,GAAG,IAAI,CAACE,cAAc,CAAC,CAAC;IACjC,CAAC,MACI,IAAIF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;MACvBJ,MAAM,GAAGC,KAAK,CAAC,CAAC,CAAC;IACrB;IACAA,KAAK,CAACI,IAAI,CAACN,GAAG,CAAC;IACf,OAAOC,MAAM;EACjB,CAAC;EACD;EACA;AACJ;AACA;AACA;EACIN,kBAAkB,CAACG,SAAS,CAACM,cAAc,GAAG,YAAY;IACtD,IAAIF,KAAK,GAAG,EAAE;IACd,IAAI,CAACN,gBAAgB,CAACU,IAAI,CAACJ,KAAK,CAAC;IACjC,OAAOA,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;EACIP,kBAAkB,CAACG,SAAS,CAACK,QAAQ,GAAG,UAAUF,MAAM,EAAE;IACtD,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAID,MAAM,KAAK,IAAI,EAAE;MACjB,IAAIM,GAAG,GAAG,IAAI,CAACX,gBAAgB,CAACS,MAAM;MACtC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,EAAEC,CAAC,EAAE,EAAE;QAC1B,IAAI,IAAI,CAACZ,gBAAgB,CAACS,MAAM,GAAG,CAAC,EAAE;UAClC,IAAII,MAAM,GAAG,IAAI,CAACb,gBAAgB,CAACY,CAAC,CAAC;UACrC,IAAIC,MAAM,CAACJ,MAAM,GAAG,CAAC,EAAE;YACnB,IAAIK,cAAc,GAAGD,MAAM,CAAC,CAAC,CAAC;YAC9B,IAAIR,MAAM,CAACU,QAAQ,CAACD,cAAc,CAAC,EAAE;cACjCR,KAAK,GAAGO,MAAM;cACd;YACJ;UACJ,CAAC,MACI;YACD,IAAI,CAACG,WAAW,CAACH,MAAM,CAAC;UAC5B;QACJ;QACAF,GAAG,GAAG,IAAI,CAACX,gBAAgB,CAACS,MAAM;MACtC;IACJ;IACA,OAAOH,KAAK;EAChB,CAAC;EACD;AACJ;AACA;EACIP,kBAAkB,CAACG,SAAS,CAACc,WAAW,GAAG,UAAUV,KAAK,EAAE;IACxD,IAAIA,KAAK,KAAK,IAAI,EAAE;MAChB,IAAIW,KAAK,GAAG,IAAI,CAACjB,gBAAgB,CAACkB,OAAO,CAACZ,KAAK,CAAC;MAChD,IAAI,CAACN,gBAAgB,CAACmB,KAAK,CAACF,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;IACjD;EACJ,CAAC;EACDlB,kBAAkB,CAACG,SAAS,CAACkB,OAAO,GAAG,YAAY;IAC/C,IAAI,CAACnB,iBAAiB,GAAGoB,SAAS;IAClC,IAAI,CAACrB,gBAAgB,GAAGqB,SAAS;EACrC,CAAC;EACD,OAAOtB,kBAAkB;AAC7B,CAAC,CAAC,CAAE;AACJ,SAASA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}