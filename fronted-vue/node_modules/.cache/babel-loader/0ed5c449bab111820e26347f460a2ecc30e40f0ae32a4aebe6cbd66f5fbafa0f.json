{"ast":null,"code":"/**\r\n * public Enum for `PdfFontStyle`.\r\n * @private\r\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n  /**\r\n   * Specifies the type of `Regular`.\r\n   * @private\r\n   */\n  PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n  /**\r\n   * Specifies the type of `Bold`.\r\n   * @private\r\n   */\n  PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n  /**\r\n   * Specifies the type of `Italic`.\r\n   * @private\r\n   */\n  PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n  /**\r\n   * Specifies the type of `Underline`.\r\n   * @private\r\n   */\n  PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n  /**\r\n   * Specifies the type of `Strikeout`.\r\n   * @private\r\n   */\n  PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\r\n * Specifies the font family from the standard font.\r\n * ```typescript\r\n * // create a new PDF document\r\n * let document : PdfDocument = new PdfDocument();\r\n * // add a new page to the document\r\n * let page1 : PdfPage = document.pages.add();\r\n * // create new standard font\r\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\r\n * // create black brush\r\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n * // draw the text\r\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\r\n * // save the document\r\n * document.save('output.pdf');\r\n * ```\r\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n  /**\r\n   * Specifies the `Helvetica` font.\r\n   */\n  PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n  /**\r\n   * Specifies the `Courier` font.\r\n   */\n  PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n  /**\r\n   * Specifies the `TimesRoman` font.\r\n   */\n  PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n  /**\r\n   * Specifies the `Symbol` font.\r\n   */\n  PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n  /**\r\n   * Specifies the `ZapfDingbats` font.\r\n   */\n  PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\r\n * public Enum for `PdfFontType`.\r\n * @private\r\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n  /**\r\n   * Specifies the type of `Standard`.\r\n   * @private\r\n   */\n  PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n  /**\r\n   * Specifies the type of `TrueType`.\r\n   * @private\r\n   */\n  PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n  /**\r\n   * Specifies the type of `TrueTypeEmbedded`.\r\n   * @private\r\n   */\n  PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\r\n * public Enum for `PdfWordWrapType`.\r\n * @private\r\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n  /**\r\n   * Specifies the type of `None`.\r\n   * @private\r\n   */\n  PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n  /**\r\n   * Specifies the type of `Word`.\r\n   * @private\r\n   */\n  PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n  /**\r\n   * Specifies the type of `WordOnly`.\r\n   * @private\r\n   */\n  PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n  /**\r\n   * Specifies the type of `Character`.\r\n   * @private\r\n   */\n  PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\r\n * public Enum for `PdfSubSuperScript`.\r\n * @private\r\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n  /**\r\n   * Specifies the type of `None`.\r\n   * @private\r\n   */\n  PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n  /**\r\n   * Specifies the type of `SuperScript`.\r\n   * @private\r\n   */\n  PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n  /**\r\n   * Specifies the type of `SubScript`.\r\n   * @private\r\n   */\n  PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\r\n * public Enum for `FontEncoding`.\r\n * @private\r\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n  /**\r\n   * Specifies the type of `Unknown`.\r\n   * @private\r\n   */\n  FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n  /**\r\n   * Specifies the type of `StandardEncoding`.\r\n   * @private\r\n   */\n  FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n  /**\r\n   * Specifies the type of `MacRomanEncoding`.\r\n   * @private\r\n   */\n  FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n  /**\r\n   * Specifies the type of `MacExpertEncoding`.\r\n   * @private\r\n   */\n  FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n  /**\r\n   * Specifies the type of `WinAnsiEncoding`.\r\n   * @private\r\n   */\n  FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n  /**\r\n   * Specifies the type of `PdfDocEncoding`.\r\n   * @private\r\n   */\n  FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n  /**\r\n   * Specifies the type of `IdentityH`.\r\n   * @private\r\n   */\n  FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\r\n * public Enum for `TtfCmapFormat`.\r\n * @private\r\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n  /**\r\n   * This is the Apple standard character to glyph index mapping table.\r\n   * @private\r\n   */\n  TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n  /**\r\n   * This is the Microsoft standard character to glyph index mapping table.\r\n   * @private\r\n   */\n  TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n  /**\r\n   * Format 6: Trimmed table mapping.\r\n   * @private\r\n   */\n  TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\r\n * Enumerator that implements CMAP encodings.\r\n * @private\r\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n  /**\r\n   * Unknown encoding.\r\n   * @private\r\n   */\n  TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n  /**\r\n   * When building a symbol font for Windows.\r\n   * @private\r\n   */\n  TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n  /**\r\n   * When building a Unicode font for Windows.\r\n   * @private\r\n   */\n  TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n  /**\r\n   * For font that will be used on a Macintosh.\r\n   * @private\r\n   */\n  TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\r\n * Ttf platform ID.\r\n * @private\r\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n  /**\r\n   * Apple platform.\r\n   * @private\r\n   */\n  TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n  /**\r\n   * Macintosh platform.\r\n   * @private\r\n   */\n  TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n  /**\r\n   * Iso platform.\r\n   * @private\r\n   */\n  TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n  /**\r\n   * Microsoft platform.\r\n   * @private\r\n   */\n  TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\r\n * Microsoft encoding ID.\r\n * @private\r\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n  /**\r\n   * Undefined encoding.\r\n   * @private\r\n   */\n  TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n  /**\r\n   * Unicode encoding.\r\n   * @private\r\n   */\n  TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\r\n * Macintosh encoding ID.\r\n * @private\r\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n  /**\r\n   * Roman encoding.\r\n   * @private\r\n   */\n  TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n  /**\r\n   * Japanese encoding.\r\n   * @private\r\n   */\n  TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n  /**\r\n   * Chinese encoding.\r\n   * @private\r\n   */\n  TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\r\n * Enumerator that implements font descriptor flags.\r\n * @private\r\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n  /**\r\n   * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\r\n   * @private\r\n   */\n  FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n  /**\r\n   * Glyphs have serifs, which are short strokes drawn at an angle on the top and\r\n   * bottom of glyph stems (as opposed to sans serif fonts, which do not).\r\n   * @private\r\n   */\n  FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n  /**\r\n   * Font contains glyphs outside the Adobe standard Latin character set. The\r\n   * flag and the nonsymbolic flag cannot both be set or both be clear.\r\n   * @private\r\n   */\n  FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n  /**\r\n   * Glyphs resemble cursive handwriting.\r\n   * @private\r\n   */\n  FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n  /**\r\n   * Font uses the Adobe standard Latin character set or a subset of it.\r\n   * @private\r\n   */\n  FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n  /**\r\n   * Glyphs have dominant vertical strokes that are slanted.\r\n   * @private\r\n   */\n  FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n  /**\r\n   * Bold font.\r\n   * @private\r\n   */\n  FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\r\n * true type font composite glyph flags.\r\n * @private\r\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n  /**\r\n   * The Arg1And2AreWords.\r\n   * @private\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n  /**\r\n   * The ArgsAreXyValues.\r\n   * @private\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n  /**\r\n   * The RoundXyToGrid.\r\n   * @private\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n  /**\r\n   * The WeHaveScale.\r\n   * @private\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n  /**\r\n   * The Reserved.\r\n   * @private\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n  /**\r\n   * The MoreComponents.\r\n   * @private\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n  /**\r\n   * The WeHaveAnXyScale.\r\n   * @private\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n  /**\r\n   * The WeHaveTwoByTwo\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n  /**\r\n   * The WeHaveInstructions.\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n  /**\r\n   * The UseMyMetrics.\r\n   */\n  TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));","map":{"version":3,"names":["PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js"],"sourcesContent":["/**\r\n * public Enum for `PdfFontStyle`.\r\n * @private\r\n */\r\nexport var PdfFontStyle;\r\n(function (PdfFontStyle) {\r\n    /**\r\n     * Specifies the type of `Regular`.\r\n     * @private\r\n     */\r\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\r\n    /**\r\n     * Specifies the type of `Bold`.\r\n     * @private\r\n     */\r\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\r\n    /**\r\n     * Specifies the type of `Italic`.\r\n     * @private\r\n     */\r\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\r\n    /**\r\n     * Specifies the type of `Underline`.\r\n     * @private\r\n     */\r\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\r\n    /**\r\n     * Specifies the type of `Strikeout`.\r\n     * @private\r\n     */\r\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\r\n})(PdfFontStyle || (PdfFontStyle = {}));\r\n/**\r\n * Specifies the font family from the standard font.\r\n * ```typescript\r\n * // create a new PDF document\r\n * let document : PdfDocument = new PdfDocument();\r\n * // add a new page to the document\r\n * let page1 : PdfPage = document.pages.add();\r\n * // create new standard font\r\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\r\n * // create black brush\r\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n * // draw the text\r\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\r\n * // save the document\r\n * document.save('output.pdf');\r\n * ```\r\n */\r\nexport var PdfFontFamily;\r\n(function (PdfFontFamily) {\r\n    /**\r\n     * Specifies the `Helvetica` font.\r\n     */\r\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\r\n    /**\r\n     * Specifies the `Courier` font.\r\n     */\r\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\r\n    /**\r\n     * Specifies the `TimesRoman` font.\r\n     */\r\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\r\n    /**\r\n     * Specifies the `Symbol` font.\r\n     */\r\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\r\n    /**\r\n     * Specifies the `ZapfDingbats` font.\r\n     */\r\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\r\n})(PdfFontFamily || (PdfFontFamily = {}));\r\n/**\r\n * public Enum for `PdfFontType`.\r\n * @private\r\n */\r\nexport var PdfFontType;\r\n(function (PdfFontType) {\r\n    /**\r\n     * Specifies the type of `Standard`.\r\n     * @private\r\n     */\r\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\r\n    /**\r\n     * Specifies the type of `TrueType`.\r\n     * @private\r\n     */\r\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\r\n    /**\r\n     * Specifies the type of `TrueTypeEmbedded`.\r\n     * @private\r\n     */\r\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\r\n})(PdfFontType || (PdfFontType = {}));\r\n/**\r\n * public Enum for `PdfWordWrapType`.\r\n * @private\r\n */\r\nexport var PdfWordWrapType;\r\n(function (PdfWordWrapType) {\r\n    /**\r\n     * Specifies the type of `None`.\r\n     * @private\r\n     */\r\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Specifies the type of `Word`.\r\n     * @private\r\n     */\r\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\r\n    /**\r\n     * Specifies the type of `WordOnly`.\r\n     * @private\r\n     */\r\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\r\n    /**\r\n     * Specifies the type of `Character`.\r\n     * @private\r\n     */\r\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\r\n})(PdfWordWrapType || (PdfWordWrapType = {}));\r\n/**\r\n * public Enum for `PdfSubSuperScript`.\r\n * @private\r\n */\r\nexport var PdfSubSuperScript;\r\n(function (PdfSubSuperScript) {\r\n    /**\r\n     * Specifies the type of `None`.\r\n     * @private\r\n     */\r\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Specifies the type of `SuperScript`.\r\n     * @private\r\n     */\r\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\r\n    /**\r\n     * Specifies the type of `SubScript`.\r\n     * @private\r\n     */\r\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\r\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\r\n/**\r\n * public Enum for `FontEncoding`.\r\n * @private\r\n */\r\nexport var FontEncoding;\r\n(function (FontEncoding) {\r\n    /**\r\n     * Specifies the type of `Unknown`.\r\n     * @private\r\n     */\r\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\r\n    /**\r\n     * Specifies the type of `StandardEncoding`.\r\n     * @private\r\n     */\r\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\r\n    /**\r\n     * Specifies the type of `MacRomanEncoding`.\r\n     * @private\r\n     */\r\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\r\n    /**\r\n     * Specifies the type of `MacExpertEncoding`.\r\n     * @private\r\n     */\r\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\r\n    /**\r\n     * Specifies the type of `WinAnsiEncoding`.\r\n     * @private\r\n     */\r\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\r\n    /**\r\n     * Specifies the type of `PdfDocEncoding`.\r\n     * @private\r\n     */\r\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\r\n    /**\r\n     * Specifies the type of `IdentityH`.\r\n     * @private\r\n     */\r\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\r\n})(FontEncoding || (FontEncoding = {}));\r\n/**\r\n * public Enum for `TtfCmapFormat`.\r\n * @private\r\n */\r\nexport var TtfCmapFormat;\r\n(function (TtfCmapFormat) {\r\n    /**\r\n     * This is the Apple standard character to glyph index mapping table.\r\n     * @private\r\n     */\r\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\r\n    /**\r\n     * This is the Microsoft standard character to glyph index mapping table.\r\n     * @private\r\n     */\r\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\r\n    /**\r\n     * Format 6: Trimmed table mapping.\r\n     * @private\r\n     */\r\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\r\n})(TtfCmapFormat || (TtfCmapFormat = {}));\r\n/**\r\n * Enumerator that implements CMAP encodings.\r\n * @private\r\n */\r\nexport var TtfCmapEncoding;\r\n(function (TtfCmapEncoding) {\r\n    /**\r\n     * Unknown encoding.\r\n     * @private\r\n     */\r\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\r\n    /**\r\n     * When building a symbol font for Windows.\r\n     * @private\r\n     */\r\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\r\n    /**\r\n     * When building a Unicode font for Windows.\r\n     * @private\r\n     */\r\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\r\n    /**\r\n     * For font that will be used on a Macintosh.\r\n     * @private\r\n     */\r\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\r\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\r\n/**\r\n * Ttf platform ID.\r\n * @private\r\n */\r\nexport var TtfPlatformID;\r\n(function (TtfPlatformID) {\r\n    /**\r\n     * Apple platform.\r\n     * @private\r\n     */\r\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\r\n    /**\r\n     * Macintosh platform.\r\n     * @private\r\n     */\r\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\r\n    /**\r\n     * Iso platform.\r\n     * @private\r\n     */\r\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\r\n    /**\r\n     * Microsoft platform.\r\n     * @private\r\n     */\r\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\r\n})(TtfPlatformID || (TtfPlatformID = {}));\r\n/**\r\n * Microsoft encoding ID.\r\n * @private\r\n */\r\nexport var TtfMicrosoftEncodingID;\r\n(function (TtfMicrosoftEncodingID) {\r\n    /**\r\n     * Undefined encoding.\r\n     * @private\r\n     */\r\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\r\n    /**\r\n     * Unicode encoding.\r\n     * @private\r\n     */\r\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\r\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\r\n/**\r\n * Macintosh encoding ID.\r\n * @private\r\n */\r\nexport var TtfMacintoshEncodingID;\r\n(function (TtfMacintoshEncodingID) {\r\n    /**\r\n     * Roman encoding.\r\n     * @private\r\n     */\r\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\r\n    /**\r\n     * Japanese encoding.\r\n     * @private\r\n     */\r\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\r\n    /**\r\n     * Chinese encoding.\r\n     * @private\r\n     */\r\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\r\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\r\n/**\r\n * Enumerator that implements font descriptor flags.\r\n * @private\r\n */\r\nexport var FontDescriptorFlags;\r\n(function (FontDescriptorFlags) {\r\n    /**\r\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\r\n     * @private\r\n     */\r\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\r\n    /**\r\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\r\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\r\n     * @private\r\n     */\r\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\r\n    /**\r\n     * Font contains glyphs outside the Adobe standard Latin character set. The\r\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\r\n     * @private\r\n     */\r\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\r\n    /**\r\n     * Glyphs resemble cursive handwriting.\r\n     * @private\r\n     */\r\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\r\n    /**\r\n     * Font uses the Adobe standard Latin character set or a subset of it.\r\n     * @private\r\n     */\r\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\r\n    /**\r\n     * Glyphs have dominant vertical strokes that are slanted.\r\n     * @private\r\n     */\r\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\r\n    /**\r\n     * Bold font.\r\n     * @private\r\n     */\r\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\r\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\r\n/**\r\n * true type font composite glyph flags.\r\n * @private\r\n */\r\nexport var TtfCompositeGlyphFlags;\r\n(function (TtfCompositeGlyphFlags) {\r\n    /**\r\n     * The Arg1And2AreWords.\r\n     * @private\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\r\n    /**\r\n     * The ArgsAreXyValues.\r\n     * @private\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\r\n    /**\r\n     * The RoundXyToGrid.\r\n     * @private\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\r\n    /**\r\n     * The WeHaveScale.\r\n     * @private\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\r\n    /**\r\n     * The Reserved.\r\n     * @private\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\r\n    /**\r\n     * The MoreComponents.\r\n     * @private\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\r\n    /**\r\n     * The WeHaveAnXyScale.\r\n     * @private\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\r\n    /**\r\n     * The WeHaveTwoByTwo\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\r\n    /**\r\n     * The WeHaveInstructions.\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\r\n    /**\r\n     * The UseMyMetrics.\r\n     */\r\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\r\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}