{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { subtractThickness, valueToCoefficient, sum, redrawElement, isBreakLabel, ChartLocation, withInBounds, rotateTextSize } from '../../common/utils/helper';\nimport { subArray, inside, appendChildElement, stringToNumber } from '../../common/utils/helper';\nimport { Thickness, logBase, createZoomingLabels, getElement } from '../../common/utils/helper';\nimport { Size, Rect, measureText, TextOption, PathOption } from '@syncfusion/ej2-svg-base';\nimport { textElement, textTrim, getRotatedRectangleCoordinates, isRotatedRectIntersect, isZoomSet } from '../../common/utils/helper';\n/**\r\n * Specifies the Cartesian Axis Layout.\r\n */\nvar axisPadding = 10;\nvar CartesianAxisLayoutPanel = /** @class */function () {\n  /**\r\n   * Constructor for creating the chart.\r\n   *\r\n   * @param {Chart} chartModule - Specifies the Chart model.\r\n   * @private */\n  function CartesianAxisLayoutPanel(chartModule) {\n    this.chart = chartModule;\n    this.padding = 5;\n  }\n  /**\r\n   * Measure the axis size.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.measureAxis = function (rect) {\n    var chart = this.chart;\n    var chartAreaWidth = chart.chartArea.width ? stringToNumber(chart.chartArea.width, chart.availableSize.width) : null;\n    this.crossAt(chart);\n    this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n    this.initialClipRect = rect;\n    this.leftSize = 0;\n    this.rightSize = 0;\n    this.topSize = 0;\n    this.bottomSize = 0;\n    //Measure Axis size with initial Rect\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n    if (!this.chart.delayRedraw) {\n      this.calculateAxisSize(this.initialClipRect);\n    }\n    this.leftSize = 0;\n    this.rightSize = 0;\n    this.topSize = 0;\n    this.bottomSize = 0;\n    //Measure Axis size with series Rect\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n    if (chartAreaWidth) {\n      this.calculateFixedChartArea(chart, chartAreaWidth);\n    }\n    if (!this.chart.delayRedraw) {\n      chart.refreshAxis();\n      this.calculateAxisSize(this.seriesClipRect);\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.calculateFixedChartArea = function (chart, chartAreaWidth) {\n    this.seriesClipRect.width = chartAreaWidth;\n    this.seriesClipRect.x = chart.availableSize.width - chart.margin.right - chartAreaWidth - (chart.legendSettings.position === 'Right' ? chart.legendModule.legendBounds.width : 0);\n    for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n      var item = _a[_i];\n      this.seriesClipRect.x -= sum(item.farSizes);\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.measureRowAxis = function (chart, rect) {\n    var row;\n    this.calculateRowSize(rect);\n    for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n      var item = _a[_i];\n      row = item;\n      row.nearSizes = [];\n      row.farSizes = [];\n      row.insideNearSizes = [];\n      row.insideFarSizes = [];\n      this.arrangeAxis(row);\n      this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\n      if (this.leftSize < sum(row.nearSizes)) {\n        this.leftSize = sum(row.nearSizes);\n      }\n      if (this.rightSize < sum(row.farSizes)) {\n        this.rightSize = sum(row.farSizes);\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.measureColumnAxis = function (chart, rect) {\n    var column;\n    this.calculateColumnSize(rect);\n    for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n      var item = _a[_i];\n      column = item;\n      column.farSizes = [];\n      column.nearSizes = [];\n      column.insideNearSizes = [];\n      column.insideFarSizes = [];\n      this.arrangeAxis(column);\n      this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\n      if (this.bottomSize < sum(column.nearSizes)) {\n        this.bottomSize = sum(column.nearSizes);\n      }\n      if (this.topSize < sum(column.farSizes)) {\n        this.topSize = sum(column.farSizes);\n      }\n    }\n  };\n  /**\r\n   * Measure the column and row in chart.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.measureDefinition = function (definition, chart, size) {\n    var ele;\n    for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      ele = axis.scrollbarSettings.height;\n      axis.scrollBarHeight = chart.scrollBarModule && chart.zoomModule && chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? ele : 0;\n      axis.scrollBarHeight = chart.scrollBarModule && (chart.zoomModule && chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) || axis.scrollbarSettings.enable) ? ele : 0;\n      axis.getModule(chart);\n      axis.baseModule.calculateRangeAndInterval(size, axis);\n      definition.computeSize(axis, axis.scrollBarHeight, definition, chart);\n    }\n    if (definition.farSizes.length > 0) {\n      definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\n    }\n    if (definition.nearSizes.length > 0) {\n      definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\n    }\n  };\n  /**\r\n   * Measure the axis.\r\n   *\r\n   * @param {Rect} rect - The rect for measuring the axis.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.calculateAxisSize = function (rect) {\n    var chart = this.chart;\n    var row;\n    var column;\n    var definition;\n    var axis;\n    var nearCount = 0;\n    var farCount = 0;\n    var size = 0;\n    var x;\n    var y;\n    var axisOffset;\n    this.calculateRowSize(rect);\n    for (var i = 0, len = chart.rows.length; i < len; i++) {\n      row = chart.rows[i];\n      nearCount = 0;\n      farCount = 0;\n      for (var j = 0, len_1 = row.axes.length; j < len_1; j++) {\n        axis = row.axes[j];\n        axisOffset = axis.plotOffset;\n        if (axis.rect.height === 0) {\n          axis.rect.height = row.computedHeight;\n          size = 0;\n          for (var k = i + 1, len_2 = i + axis.span; k < len_2; k++) {\n            definition = chart.rows[k];\n            size += definition.computedHeight;\n          }\n          axis.rect.y = row.computedTop - size + (axis.plotOffsetTop ? axis.plotOffsetTop : axisOffset);\n          axis.rect.height = axis.rect.height + size - this.getAxisOffsetValue(axis.plotOffsetTop, axis.plotOffsetBottom, axis.plotOffset);\n          axis.rect.width = 0;\n        }\n        if (axis.isAxisOpposedPosition) {\n          if (axis.labelPosition === 'Inside' && axis.orientation === 'Vertical') {\n            x = rect.x + rect.width - sum(subArray(row.insideFarSizes, farCount));\n          } else {\n            x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n          }\n          axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n          farCount++;\n        } else {\n          if (axis.labelPosition === 'Inside' && axis.orientation === 'Vertical') {\n            x = rect.x + sum(subArray(row.insideNearSizes, nearCount));\n          } else {\n            x = rect.x - sum(subArray(row.nearSizes, nearCount));\n          }\n          axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n          nearCount++;\n        }\n      }\n    }\n    this.calculateColumnSize(rect);\n    for (var i = 0, len = chart.columns.length; i < len; i++) {\n      column = chart.columns[i];\n      nearCount = 0;\n      farCount = 0;\n      for (var j = 0, len_3 = column.axes.length; j < len_3; j++) {\n        axis = column.axes[j];\n        axisOffset = axis.plotOffset;\n        if (axis.rect.width === 0) {\n          for (var k = i, len_4 = i + axis.span; k < len_4; k++) {\n            definition = chart.columns[k];\n            axis.rect.width += definition.computedWidth;\n          }\n          axis.rect.x = column.computedLeft + (axis.plotOffsetLeft ? axis.plotOffsetLeft : axisOffset);\n          axis.rect.width -= this.getAxisOffsetValue(axis.plotOffsetLeft, axis.plotOffsetRight, axis.plotOffset);\n          axis.rect.height = 0;\n        }\n        if (axis.isAxisOpposedPosition) {\n          if (axis.labelPosition === 'Inside' && axis.orientation === 'Horizontal') {\n            y = rect.y + sum(subArray(column.insideFarSizes, farCount));\n          } else {\n            y = rect.y - sum(subArray(column.farSizes, farCount));\n          }\n          axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n          farCount++;\n        } else {\n          if (axis.labelPosition === 'Inside' && axis.orientation === 'Horizontal') {\n            y = rect.y + rect.height - sum(subArray(column.insideNearSizes, nearCount));\n          } else {\n            y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n          }\n          axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n          nearCount++;\n        }\n      }\n    }\n  };\n  /**\r\n   * Measure the axis.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.measure = function () {\n    var chart = this.chart;\n    var row;\n    var column;\n    var definition;\n    var actualIndex;\n    var span;\n    for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      //definition.Axes = axis;\n      if (axis.orientation === 'Vertical') {\n        chart.verticalAxes.push(axis);\n        actualIndex = this.getActualRow(axis);\n        row = chart.rows[actualIndex];\n        this.pushAxis(row, axis);\n        span = actualIndex + axis.span > chart.rows.length ? chart.rows.length : actualIndex + axis.span;\n        for (var j = actualIndex + 1; j < span; j++) {\n          definition = chart.rows[j];\n          definition.axes[row.axes.length - 1] = axis;\n          chart.rows[j] = definition;\n        }\n        chart.rows[actualIndex] = row;\n      } else {\n        chart.horizontalAxes.push(axis);\n        actualIndex = this.getActualColumn(axis);\n        column = chart.columns[actualIndex];\n        this.pushAxis(column, axis);\n        span = actualIndex + axis.span > chart.columns.length ? chart.columns.length : actualIndex + axis.span;\n        for (var j = actualIndex + 1; j < span; j++) {\n          definition = chart.columns[j];\n          definition.axes[column.axes.length - 1] = axis;\n          chart.columns[j] = definition;\n        }\n        chart.columns[actualIndex] = column;\n      }\n      axis.isRTLEnabled = chart.enableRtl;\n      axis.setIsInversedAndOpposedPosition();\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.getAxisOffsetValue = function (position1, position2, plotOffset) {\n    var rangeOffset = position1 ? position1 + (position2 ? position2 : plotOffset) : position2 ? position2 + plotOffset : 2 * plotOffset;\n    return rangeOffset;\n  };\n  CartesianAxisLayoutPanel.prototype.crossAt = function (chart) {\n    for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      if (axis.crossesAt === null) {\n        continue;\n      }\n      if (!axis.crossesInAxis) {\n        if (chart.requireInvertedAxis) {\n          axis.crossInAxis = axis.orientation === 'Horizontal' ? chart.primaryXAxis : chart.primaryYAxis;\n        } else {\n          axis.crossInAxis = axis.orientation === 'Horizontal' ? chart.primaryYAxis : chart.primaryXAxis;\n        }\n        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n        continue;\n      } else {\n        for (var i = 2, len = chart.axisCollections.length; i < len; i++) {\n          if (axis.crossesInAxis === chart.axisCollections[i].name) {\n            axis.crossInAxis = chart.axisCollections[i];\n            axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n            continue;\n          }\n        }\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.updateCrossAt = function (axis, crossAt) {\n    switch (axis.valueType) {\n      case 'DateTime':\n        {\n          var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n          };\n          var dateParser = this.chart.intl.getDateParser(option);\n          var dateFormatter = this.chart.intl.getDateFormat(option);\n          return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({\n            val: crossAt\n          }).val))));\n        }\n      case 'Category':\n        return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n      case 'Logarithmic':\n        return logBase(crossAt, axis.logBase);\n      default:\n        return crossAt;\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.pushAxis = function (definition, axis) {\n    for (var i = 0, len = definition.axes.length; i <= len; i++) {\n      if (!definition.axes[i]) {\n        definition.axes[i] = axis;\n        break;\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.arrangeAxis = function (definition) {\n    var axisCollection = [];\n    for (var i = 0, len = definition.axes.length; i <= len; i++) {\n      if (definition.axes[i]) {\n        axisCollection.push(definition.axes[i]);\n      }\n    }\n    definition.axes = axisCollection;\n  };\n  CartesianAxisLayoutPanel.prototype.getActualColumn = function (axis) {\n    var actualLength = this.chart.columns.length;\n    var pos = axis.columnIndex;\n    var result = pos >= actualLength ? actualLength - 1 : pos < 0 ? 0 : pos;\n    return result;\n  };\n  CartesianAxisLayoutPanel.prototype.getActualRow = function (axis) {\n    var actualLength = this.chart.rows.length;\n    var pos = axis.rowIndex;\n    var result = pos >= actualLength ? actualLength - 1 : pos < 0 ? 0 : pos;\n    return result;\n  };\n  /**\r\n   * Measure the row size.\r\n   *\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.calculateRowSize = function (rect) {\n    /** Calculate row size */\n    var chart = this.chart;\n    var row;\n    var rowTop = rect.y + rect.height;\n    var height = 0;\n    var remainingHeight = Math.max(0, rect.height);\n    for (var i = 0, len = chart.rows.length; i < len; i++) {\n      row = chart.rows[i];\n      if (row.height.indexOf('%') !== -1) {\n        height = Math.min(remainingHeight, rect.height * parseInt(row.height, 10) / 100);\n      } else {\n        height = Math.min(remainingHeight, parseInt(row.height, 10));\n      }\n      height = i !== len - 1 ? height : remainingHeight;\n      row.computedHeight = height;\n      rowTop -= height;\n      row.computedTop = rowTop;\n      remainingHeight -= height;\n    }\n  };\n  /**\r\n   * Measure the row size.\r\n   *\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.calculateColumnSize = function (rect) {\n    /** Calculate column size */\n    var chart = this.chart;\n    var column;\n    var columnLeft = rect.x;\n    var width = 0;\n    var remainingWidth = Math.max(0, rect.width);\n    for (var i = 0, len = chart.columns.length; i < len; i++) {\n      column = chart.columns[i];\n      if (column.width.indexOf('%') !== -1) {\n        width = Math.min(remainingWidth, rect.width * parseInt(column.width, 10) / 100);\n      } else {\n        width = Math.min(remainingWidth, parseInt(column.width, 10));\n      }\n      width = i !== len - 1 ? width : remainingWidth;\n      column.computedWidth = width;\n      column.computedLeft = columnLeft;\n      columnLeft += width;\n      remainingWidth -= width;\n    }\n  };\n  /**\r\n   * To render the axis element.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.renderAxes = function () {\n    var chart = this.chart;\n    var axis;\n    var axisElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisInsideCollection'\n    });\n    var axisLineElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisOutsideCollection'\n    });\n    if (axisLineElement) {\n      axisLineElement.setAttribute('aria-hidden', 'true');\n    }\n    var outsideElement;\n    var isInside;\n    for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n      var axisVisibility = true;\n      axis = chart.axisCollections[i];\n      this.element = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i + 'Inside'\n      });\n      if (this.element) {\n        this.element.setAttribute('aria-hidden', 'true');\n      }\n      outsideElement = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i + 'Outside'\n      });\n      if (outsideElement) {\n        outsideElement.setAttribute('aria-hidden', 'true');\n      }\n      for (var _i = 0, _a = axis.series; _i < _a.length; _i++) {\n        var series = _a[_i];\n        if (axis.name === series.yAxisName || axis.name === series.xAxisName) {\n          axisVisibility = series.visible;\n          if (series.category === 'Pareto' && !series.paretoOptions.showAxis && series.type === 'Line') {\n            axisVisibility = false;\n          }\n          if (!axisVisibility) {\n            continue;\n          } else {\n            break;\n          }\n        }\n      }\n      if (!axisVisibility) {\n        continue;\n      }\n      isInside = this.findAxisPosition(axis);\n      this.drawAxis(axis, i, isInside, outsideElement, axisElement, axisLineElement);\n    }\n    this.drawPaneLines(chart, axisElement);\n    appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n    return axisLineElement;\n  };\n  /**\r\n   * To render the axis scrollbar\r\n   *\r\n   * @param {Chart} chart chart\r\n   * @param {Axis} axis axis\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.renderScrollbar = function (chart, axis) {\n    var isZoomed = isNullOrUndefined(chart.zoomModule) ? false : chart.zoomModule.isZoomed;\n    if ((isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) || axis.scrollbarSettings.enable && (axis.zoomFactor <= 1 || axis.zoomPosition >= 0)) && !axis.zoomingScrollBar.isScrollUI) {\n      if (!chart.scrollElement) {\n        chart.scrollElement = redrawElement(chart.redraw, chart.element.id + '_scrollElement') || createElement('div', {\n          id: chart.element.id + '_scrollElement'\n        });\n      }\n      appendChildElement(false, chart.scrollElement, axis.zoomingScrollBar.render(true), true);\n    } else if (axis.zoomFactor === 1 && axis.zoomPosition === 0 && axis.zoomingScrollBar.svgObject && !axis.scrollbarSettings.enable) {\n      axis.zoomingScrollBar.destroy();\n    } else if (axis.zoomingScrollBar.svgObject) {\n      axis.zoomingScrollBar.svgObject.style.top = (axis.isAxisOpposedPosition && axis.orientation === 'Horizontal' ? -16 : 0) + axis.rect.y + Math.max(0.5, axis.lineStyle.width / 2) + 'px';\n      axis.zoomingScrollBar.svgObject.style.left = (axis.isAxisOpposedPosition && axis.orientation !== 'Horizontal' ? 16 : 0) + axis.rect.x - (axis.orientation === 'Vertical' ? axis.scrollbarSettings.height : 0) + 'px';\n    }\n    if (axis.zoomingScrollBar.isScrollUI) {\n      axis.zoomingScrollBar.isScrollUI = false;\n    }\n  };\n  /**\r\n   * Draws pane lines for the specified chart.\r\n   *\r\n   * @param {Chart} chart -The chart for which pane lines are to be drawn.\r\n   * @param {Element} [axisElement] -Optional. The axis element to which the pane lines are associated.\r\n   * @returns {void}\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawPaneLines = function (chart, axisElement) {\n    this.element = chart.renderer.createGroup({\n      id: chart.element.id + 'DefinitionLine'\n    });\n    for (var j = 0, len = chart.rows.length; j < len; j++) {\n      var row = chart.rows[j];\n      if (row.border.color) {\n        this.drawBottomLine(row, j, true);\n      }\n    }\n    for (var j = 0, len = chart.columns.length; j < len; j++) {\n      var column = chart.columns[j];\n      if (column.border.color) {\n        this.drawBottomLine(column, j, false);\n      }\n    }\n    axisElement = axisElement ? axisElement : getElement(chart.element.id + 'AxisInsideCollection');\n    if (!this.chart.enableCanvas) {\n      axisElement.appendChild(this.element);\n    }\n  };\n  /**\r\n   * Draws an axis for the specified axis configuration.\r\n   *\r\n   * @param {Axis} axis -The axis configuration to be drawn.\r\n   * @param {number} index -The index of the axis.\r\n   * @param {boolean} isInside -Indicates whether the axis is inside or outside the plot area.\r\n   * @param {Element} outsideElement -The element where the axis should be drawn if it's outside the plot area.\r\n   * @param {Element} axisElement -The element representing the axis.\r\n   * @param {Element} axisLineElement -The element representing the axis line.\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawAxis = function (axis, index, isInside, outsideElement, axisElement, axisLineElement) {\n    axis.updateCrossValue();\n    var axisName = '';\n    if (axis.orientation === 'Horizontal') {\n      if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n        this.drawAxisLine(axis, index, axis.plotOffset, 0, 0, 0, axis.plotOffsetLeft, axis.plotOffsetRight, isInside ? outsideElement : this.element, axis.updatedRect);\n      }\n      axisName = 'X';\n    } else {\n      if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n        this.drawAxisLine(axis, index, 0, axis.plotOffset, axis.plotOffsetBottom, axis.plotOffsetTop, 0, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n      }\n      axisName = 'Y';\n    }\n    if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0 || axis.minorTickLines.width > 0 || axis.minorGridLines.width > 0) {\n      this['draw' + axisName + 'AxisGridLine'](axis, index, isInside || axis.tickPosition === 'Inside' ? outsideElement : this.element, axis.updatedRect);\n    }\n    if (axis.visible && axis.internalVisibility) {\n      this['draw' + axisName + 'AxisLabels'](axis, index, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      this['draw' + axisName + 'AxisBorder'](axis, index, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n      this['draw' + axisName + 'AxisTitle'](axis, index, isInside ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n    }\n    if (!this.chart.enableCanvas) {\n      axisElement.appendChild(this.element);\n      if (outsideElement && outsideElement.childNodes.length > 0) {\n        axisLineElement.appendChild(outsideElement);\n      }\n    }\n    if (this.chart.scrollBarModule && (this.chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming || axis.scrollbarSettings.enable)) {\n      this.renderScrollbar(this.chart, axis);\n    }\n  };\n  /**\r\n   * To find the axis position\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @returns {boolean} axis position\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.findAxisPosition = function (axis) {\n    return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n  };\n  /**\r\n   * To render the bootom line of the columns and rows\r\n   *\r\n   * @param {Row | Column} definition definition\r\n   * @param {number} index index\r\n   * @param {boolean} isRow isRow\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawBottomLine = function (definition, index, isRow) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var definitionName;\n    if (isRow) {\n      definition = definition;\n      y1 = y2 = definition.computedTop + definition.computedHeight;\n      x1 = this.seriesClipRect.x;\n      x2 = x1 + this.seriesClipRect.width;\n      definitionName = 'Row';\n    } else {\n      definition = definition;\n      x1 = x2 = definition.computedLeft;\n      y1 = this.seriesClipRect.y;\n      y2 = y1 + this.seriesClipRect.height;\n      definitionName = 'Column';\n    }\n    optionsLine = {\n      'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      'stroke-width': definition.border.width,\n      'stroke': definition.border.color\n    };\n    this.htmlObject = chart.renderer.drawLine(optionsLine);\n    this.element.appendChild(this.htmlObject);\n  };\n  /**\r\n   * To render the axis line\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {number} plotX plotX\r\n   * @param {number} plotY plotY\r\n   * @param {number} plotBottom plotBottom\r\n   * @param {number} plotTop plotTop\r\n   * @param {number} plotLeft plotLeft\r\n   * @param {number} plotRight plotRight\r\n   * @param {Element} parent parent\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawAxisLine = function (axis, index, plotX, plotY, plotBottom, plotTop, plotLeft, plotRight, parent, rect) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var element = getElement(chart.element.id + 'AxisLine_' + index);\n    var direction = element ? element.getAttribute('d') : '';\n    element = null;\n    optionsLine = {\n      'id': chart.element.id + 'AxisLine_' + index,\n      'd': 'M ' + (rect.x - plotX - plotLeft) + ' ' + (rect.y - plotY - plotTop) + ' L ' + (rect.x + rect.width + plotX + plotRight) + ' ' + (rect.y + rect.height + plotY + plotBottom),\n      'stroke-dasharray': axis.lineStyle.dashArray,\n      'stroke-width': axis.lineStyle.width,\n      'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n    };\n    this.htmlObject = chart.renderer.drawPath(optionsLine);\n    appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, null, null, null, chart.duration);\n  };\n  /**\r\n   * To render the yAxis grid line\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Element} parent parent\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisGridLine = function (axis, index, parent, rect) {\n    var isLogAxis = axis.valueType === 'Logarithmic';\n    var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n    var tempInterval;\n    var pointY = 0;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorGridDirection;\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSize = isOpposed ? axis.majorTickLines.height : -axis.majorTickLines.height;\n    var axisLineSize = isOpposed ? axis.lineStyle.width * 0.5 : -axis.lineStyle.width * 0.5;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? axis.scrollBarHeight : -axis.scrollBarHeight : 0;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var ticks = isTickInside ? rect.x - tickSize - axisLineSize : rect.x + tickSize + axisLineSize + scrollBarHeight;\n    var length = axis.visibleLabels.length;\n    var chartThemeStyle = this.chart.themeStyle;\n    if (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && length > 0 && !this.chart.stockChart) {\n      length += 1;\n    }\n    var minorGridLines = axis.minorGridLines;\n    var minorTickLines = axis.minorTickLines;\n    //Gridlines\n    for (var i = 0; i < length; i++) {\n      tempInterval = !axis.visibleLabels[i] ? axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel : axis.visibleLabels[i].value - ticksbwtLabel;\n      pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n      pointY = pointY * -1 + (rect.y + rect.height);\n      if (pointY >= rect.y && rect.y + rect.height >= pointY) {\n        if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointY)) {\n          majorGrid = 'M ' + this.seriesClipRect.x + ' ' + pointY + ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY;\n          this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n        }\n        majorTick = 'M ' + (rect.x + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' ' + pointY + ' L ' + ticks + ' ' + pointY;\n        this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n        if ((minorGridLines.width > 0 || minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n          if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n          }\n          minorGridDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n          this.renderGridLine(axis, index, minorGridDirection[0], minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, minorGridLines.dashArray);\n          this.renderGridLine(axis, index, minorGridDirection[1], minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n          if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval + axis.visibleRange.interval, rect, i, index, chartThemeStyle, parent);\n          }\n        }\n      }\n    }\n  };\n  /**\r\n   * To check the border of the axis\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {number} value value\r\n   * @returns {boolean} check the border of the axis\r\n   */\n  CartesianAxisLayoutPanel.prototype.isBorder = function (axis, index, value) {\n    var border = this.chart.chartArea.border;\n    var rect = this.seriesClipRect;\n    var orientation = axis.orientation;\n    var start = orientation === 'Horizontal' ? rect.x : rect.y;\n    var size = orientation === 'Horizontal' ? rect.width : rect.height;\n    var startIndex = orientation === 'Horizontal' ? 0 : axis.visibleLabels.length - 1;\n    var endIndex = orientation === 'Horizontal' ? axis.visibleLabels.length - 1 : 0;\n    if (axis.plotOffset > 0) {\n      return true;\n    } else if ((value === start || value === start + size) && (border.width <= 0 || border.color === 'transparent')) {\n      return true;\n    } else if (value !== start && index === startIndex || value !== start + size && index === endIndex) {\n      return true;\n    }\n    return false;\n  };\n  /**\r\n   * To render the yAxis label\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Element} parent parent\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisLabels = function (axis, index, parent, rect) {\n    var chart = this.chart;\n    var label;\n    var pointX = 0;\n    var pointY = 0;\n    var elementSize;\n    var labelSpace = axis.labelPadding;\n    var options;\n    var isAxisBreakLabel;\n    var isLabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    var RotatedWidth;\n    var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n    var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n    var angle = axis.angle % 360;\n    var isVerticalAngle = angle === -90 || angle === 90 || angle === 270 || angle === -270;\n    padding += isVerticalAngle ? isLabelInside ? 5 : -5 : 0;\n    padding = isOpposed ? padding : -padding;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight * (isOpposed ? 1 : -1) : 0;\n    var textHeight;\n    var textPadding;\n    var maxLineWidth;\n    var pixel = 10;\n    var isInverse = axis.isAxisInverse;\n    var previousEnd = isInverse ? rect.y : rect.y + rect.height;\n    var labelPadding;\n    var intervalLength;\n    var labelHeight;\n    var yAxisLabelX;\n    var isLabelOnAxisLineLeft = !isOpposed && !isLabelInside || isOpposed && isLabelInside;\n    if (isLabelInside) {\n      labelPadding = !isLabelOnAxisLineLeft ? -padding : padding;\n    } else {\n      labelPadding = !isLabelOnAxisLineLeft ? -padding + (chart.enableRtl ? -scrollBarHeight : scrollBarHeight) : padding + (chart.enableRtl ? -scrollBarHeight : scrollBarHeight);\n    }\n    var sizeWidth = [];\n    var breakLabelSizeWidth = [];\n    axis.visibleLabels.map(function (item) {\n      sizeWidth.push(item.size['width']);\n      breakLabelSizeWidth.push(item.breakLabelSize['width']);\n    });\n    var LabelMaxWidth = Math.max.apply(Math, sizeWidth);\n    var breakLabelMaxWidth = Math.max.apply(Math, breakLabelSizeWidth);\n    RotatedWidth = LabelMaxWidth;\n    if (angle >= -45 && angle <= 45 && angle !== 0) {\n      RotatedWidth = LabelMaxWidth * Math.cos(angle * Math.PI / 180);\n      if (RotatedWidth < 0) {\n        RotatedWidth = -RotatedWidth;\n      }\n    }\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      label = axis.visibleLabels[i];\n      isAxisBreakLabel = isBreakLabel(axis.visibleLabels[i].originalText);\n      elementSize = isAxisBreakLabel ? axis.visibleLabels[i].breakLabelSize : axis.visibleLabels[i].size;\n      pointY = valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height + (chart.stockChart ? 7 : 0);\n      pointY = Math.floor(pointY * -1 + (rect.y + rect.height));\n      textHeight = elementSize.height / 8 * axis.visibleLabels[i].text.length / 2;\n      textPadding = chart.requireInvertedAxis && axis.labelPosition === 'Inside' ? 0 : elementSize.height / 4 * 3 + 3;\n      intervalLength = rect.height / axis.visibleLabels.length;\n      labelHeight = (axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle !== 0 && elementSize.width > intervalLength ? intervalLength : elementSize.width;\n      pointY = isAxisBreakLabel ? axis.labelPosition === 'Inside' ? pointY - elementSize.height / 2 - textHeight + textPadding : pointY - textHeight : axis.labelPosition === 'Inside' ? pointY + textPadding : pointY;\n      if (axis.labelPosition === 'Inside' && (i === 0 && !axis.isInversed || i === len - 1 && axis.isInversed)) {\n        if (chart.stockChart) {\n          pointY -= textPadding;\n        } else {\n          pointY -= textPadding - (chart.requireInvertedAxis && axis.labelPosition === 'Inside' ? 0 : axis.opposedPosition ? -padding : padding);\n        }\n      }\n      if (axis.majorGridLines.width > axis.majorTickLines.width) {\n        maxLineWidth = axis.majorGridLines.width;\n      } else {\n        maxLineWidth = axis.majorTickLines.width;\n      }\n      if (axis.labelStyle.textAlignment === 'Far') {\n        pointY = pointY - maxLineWidth - pixel;\n      } else if (axis.labelStyle.textAlignment === 'Near') {\n        pointY = pointY + maxLineWidth + pixel;\n      }\n      // label X value adjustment (Start)\n      if (isLabelInside) {\n        yAxisLabelX = labelPadding + (angle === 0 ? elementSize.width : isAxisBreakLabel ? breakLabelMaxWidth : LabelMaxWidth) / 2;\n      } else {\n        yAxisLabelX = labelPadding - (angle === 0 ? elementSize.width : isAxisBreakLabel ? breakLabelMaxWidth : RotatedWidth) / 2;\n      }\n      pointX = isOpposed ? axis.scrollBarHeight !== 0 ? rect.x + axis.scrollBarHeight + padding - yAxisLabelX : rect.x - yAxisLabelX : rect.x + yAxisLabelX;\n      if (isVerticalAngle) {\n        pointX += isOpposed ? -10 : 10;\n      }\n      yAxisLabelX = labelPadding;\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, 'middle', label.text, '', 'middle', angle);\n      switch (axis.edgeLabelPlacement) {\n        case 'None':\n          break;\n        case 'Hide':\n          if ((i === 0 || isInverse && i === len - 1) && options.y > rect.y || (i === len - 1 || isInverse && i === 0) && options.y - elementSize.height * 0.5 < rect.y) {\n            options.text = '';\n          }\n          break;\n        case 'Shift':\n          if ((i === 0 || isInverse && i === len - 1) && options.y > rect.y + rect.height) {\n            options.y = pointY = rect.y + rect.height;\n          } else if ((i === len - 1 || isInverse && i === 0) && (options.y < rect.y || options.y - elementSize.height * 0.5 <= 0)) {\n            options.y = pointY = rect.y + elementSize.height * 0.5;\n          }\n          break;\n      }\n      // ------- Hide Calculation (Start) -------------\n      var previousYValue = options.y;\n      var currentYValue = options.y - labelHeight;\n      if (isAxisBreakLabel) {\n        previousYValue = options.y - labelHeight / 2;\n        currentYValue = options.y + labelHeight / 2;\n      }\n      if ((angle === 90 || angle === 270) && axis.labelIntersectAction === 'Hide' && i !== 0 && (!isInverse ? previousYValue >= previousEnd : currentYValue <= previousEnd)) {\n        continue;\n      }\n      previousEnd = isInverse ? previousYValue : currentYValue;\n      // ------- Hide Calculation (End) -------------\n      options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, false, chart.redraw, true, true, chart.duration, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisLabelFont, new ChartLocation(pointX, pointY));\n    }\n    if (!this.chart.enableCanvas) {\n      if (!chart.delayRedraw) {\n        appendChildElement(chart.enableCanvas, parent, labelElement, chart.redraw);\n      } else if (axis.visible && axis.internalVisibility) {\n        this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n      }\n    }\n  };\n  /**\r\n   * To get X value based on lineBreakAlignment for Y axis line break labels only.\r\n   *\r\n   * @param {number} x text x position\r\n   * @param {Axis} axis y axis values\r\n   * @param {number} textWidth axis label width\r\n   * @returns {number} returns suitable axis label x position\r\n   */\n  CartesianAxisLayoutPanel.prototype.getAxisLabelXvalue = function (x, axis, textWidth) {\n    var anchor = axis.lineBreakAlignment;\n    var isLabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    if (isOpposed && isLabelInside || !isOpposed && !isLabelInside) {\n      return anchor === 'Right' ? x : anchor === 'Center' ? x - textWidth / 2 : x - textWidth;\n    } else {\n      return anchor === 'Left' ? x : anchor === 'Center' ? x + textWidth / 2 : x + textWidth;\n    }\n  };\n  /**\r\n   * To render the yAxis label border.\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Element} parent parent\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisBorder = function (axis, index, parent, rect) {\n    if (axis.border.width > 0) {\n      var startY = void 0;\n      var pointY = void 0;\n      var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n      var isOpposed = axis.isAxisOpposedPosition;\n      scrollBarHeight = (isOpposed ? 1 : -1) * scrollBarHeight;\n      var gap = rect.height / axis.visibleRange.delta * (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval);\n      var endY = void 0;\n      var length_1 = axis.maxLabelSize.width + 10 + (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0);\n      var labelBorder = '';\n      var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? -0.5 : 0;\n      var endX = isOpposed && axis.labelPosition === 'Inside' || !isOpposed && axis.labelPosition === 'Outside' ? rect.x - length_1 + scrollBarHeight : rect.x + length_1 + scrollBarHeight;\n      for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n        pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n        pointY = (axis.isAxisInverse ? 1 - pointY : pointY) * rect.height;\n        if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n          startY = pointY * -1 + (rect.y + rect.height);\n          endY = pointY * -1 - gap + (rect.y + rect.height);\n        } else {\n          startY = pointY * -1 + gap / 2 + (rect.y + rect.height);\n          endY = pointY * -1 - gap / 2 + (rect.y + rect.height);\n        }\n        switch (axis.border.type) {\n          case 'Rectangle':\n          case 'WithoutTopBorder':\n            if (startY > rect.y + rect.height) {\n              labelBorder += 'M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n            } else if (Math.floor(rect.y) > endY) {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + rect.y + ' ';\n            } else {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              if (i === axis.visibleLabels.length - 1) {\n                labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              }\n            }\n            break;\n          case 'WithoutTopandBottomBorder':\n            if (!(startY > rect.y + rect.height) && !(endY < Math.floor(rect.y))) {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY;\n            }\n            break;\n        }\n      }\n      labelBorder += axis.border.type === 'Rectangle' ? 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + rect.y + ' ' + 'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + (rect.y + rect.height) + ' ' : '';\n      if (labelBorder !== '') {\n        this.createAxisBorderElement(axis, index, labelBorder, parent);\n      }\n    }\n    for (var i = 0; i < this.chart.visibleSeries.length; i++) {\n      if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule && this.chart.visibleSeries[i].visible) {\n        this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n        break;\n      }\n    }\n  };\n  /**\r\n   * To render the yAxis title\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Element} parent parent\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawYAxisTitle = function (axis, index, parent, rect) {\n    if (axis.title) {\n      var chart = this.chart;\n      var isRotated = false;\n      var isOpposed = axis.isAxisOpposedPosition;\n      var labelRotation = (axis.titleRotation == null ? isOpposed ? 90 : -90 : axis.titleRotation) % 360;\n      var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) + (axis.labelPosition === 'Inside' ? 0 : axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding);\n      padding = isOpposed ? padding + axis.scrollBarHeight : -padding - axis.scrollBarHeight;\n      if (labelRotation !== -90 && !isOpposed || labelRotation !== 90 && isOpposed) {\n        padding += axis.isAxisOpposedPosition ? axis.titleSize.width / 2 + axis.labelPadding : -axis.titleSize.width / 2 - axis.labelPadding;\n        isRotated = true;\n      }\n      var x = rect.x + padding;\n      var y = void 0;\n      var anchor = void 0;\n      if (axis.titleStyle.textAlignment === 'Center') {\n        anchor = 'middle';\n        y = rect.y + rect.height * 0.5;\n      } else if (axis.titleStyle.textAlignment === 'Near') {\n        anchor = axis.opposedPosition ? 'end' : 'start';\n        y = rect.height + rect.y;\n      } else {\n        anchor = axis.opposedPosition ? 'start' : 'end';\n        y = rect.y;\n      }\n      var titleSize = axis.titleSize.height * (axis.titleCollection.length - 1);\n      var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y + (isRotated ? -titleSize : -axis.labelPadding - titleSize), anchor, axis.titleCollection, 'rotate(' + labelRotation + ',' + x + ',' + y + ')', null, labelRotation);\n      var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitleFont.color, parent, null, null, null, null, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisTitleFont, new ChartLocation(x, y));\n      element.setAttribute('aria-hidden', 'true');\n    }\n  };\n  /**\r\n   * xAxis grid line calculation performed here\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Element} parent parent\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisGridLine = function (axis, index, parent, rect) {\n    var isLogAxis = axis.valueType === 'Logarithmic';\n    var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n    var tempInterval;\n    var pointX = 0;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorDirection;\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSize = isOpposed ? -axis.majorTickLines.height : axis.majorTickLines.height;\n    var axisLineSize = isOpposed ? -axis.lineStyle.width * 0.5 : axis.lineStyle.width * 0.5;\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? -axis.scrollBarHeight : axis.scrollBarHeight : 0;\n    var ticksbwtLabel = axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && !this.chart.stockChart ? 0.5 : 0;\n    var length = axis.visibleLabels.length;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var ticks = isTickInside ? rect.y - tickSize - axisLineSize : rect.y + tickSize + axisLineSize + scrollBarHeight;\n    var chartThemeStyle = this.chart.themeStyle;\n    if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks' && !this.chart.stockChart) {\n      length += 1;\n    }\n    //Gridlines\n    var numericIDs = this.calculateGridLineId(parent, length);\n    for (var i = 0; i < length; i++) {\n      if (axis.valueType !== 'DateTimeCategory') {\n        tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel;\n      } else {\n        tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n      }\n      pointX = valueToCoefficient(tempInterval, axis) * rect.width + rect.x;\n      if (pointX >= rect.x && rect.x + rect.width >= pointX) {\n        if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n          if (this.chart.redraw && this.chart.pointsAdded && axis.majorGridLines.width && !this.chart.pointsRemoved && this.chart.chartArea.border.width && !getElement(this.chart.element.id + '_MajorGridLine_' + index + '_' + i)) {\n            var pointXValue = valueToCoefficient(axis.visibleRange.max, axis) * rect.width + rect.x;\n            majorGrid = 'M ' + pointXValue + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) + ' L ' + pointXValue + ' ' + this.seriesClipRect.y;\n            this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray, numericIDs['MajorGridLine'] && numericIDs['MajorGridLine'].ids ? numericIDs['MajorGridLine'].ids[i] : null, numericIDs['MajorGridLine'] ? numericIDs['MajorGridLine'].isPointRemoved : false);\n            getElement(parent.id).appendChild(this.element.childNodes[this.element.childNodes.length - 1]);\n          }\n          majorGrid = 'M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) + ' L ' + pointX + ' ' + this.seriesClipRect.y;\n          this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray, numericIDs['MajorGridLine'] && numericIDs['MajorGridLine'].ids ? numericIDs['MajorGridLine'].ids[i] : null, numericIDs['MajorGridLine'] ? numericIDs['MajorGridLine'].isPointRemoved : false);\n        }\n        majorTick = 'M ' + pointX + ' ' + (rect.y + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' L ' + pointX + ' ' + ticks;\n        this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine, null, numericIDs['MajorTickLine'] && numericIDs['MajorTickLine'].ids ? numericIDs['MajorTickLine'].ids[i] : null, numericIDs['MajorTickLine'] ? numericIDs['MajorTickLine'].isPointRemoved : false);\n        if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n          if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n          }\n          minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n          this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray, numericIDs['MinorGridLine'] && numericIDs['MinorGridLine'].ids ? numericIDs['MinorGridLine'].ids[i] : null, numericIDs['MinorGridLine'] ? numericIDs['MinorGridLine'].isPointRemoved : false);\n          this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine, null, numericIDs['MinorTickLine'] && numericIDs['MinorTickLine'].ids ? numericIDs['MinorTickLine'].ids[i] : null, numericIDs['MinorTickLine'] ? numericIDs['MinorTickLine'].isPointRemoved : false);\n          if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval + axis.visibleRange.interval, rect, i, index, chartThemeStyle, parent);\n          }\n        }\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.calculateGridLineId = function (parent, length) {\n    var _this = this;\n    var numericIDs = {};\n    if (this.chart.pointsRemoved) {\n      var elementTypes = ['MajorGridLine', 'MajorTickLine', 'MinorGridLine', 'MinorTickLine'];\n      elementTypes.forEach(function (type) {\n        var parentElement = getElement(parent.id);\n        var elements = parentElement.querySelectorAll('[id*=\"_' + type + '_\"]');\n        var elementArray = [];\n        for (var i = 0; i < elements.length; i++) {\n          elementArray.push(elements[i]);\n        }\n        var len = type === 'MajorGridLine' && _this.chart.chartArea.border.width ? length - 2 : length;\n        len = type === 'MinorGridLine' || type === 'MinorTickLine' ? length - 1 : len;\n        if (elementArray.length > 0 && elementArray.length > len) {\n          var elementsLength = elementArray.length;\n          for (var k = 0; k < elementsLength - len; k++) {\n            if (elementArray[k]) {\n              parentElement.removeChild(elementArray[k]);\n            }\n            elementArray.shift();\n          }\n          var numericIds = elementArray.map(function (element) {\n            var parts = element.id.split('_');\n            return parseInt(parts[parts.length - 1], 10);\n          });\n          numericIDs[type] = {\n            ids: numericIds,\n            isPointRemoved: true\n          };\n        }\n      });\n    }\n    return numericIDs;\n  };\n  /**\r\n   * To render missing minor grid lines while zooming\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} tempInterval tempInterval\r\n   * @param {Rect} rect rect\r\n   * @param {number} i i\r\n   * @param {number} index index\r\n   * @param {IThemeStyle} chartThemeStyle chartThemeStyle\r\n   * @param {Element} parent parent\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.renderMinorGridOnZooming = function (axis, tempInterval, rect, i, index, chartThemeStyle, parent) {\n    var minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i, true);\n    this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', -1, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n    this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', -1, parent, chartThemeStyle.minorTickLine);\n  };\n  /**\r\n   * To calcualte the axis minor line\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} tempInterval tempInterval\r\n   * @param {Rect} rect rect\r\n   * @param {number} labelIndex labelIndex\r\n   * @param {boolean} isFirstLabel isFirstLabel\r\n   * @returns {string[]} axis minor line path\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, rect, labelIndex, isFirstLabel) {\n    var value = tempInterval;\n    var coor = 0;\n    var position = 0;\n    var range = axis.visibleRange;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var direction = [];\n    var tickSize = axis.isAxisOpposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n    var logStart;\n    var logEnd;\n    var logInterval = 1;\n    var logPosition = 1;\n    var ticksX = isTickInside ? rect.y - tickSize : rect.y + tickSize;\n    var ticksY = isTickInside ? rect.x + tickSize : rect.x - tickSize;\n    var minorGird = '';\n    var minorTick = '';\n    var isInverse = axis.isAxisInverse;\n    if (axis.valueType === 'Logarithmic') {\n      logStart = Math.pow(axis.logBase, value - range.interval);\n      logEnd = Math.pow(axis.logBase, value);\n      logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n      logPosition = logStart + logInterval;\n    }\n    if (axis.orientation === 'Horizontal') {\n      for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n        value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n        logPosition += logInterval;\n        if (inside(value, range)) {\n          position = (value - range.min) / (range.max - range.min);\n          position = Math.ceil((isInverse ? 1 - position : position) * rect.width);\n          coor = Math.floor(position + rect.x);\n          minorGird = minorGird.concat('M' + ' ' + coor + ' ' + this.seriesClipRect.y + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n          coor = Math.floor(position + rect.x);\n          minorTick = minorTick.concat('M' + ' ' + coor + ' ' + rect.y + 'L ' + coor + ' ' + (ticksX + axis.scrollBarHeight));\n        }\n      }\n    } else {\n      for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n        value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n        if (inside(value, range)) {\n          position = (value - range.min) / (range.max - range.min);\n          position = Math.ceil((isInverse ? 1 - position : position) * rect.height) * -1; // For inversed axis\n          coor = Math.floor(position + rect.y + rect.height);\n          minorGird = minorGird.concat('M' + ' ' + this.seriesClipRect.x + ' ' + coor + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor + ' ');\n          coor = Math.floor(position + rect.y + rect.height);\n          minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + (ticksY - axis.scrollBarHeight) + ' ' + coor + ' ');\n        }\n        logPosition += logInterval;\n      }\n    }\n    direction.push(minorGird);\n    direction.push(minorTick);\n    return direction;\n  };\n  /**\r\n   * To find the numeric value of the log\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} logPosition logPosition\r\n   * @param {number} value value\r\n   * @param {number} labelIndex labelIndex\r\n   * @param {boolean} isFirstLabel isFirstLabel\r\n   * @returns {number} value\r\n   */\n  CartesianAxisLayoutPanel.prototype.findLogNumeric = function (axis, logPosition, value, labelIndex, isFirstLabel) {\n    var range = axis.visibleRange;\n    var tempValue;\n    if (axis.valueType === 'Logarithmic') {\n      value = logBase(logPosition, axis.logBase);\n    } else if (axis.valueType === 'DateTime') {\n      tempValue = axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n      value = isFirstLabel ? value - tempValue : value + tempValue;\n    } else if (axis.valueType === 'DateTimeCategory') {\n      var padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n      value += ((axis.visibleLabels[labelIndex + 1] ? axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) - (axis.visibleLabels[labelIndex] ? axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) / (axis.minorTicksPerInterval + 1);\n    } else {\n      tempValue = range.interval / (axis.minorTicksPerInterval + 1);\n      value = isFirstLabel ? value - tempValue : value + tempValue;\n    }\n    return value;\n  };\n  /**\r\n   * To render the xAxis Labels\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Element} parent parent\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   * @private\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisLabels = function (axis, index, parent, rect) {\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var labelSpace = axis.labelPadding;\n    var labelHeight;\n    var elementSize;\n    var labelPadding;\n    var anchor;\n    var pixel = 10;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var islabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.isAxisOpposedPosition;\n    var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n    var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n    var angle = axis.angle % 360;\n    var isHorizontalAngle = angle === 0 || angle === -180 || angle === 180;\n    var options;\n    var labelWidth;\n    var isInverse = axis.isAxisInverse;\n    var isLeft;\n    var previousEnd = isInverse ? rect.x + rect.width : rect.x;\n    var width = 0;\n    var length = axis.visibleLabels.length;\n    var intervalLength;\n    var label;\n    var isAxisBreakLabel;\n    var scrollBarHeight = axis.scrollbarSettings.enable || !islabelInside && isNullOrUndefined(axis.crossesAt) && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? axis.scrollBarHeight : 0;\n    var newPoints = [];\n    var isRotatedLabelIntersect = false;\n    var textPoints = [];\n    var rotatedLabelSize = new Size(0, 0);\n    padding += angle === 90 || angle === 270 || angle === -90 || angle === -270 ? islabelInside ? 5 : -5 : 0;\n    var isLabelUnderAxisLine = !isOpposed && !islabelInside || isOpposed && islabelInside;\n    var axislabelElement = getElement(chart.element.id + 'AxisLabels' + index);\n    var pointsRemoved = this.removeAxisLabelElements(axis, axislabelElement);\n    var isEndAnchor = isLabelUnderAxisLine ? 360 >= angle && angle >= 180 || -1 >= angle && angle >= -180 : 1 <= angle && angle <= 180 || -181 >= angle && angle >= -360;\n    for (var i = 0, len = length; i < len; i++) {\n      label = axis.visibleLabels[i];\n      isAxisBreakLabel = isBreakLabel(label.originalText) || axis.labelIntersectAction === 'Wrap' && label.text.length > 1;\n      pointX = valueToCoefficient(label.value, axis) * rect.width + rect.x;\n      elementSize = label.size;\n      intervalLength = rect.width / length;\n      labelWidth = isAxisBreakLabel ? label.breakLabelSize.width : elementSize.width;\n      width = (axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle === 0 && labelWidth > intervalLength ? intervalLength : labelWidth;\n      labelHeight = elementSize.height / 4;\n      pointX -= isAxisBreakLabel || angle !== 0 ? 0 : width / 2;\n      // label X value adjustment for label rotation (Start)\n      if (angle !== 0) {\n        if (isAxisBreakLabel) {\n          pointX -= axis.lineBreakAlignment === 'Left' ? label.breakLabelSize.width / 2 : axis.lineBreakAlignment === 'Right' ? -(label.breakLabelSize.width / 2) : 0;\n        } else {\n          pointX -= angle === -90 || angle === 270 ? -labelHeight : angle === 90 || angle === -270 ? labelHeight : 0;\n        }\n      }\n      // label X value adjustment for label rotation (End)\n      if (axis.labelStyle.textAlignment === 'Far') {\n        pointX = pointX + width - pixel;\n      } else if (axis.labelStyle.textAlignment === 'Near') {\n        pointX = pointX - width + pixel;\n      }\n      // For line break label alignment like left, right & center in angle 0\n      if (isAxisBreakLabel && axis.lineBreakAlignment !== 'Center' && angle === 0) {\n        pointX += axis.lineBreakAlignment === 'Left' ? -(width / 2) : width / 2;\n      }\n      var paddingForBreakLabel = isAxisBreakLabel ? isHorizontalAngle ? axis.opposedPosition || islabelInside ? 0 : elementSize.height : label.breakLabelSize.width / 2 : 0;\n      padding = isAxisBreakLabel ? tickSpace + labelSpace + axis.lineStyle.width * 0.5 : padding;\n      // label Y value adjustment (Start)\n      if (islabelInside && angle) {\n        if (isAxisBreakLabel) {\n          pointY = isOpposed ? rect.y + padding + paddingForBreakLabel : rect.y - padding - paddingForBreakLabel;\n        } else {\n          pointY = isOpposed ? rect.y + padding + labelHeight : rect.y - padding - labelHeight;\n        }\n      } else {\n        if (isAxisBreakLabel) {\n          labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + paddingForBreakLabel) : padding + scrollBarHeight + (angle ? paddingForBreakLabel : 3 * labelHeight);\n        } else {\n          labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + (angle ? labelHeight : label.index > 1 ? 2 * labelHeight : 0)) : padding + scrollBarHeight + (angle ? 1 : 3) * labelHeight;\n        }\n        pointY = rect.y + labelPadding * label.index;\n      }\n      // label Y value adjustment (End)\n      if (isAxisBreakLabel) {\n        anchor = this.getAnchor(axis); // for break label self alignment\n      } else {\n        anchor = chart.enableRtl ? isEndAnchor ? '' : 'end' : chart.isRtlEnabled || isEndAnchor ? 'end' : '';\n      }\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor);\n      options.id = pointsRemoved && axislabelElement && axislabelElement.children[i] ? axislabelElement.children[i].id : options.id;\n      if (angle !== 0) {\n        rotatedLabelSize = rotateTextSize(label.labelStyle, label.originalText, angle, chart, chart.themeStyle.axisLabelFont);\n        isLeft = angle < 0 && angle > -90 || angle < -180 && angle > -270 || angle > 90 && angle < 180 || angle > 270 && angle < 360;\n      }\n      if (axis.edgeLabelPlacement) {\n        switch (axis.edgeLabelPlacement) {\n          case 'None':\n            break;\n          case 'Hide':\n            if ((i === 0 || isInverse && i === len - 1) && options.x < rect.x || (i === len - 1 || isInverse && i === 0) && options.x + (angle === 0 ? width : rotatedLabelSize.width) > rect.x + rect.width) {\n              continue;\n            }\n            break;\n          case 'Shift':\n            if ((i === 0 || isInverse && i === len - 1) && (options.x < rect.x || angle !== 0 && isLeft && options.x - rotatedLabelSize.width <= rect.x || axis.lineBreakAlignment === 'Center' && options.x - label.size.width / label.text.length / 2 < rect.x && angle === 0)) {\n              intervalLength -= rect.x - options.x;\n              if (anchor === '' && !isInverse && angle === 0) {\n                if (options.x <= 0) {\n                  pointX = options.x = 0;\n                } else {\n                  pointX = options.x;\n                }\n                intervalLength = rect.width / length;\n              } else if (isLeft && angle !== 0) {\n                intervalLength = rect.width / length;\n                if (rect.x + intervalLength > options.x + rotatedLabelSize.width) {\n                  options.x = pointX = rect.x + padding;\n                } else {\n                  options.x = pointX = rect.x + intervalLength - padding;\n                }\n              } else if (isAxisBreakLabel && axis.lineBreakAlignment === 'Center' && axis.labelPlacement === 'OnTicks' && angle === 0) {\n                var maxWidth = 0;\n                for (var i_1 = 0; i_1 < label.text.length; i_1++) {\n                  var breakLabelWidth = measureText(label.text[i_1], axis.labelStyle, chart.themeStyle.axisLabelFont).width;\n                  if (breakLabelWidth > maxWidth) {\n                    maxWidth = breakLabelWidth;\n                  }\n                }\n                options.x = pointX = rect.x + maxWidth / 2;\n              } else if (!(anchor === 'start' && options.x > 0)) {\n                options.x = pointX = !isHorizontalAngle ? rect.x + padding : rect.x;\n              }\n            } else if ((i === len - 1 || isInverse && i === 0) && (options.x + width > rect.x + rect.width && anchor !== 'end' && angle === 0 || angle !== 0 && !isLeft && options.x + rotatedLabelSize.width > rect.x + rect.width || anchor === 'end' && options.x > rect.x + rect.width)) {\n              if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim' && angle === 0) {\n                intervalLength -= options.x + width - (rect.x + rect.width);\n              } else if (angle !== 0) {\n                if (rotatedLabelSize.width < intervalLength) {\n                  intervalLength = rotatedLabelSize.width;\n                }\n              } else {\n                intervalLength = width;\n              }\n              if (angle !== 0) {\n                options.x = pointX = rect.x + rect.width - intervalLength + padding;\n              } else {\n                options.x = pointX = !isHorizontalAngle ? rect.x + rect.width - intervalLength / 2 : rect.x + rect.width - intervalLength;\n              }\n            }\n            break;\n        }\n      }\n      options.text = this.getLabelText(label, axis, intervalLength);\n      options.labelRotation = angle;\n      // ------- Hide Calculation (Start) -------------\n      // Currect label actual start value (Start)\n      var xValue = void 0;\n      var xValue2 = void 0;\n      if (isAxisBreakLabel && angle === 0) {\n        if (axis.lineBreakAlignment === 'Right') {\n          xValue = options.x - width;\n          xValue2 = options.x;\n        } else if (axis.lineBreakAlignment === 'Center') {\n          xValue = options.x - width / 2;\n          xValue2 = options.x + width / 2;\n        } else {\n          xValue = options.x;\n          xValue2 = options.x + width;\n        }\n      } else {\n        xValue = options.x;\n        xValue2 = options.x + width;\n      }\n      // Currect label actual start value (End)\n      if (angle === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 && (!isInverse ? xValue <= previousEnd : xValue2 >= previousEnd)) {\n        continue;\n      }\n      // Previous label actual end value (Start)\n      if (isAxisBreakLabel) {\n        if (axis.lineBreakAlignment === 'Right') {\n          previousEnd = isInverse ? options.x - width : options.x;\n        } else if (axis.lineBreakAlignment === 'Center') {\n          previousEnd = isInverse ? options.x - width / 2 : options.x + width / 2;\n        } else {\n          previousEnd = isInverse ? options.x : options.x + width;\n        }\n      } else {\n        previousEnd = isInverse ? options.x : options.x + width;\n      }\n      // Previous label actual end value (End)\n      // ------- Hide Calculation (End) -------------\n      // label Rotataion calculation (Start)\n      if (angle !== 0) {\n        var height = void 0;\n        var rect_1 = void 0;\n        if (isAxisBreakLabel) {\n          var xAdjustment = 0;\n          var yAdjustment = 0;\n          height = label.breakLabelSize.height;\n          yAdjustment = label.breakLabelSize.height - 4; // 4 for label bound correction\n          // xAdjustment (Start)\n          if (axis.lineBreakAlignment === 'Center') {\n            xAdjustment = -(label.breakLabelSize.width / 2);\n          } else if (axis.lineBreakAlignment === 'Right') {\n            xAdjustment = -label.breakLabelSize.width;\n          }\n          // xAdjustment (End)\n          if (isLabelUnderAxisLine) {\n            yAdjustment = label.breakLabelSize.height / (options.text.length + 1);\n          }\n          rect_1 = new Rect(options.x + xAdjustment, options.y - yAdjustment, label.breakLabelSize.width, height);\n        } else {\n          height = pointY - (options.y - label.size.height / 2);\n          rect_1 = new Rect(options.x, options.y - (label.size.height / 2 - 5), label.size.width, height);\n        }\n        var rectCoordinates = this.getRectanglePoints(rect_1);\n        var rectCenterX = isAxisBreakLabel ? rect_1.x + rect_1.width / 2 : pointX;\n        var rectCenterY = isAxisBreakLabel ? rect_1.y + rect_1.height / 2 : pointY - height / 2;\n        if (isAxisBreakLabel) {\n          options.transform = 'rotate(' + angle + ',' + rectCenterX + ',' + rectCenterY + ')';\n        } else {\n          options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n        }\n        newPoints.push(getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle));\n        isRotatedLabelIntersect = false;\n        if (axis.labelIntersectAction !== 'None') {\n          for (var index_1 = i; index_1 > 0; index_1--) {\n            if (newPoints[i] && newPoints[index_1 - 1] && isRotatedRectIntersect(newPoints[i], newPoints[index_1 - 1])) {\n              isRotatedLabelIntersect = true;\n              newPoints[i] = null;\n              break;\n            }\n          }\n        }\n        var rotateAngle = angle > 0 && angle < 90 || angle > 180 && angle < 270 || angle < -90 && angle > -180 || angle < -270 && angle > -360;\n        var textRect = new Rect(options.x, options.y - (elementSize.height / 2 + padding / 2), label.size.width, height);\n        var textRectCoordinates = this.getRectanglePoints(textRect);\n        var rectPoints = [];\n        rectPoints.push(new ChartLocation(rotateAngle ? this.chart.availableSize.width : this.padding, axis.rect.y));\n        rectPoints.push(new ChartLocation(rotateAngle ? this.chart.availableSize.width : this.padding, axis.rect.y + axis.maxLabelSize.height));\n        textPoints.push(getRotatedRectangleCoordinates(textRectCoordinates, rectCenterX, rectCenterY, angle));\n        var newRect = new Rect(0, axis.rect.y, this.chart.availableSize.width, axis.maxLabelSize.height * 2);\n        for (var k = 0; k < textPoints[i].length; k++) {\n          if (!axis.opposedPosition && !withInBounds(textPoints[i][k].x, textPoints[i][k].y, newRect) && typeof options.text === 'string') {\n            var interSectPoint = this.calculateIntersection(textPoints[i][0], textPoints[i][1], rectPoints[0], rectPoints[1]);\n            var rectPoint1 = rotateAngle ? this.chart.availableSize.width - pointX : pointX;\n            var rectPoint2 = interSectPoint.y - axis.rect.y;\n            var trimValue = Math.sqrt(rectPoint1 * rectPoint1 + rectPoint2 * rectPoint2);\n            options.text = textTrim(trimValue, label.text, label.labelStyle, chart.enableRtl, chart.themeStyle.axisLabelFont);\n          }\n        }\n      }\n      if (chart.pointsAdded && !chart.pointsRemoved && !getElement(options.id)) {\n        var optionsX = options.x;\n        options.x = rect.width + rect.width / (i ? i : 1);\n        var transform = options.transform;\n        options.transform = angle ? 'rotate(' + angle + ',' + options.x + ',' + parseFloat(options.transform.split(',')[2]) + ')' : '';\n        textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, axis.isAxisOpposedPosition !== (axis.labelPosition === 'Inside'), chart.redraw, true, null, null, null, label.size, isRotatedLabelIntersect, chart.enableCanvas, null, chart.themeStyle.axisLabelFont);\n        options.x = optionsX;\n        options.transform = transform;\n      }\n      // label Rotataion calculation (End)\n      var element = textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, axis.isAxisOpposedPosition !== (axis.labelPosition === 'Inside'), chart.redraw, true, null, chart.duration, null, label.size, isRotatedLabelIntersect, chart.enableCanvas, null, chart.themeStyle.axisLabelFont, new ChartLocation(parseFloat(options.transform.split(',')[1]), parseFloat(options.transform.split(',')[2])));\n      if (pointsRemoved) {\n        element.id = chart.element.id + index + '_AxisLabel_' + i;\n      }\n    }\n    if (!this.chart.enableCanvas) {\n      if (!chart.delayRedraw) {\n        parent.appendChild(labelElement);\n      } else if (axis.visible && axis.internalVisibility) {\n        this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n      }\n    }\n  };\n  CartesianAxisLayoutPanel.prototype.removeAxisLabelElements = function (axis, axislabelElement) {\n    if (this.chart.pointsRemoved && axislabelElement && axislabelElement.childNodes.length) {\n      var pointsRemoved = false;\n      if (axis.valueType.indexOf('Category') > -1) {\n        var visibleLabelTexts_1 = [];\n        axis.visibleLabels.map(function (label) {\n          if (typeof label.text !== 'string') {\n            visibleLabelTexts_1.push(label.text.join(''));\n          } else {\n            visibleLabelTexts_1.push(label.text);\n          }\n        });\n        for (var i = axislabelElement.childNodes.length - 1; i >= 0; i--) {\n          var childNode = axislabelElement.childNodes[i];\n          if (visibleLabelTexts_1.indexOf(childNode.textContent.trim()) === -1) {\n            axislabelElement.removeChild(childNode);\n            pointsRemoved = true;\n          }\n        }\n      } else if (axislabelElement.childNodes.length > axis.visibleLabels.length) {\n        for (var j = 0; j < axislabelElement.childNodes.length - axis.visibleLabels.length; j++) {\n          axislabelElement.removeChild(axislabelElement.childNodes[j]);\n          pointsRemoved = true;\n        }\n      }\n      return pointsRemoved;\n    }\n    return false;\n  };\n  CartesianAxisLayoutPanel.prototype.calculateIntersection = function (p1, p2, p3, p4) {\n    var c2x = p3.x - p4.x;\n    var c3x = p1.x - p2.x;\n    var c2y = p3.y - p4.y;\n    var c3y = p1.y - p2.y;\n    var d = c3x * c2y - c3y * c2x;\n    var u1 = p1.x * p2.y - p1.y * p2.x;\n    var u4 = p3.x * p4.y - p3.y * p4.x;\n    var px = (u1 * c2x - c3x * u4) / d;\n    var py = (u1 * c2y - c3y * u4) / d;\n    var p = {\n      x: px,\n      y: py\n    };\n    return p;\n  };\n  /**\r\n   * To get text anchor value for line break labels.\r\n   *\r\n   * @param {Axis} axis axis model\r\n   * @returns {string} returns text anchor\r\n   */\n  CartesianAxisLayoutPanel.prototype.getAnchor = function (axis) {\n    return axis.lineBreakAlignment === 'Center' ? 'middle' : this.chart.enableRtl ? axis.lineBreakAlignment === 'Left' ? 'end' : 'start' : axis.lineBreakAlignment === 'Left' ? 'start' : 'end';\n  };\n  /**\r\n   * Get rect coordinates\r\n   *\r\n   * @param {Rect} rect rect\r\n   * @returns {ChartLocation[]} rectangle points\r\n   */\n  CartesianAxisLayoutPanel.prototype.getRectanglePoints = function (rect) {\n    var point1 = new ChartLocation(rect.x, rect.y);\n    var point2 = new ChartLocation(rect.x + rect.width, rect.y);\n    var point3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n    var point4 = new ChartLocation(rect.x, rect.y + rect.height);\n    return [point1, point2, point3, point4];\n  };\n  /**\r\n   * To get axis label text\r\n   *\r\n   * @param {VisibleLabels} label label\r\n   * @param {Axis} axis axis\r\n   * @param {number} intervalLength intervalLength\r\n   * @returns {string | string[]} label or label collection\r\n   */\n  CartesianAxisLayoutPanel.prototype.getLabelText = function (label, axis, intervalLength) {\n    if (isBreakLabel(label.originalText)) {\n      var result = [];\n      var str = void 0;\n      for (var index = 0; index < label.text.length; index++) {\n        str = this.findAxisLabel(axis, label.text[index], intervalLength);\n        result.push(str);\n      }\n      return result;\n    } else {\n      return this.findAxisLabel(axis, label.text, intervalLength);\n    }\n  };\n  /**\r\n   * To render the x-axis label border.\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Element} parent parent\r\n   * @param {Rect} axisRect axisRect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisBorder = function (axis, index, parent, axisRect) {\n    if (axis.border.width > 0) {\n      var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n      var isOpposed = axis.isAxisOpposedPosition;\n      var startX = void 0;\n      var startY = axisRect.y + (isOpposed ? -1 : 1) * scrollBarHeight;\n      var padding = 10;\n      var pointX = void 0;\n      var gap = axisRect.width / axis.visibleRange.delta * (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval);\n      var endX = void 0;\n      var length_2 = axis.maxLabelSize.height + (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0);\n      var labelBorder = '';\n      var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? -0.5 : 0;\n      var endY = isOpposed && axis.labelPosition === 'Inside' || !isOpposed && axis.labelPosition === 'Outside' ? axisRect.y + length_2 + padding + scrollBarHeight : axisRect.y - length_2 - padding - scrollBarHeight;\n      for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n        pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n        pointX = (axis.isAxisInverse ? 1 - pointX : pointX) * axisRect.width;\n        if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n          startX = pointX + axisRect.x;\n          endX = pointX + gap + axisRect.x;\n        } else {\n          startX = pointX - gap * 0.5 + axisRect.x;\n          endX = pointX + gap * 0.5 + axisRect.x;\n        }\n        switch (axis.border.type) {\n          case 'Rectangle':\n          case 'WithoutTopBorder':\n            if (startX < axisRect.x && axis.labelPlacement !== 'OnTicks') {\n              labelBorder += 'M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n            } else if (Math.floor(endX) > axisRect.width + axisRect.x && !(axis.visibleLabels.length === 1) && !(i === axis.visibleLabels.length - 1)) {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ';\n            } else {\n              startX = i === 0 && axis.labelPlacement === 'OnTicks' ? axisRect.x : startX;\n              endX = i === axis.visibleLabels.length - 1 && axis.labelPlacement === 'OnTicks' ? endX - gap * 0.5 : endX;\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              if (i === 0) {\n                labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'M ' + startX + ' ' + endY + ' L ' + axisRect.x + ' ' + endY;\n              }\n              if (i === axis.visibleLabels.length - 1) {\n                labelBorder += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' + 'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY;\n              }\n            }\n            break;\n          case 'WithoutTopandBottomBorder':\n            if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY;\n            }\n            break;\n        }\n      }\n      labelBorder += axis.border.type === 'Rectangle' ? 'M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' + (axisRect.x + axisRect.width) + ' ' + startY : '';\n      if (labelBorder !== '') {\n        this.createAxisBorderElement(axis, index, labelBorder, parent);\n      }\n    }\n    for (var i = 0; i < this.chart.visibleSeries.length; i++) {\n      if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0 && this.chart.visibleSeries[i].visible) {\n        this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n        break;\n      }\n    }\n  };\n  /**\r\n   * To create border element of the axis\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {string} labelBorder labelBorder\r\n   * @param {Element} parent parent\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.createAxisBorderElement = function (axis, index, labelBorder, parent) {\n    var element = getElement(this.chart.element.id + '_BorderLine_' + index);\n    var direction = element ? element.getAttribute('d') : '';\n    var borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n    borderElement.style.pointerEvents = 'none';\n    appendChildElement(this.chart.enableCanvas, parent, borderElement, this.chart.redraw, false, 'x', 'y', null, direction, true, null, null, this.chart.duration);\n  };\n  /**\r\n   * To find the axis label of the intersect action\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {string} label label\r\n   * @param {number} width width\r\n   * @returns {string} label\r\n   */\n  CartesianAxisLayoutPanel.prototype.findAxisLabel = function (axis, label, width) {\n    return axis.labelIntersectAction === 'Trim' ? axis.angle % 360 === 0 && !axis.enableTrim ? textTrim(width, label, axis.labelStyle, this.chart.enableRtl, this.chart.themeStyle.axisLabelFont) : label : label;\n  };\n  /**\r\n   * X-Axis Title function performed\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Element} parent parent\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.drawXAxisTitle = function (axis, index, parent, rect) {\n    if (axis.title) {\n      var chart = this.chart;\n      var elementSize = measureText(axis.title, axis.titleStyle, this.chart.themeStyle.axisTitleFont);\n      var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight : 0;\n      var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) + (axis.labelPosition === 'Inside' ? 0 : axis.maxLabelSize.height + axis.multiLevelLabelHeight + axis.labelPadding);\n      var titleSize = axis.titleSize.height * (axis.titleCollection.length - 1);\n      padding = axis.isAxisOpposedPosition ? -(padding + elementSize.height / 4 + scrollBarHeight + titleSize) : padding + 3 * elementSize.height / 4 + scrollBarHeight;\n      var labelRotation = axis.titleRotation ? axis.titleRotation : 0;\n      var x = void 0;\n      var y = rect.y + padding;\n      var anchor = void 0;\n      if (axis.titleStyle.textAlignment === 'Center') {\n        anchor = 'middle';\n        x = rect.x + rect.width * 0.5;\n      } else if (axis.titleStyle.textAlignment === 'Near') {\n        anchor = 'start';\n        x = rect.x;\n      } else {\n        anchor = 'end';\n        x = rect.x + rect.width;\n      }\n      if (labelRotation !== 0) {\n        y += axis.opposedPosition ? -(axis.titleSize.height / 2 + elementSize.height / 4) : axis.titleSize.height / 2 - elementSize.height / 4;\n      }\n      var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y, anchor, axis.titleCollection, 'rotate(' + labelRotation + ',' + x + ',' + y + ')', null, labelRotation);\n      var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitleFont.color, parent, null, chart.redraw, chart.redraw, null, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisTitleFont, new ChartLocation(x, y));\n      element.setAttribute('aria-hidden', 'true');\n    }\n  };\n  /**\r\n   * To render the axis grid and tick lines(Both Major and Minor)\r\n   *\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {string} gridDirection gridDirection\r\n   * @param {MajorTickLinesModel | MinorTickLinesModel | MajorGridLinesModel | MinorGridLinesModel} gridModel gridModel\r\n   * @param {string} gridId gridId\r\n   * @param {number} gridIndex gridIndex\r\n   * @param {Element} parent parent\r\n   * @param {string} themeColor themeColor\r\n   * @param {string} dashArray dashArray\r\n   * @param {number} removeIndex removeIndex\r\n   * @param {boolean} isRemoved isRemoved\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.renderGridLine = function (axis, index, gridDirection, gridModel, gridId, gridIndex, parent, themeColor, dashArray, removeIndex, isRemoved) {\n    if (dashArray === void 0) {\n      dashArray = null;\n    }\n    if (removeIndex === void 0) {\n      removeIndex = null;\n    }\n    if (isRemoved === void 0) {\n      isRemoved = false;\n    }\n    var chart = this.chart;\n    var direction;\n    var element;\n    if (gridModel.width > 0 && axis.visible && axis.internalVisibility && gridDirection) {\n      element = getElement(chart.element.id + gridId + index + '_' + (isRemoved ? removeIndex : gridIndex));\n      direction = element ? element.getAttribute('d') : null;\n      element = null;\n      this.htmlObject = chart.renderer.drawPath(new PathOption(chart.element.id + gridId + index + '_' + (isRemoved ? removeIndex : gridIndex), 'transparent', gridModel.width, gridModel.color || themeColor, null, dashArray, gridDirection));\n      appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, true, null, null, chart.duration);\n      if (isRemoved) {\n        this.htmlObject.id = chart.element.id + gridId + index + '_' + gridIndex;\n      }\n    }\n  };\n  /**\r\n   * To Find the parent node of the axis\r\n   *\r\n   * @param {string} elementId elementId\r\n   * @param {Element} label label\r\n   * @param {number} index index\r\n   * @returns {Element} parent node of the axis\r\n   */\n  CartesianAxisLayoutPanel.prototype.findParentNode = function (elementId, label, index) {\n    if (document.getElementById(elementId + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n      return document.getElementById(elementId + 'AxisGroup' + index + 'Inside');\n    } else {\n      return document.getElementById(elementId + 'AxisGroup' + index + 'Outside');\n    }\n  };\n  /**\r\n   * Create Zooming Labels Function Called here\r\n   *\r\n   * @param {Chart} chart chart\r\n   * @param {Element} labelElement labelElement\r\n   * @param {Axis} axis axis\r\n   * @param {number} index index\r\n   * @param {Rect} rect rect\r\n   * @returns {void}\r\n   */\n  CartesianAxisLayoutPanel.prototype.createZoomingLabel = function (chart, labelElement, axis, index, rect) {\n    var parentNode = this.findParentNode(chart.element.id, labelElement, index);\n    labelElement.setAttribute('opacity', '0.3');\n    var zoomElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels_Zoom' + index\n    });\n    zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n    parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n    if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n      parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n    } else {\n      parentNode.appendChild(zoomElement);\n    }\n  };\n  return CartesianAxisLayoutPanel;\n}();\nexport { CartesianAxisLayoutPanel };","map":{"version":3,"names":["createElement","isNullOrUndefined","DataUtil","subtractThickness","valueToCoefficient","sum","redrawElement","isBreakLabel","ChartLocation","withInBounds","rotateTextSize","subArray","inside","appendChildElement","stringToNumber","Thickness","logBase","createZoomingLabels","getElement","Size","Rect","measureText","TextOption","PathOption","textElement","textTrim","getRotatedRectangleCoordinates","isRotatedRectIntersect","isZoomSet","axisPadding","CartesianAxisLayoutPanel","chartModule","chart","padding","prototype","measureAxis","rect","chartAreaWidth","chartArea","width","availableSize","crossAt","seriesClipRect","x","y","height","initialClipRect","leftSize","rightSize","topSize","bottomSize","measureRowAxis","measureColumnAxis","delayRedraw","calculateAxisSize","calculateFixedChartArea","refreshAxis","margin","right","legendSettings","position","legendModule","legendBounds","_i","_a","rows","length","item","farSizes","row","calculateRowSize","nearSizes","insideNearSizes","insideFarSizes","arrangeAxis","measureDefinition","computedHeight","column","calculateColumnSize","columns","computedWidth","definition","size","ele","axes","axis","scrollbarSettings","scrollBarHeight","scrollBarModule","zoomModule","zoomSettings","enableScrollbar","enableScrollbarOnZooming","isZoomed","zoomFactor","zoomPosition","enable","getModule","baseModule","calculateRangeAndInterval","computeSize","nearCount","farCount","axisOffset","i","len","j","len_1","plotOffset","k","len_2","span","computedTop","plotOffsetTop","getAxisOffsetValue","plotOffsetBottom","isAxisOpposedPosition","labelPosition","orientation","len_3","len_4","computedLeft","plotOffsetLeft","plotOffsetRight","measure","actualIndex","axisCollections","verticalAxes","push","getActualRow","pushAxis","horizontalAxes","getActualColumn","isRTLEnabled","enableRtl","setIsInversedAndOpposedPosition","position1","position2","rangeOffset","crossesAt","crossesInAxis","requireInvertedAxis","crossInAxis","primaryXAxis","primaryYAxis","updateCrossAt","name","valueType","option","skeleton","type","dateParser","intl","getDateParser","dateFormatter","getDateFormat","Date","parse","parseJson","val","parseFloat","labels","indexOf","axisCollection","actualLength","pos","columnIndex","result","rowIndex","rowTop","remainingHeight","Math","max","min","parseInt","columnLeft","remainingWidth","renderAxes","axisElement","renderer","createGroup","id","element","axisLineElement","setAttribute","outsideElement","isInside","axisVisibility","series","yAxisName","xAxisName","visible","category","paretoOptions","showAxis","findAxisPosition","drawAxis","drawPaneLines","enableCanvas","svgObject","redraw","renderScrollbar","zoomingScrollBar","isScrollUI","scrollElement","render","destroy","style","top","lineStyle","left","border","color","drawBottomLine","appendChild","index","updateCrossValue","axisName","internalVisibility","drawAxisLine","updatedRect","majorGridLines","majorTickLines","minorTickLines","minorGridLines","tickPosition","placeNextToAxisLine","childNodes","visibleRange","isRow","optionsLine","x1","x2","y1","y2","definitionName","htmlObject","drawLine","plotX","plotY","plotBottom","plotTop","plotLeft","plotRight","parent","direction","getAttribute","dashArray","themeStyle","axisLine","drawPath","duration","drawYAxisGridLine","isLogAxis","isCategoryAxis","tempInterval","pointY","majorGrid","majorTick","minorGridDirection","isOpposed","tickSize","axisLineSize","ticksbwtLabel","labelPlacement","isTickInside","ticks","visibleLabels","chartThemeStyle","stockChart","value","interval","isBorder","renderGridLine","majorGridLine","majorTickLine","minorTicksPerInterval","renderMinorGridOnZooming","drawAxisMinorLine","minorGridLine","minorTickLine","start","startIndex","endIndex","drawYAxisLabels","label","pointX","elementSize","labelSpace","labelPadding","options","isAxisBreakLabel","isLabelInside","RotatedWidth","tickSpace","angle","isVerticalAngle","labelElement","textHeight","textPadding","maxLineWidth","pixel","isInverse","isAxisInverse","previousEnd","intervalLength","labelHeight","yAxisLabelX","isLabelOnAxisLineLeft","sizeWidth","breakLabelSizeWidth","map","breakLabelSize","LabelMaxWidth","apply","breakLabelMaxWidth","cos","PI","originalText","floor","text","labelIntersectAction","isInversed","opposedPosition","labelStyle","textAlignment","edgeLabelPlacement","previousYValue","currentYValue","transform","axisLabelFont","createZoomingLabel","getAxisLabelXvalue","textWidth","anchor","lineBreakAlignment","drawYAxisBorder","startY","gap","delta","dateTimeInterval","endY","length_1","maxLabelSize","labelBorder","endX","createAxisBorderElement","visibleSeries","multiLevelLabels","multiLevelLabelModule","renderYAxisMultiLevelLabels","drawYAxisTitle","title","isRotated","labelRotation","titleRotation","titlePadding","multiLevelLabelHeight","titleSize","titleStyle","titleCollection","axisTitleFont","drawXAxisGridLine","minorDirection","numericIDs","calculateGridLineId","pointsAdded","pointsRemoved","pointXValue","ids","isPointRemoved","_this","elementTypes","forEach","parentElement","elements","querySelectorAll","elementArray","elementsLength","removeChild","shift","numericIds","parts","split","labelIndex","isFirstLabel","coor","range","logStart","logEnd","logInterval","logPosition","ticksX","ticksY","minorGird","minorTick","pow","findLogNumeric","ceil","concat","tempValue","drawXAxisLabels","islabelInside","isHorizontalAngle","labelWidth","isLeft","newPoints","isRotatedLabelIntersect","textPoints","rotatedLabelSize","isLabelUnderAxisLine","axislabelElement","removeAxisLabelElements","isEndAnchor","paddingForBreakLabel","getAnchor","isRtlEnabled","children","maxWidth","i_1","breakLabelWidth","getLabelText","xValue","xValue2","rect_1","xAdjustment","yAdjustment","rectCoordinates","getRectanglePoints","rectCenterX","rectCenterY","index_1","rotateAngle","textRect","textRectCoordinates","rectPoints","newRect","interSectPoint","calculateIntersection","rectPoint1","rectPoint2","trimValue","sqrt","optionsX","visibleLabelTexts_1","join","childNode","textContent","trim","p1","p2","p3","p4","c2x","c3x","c2y","c3y","d","u1","u4","px","py","p","point1","point2","point3","point4","str","findAxisLabel","drawXAxisBorder","axisRect","startX","length_2","renderXAxisMultiLevelLabels","borderElement","pointerEvents","enableTrim","drawXAxisTitle","gridDirection","gridModel","gridId","gridIndex","themeColor","removeIndex","isRemoved","findParentNode","elementId","document","getElementById","contains","parentNode","zoomElement","replaceChild"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-charts/src/chart/axis/cartesian-panel.js"],"sourcesContent":["import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\r\nimport { DataUtil } from '@syncfusion/ej2-data';\r\nimport { subtractThickness, valueToCoefficient, sum, redrawElement, isBreakLabel, ChartLocation, withInBounds, rotateTextSize } from '../../common/utils/helper';\r\nimport { subArray, inside, appendChildElement, stringToNumber } from '../../common/utils/helper';\r\nimport { Thickness, logBase, createZoomingLabels, getElement } from '../../common/utils/helper';\r\nimport { Size, Rect, measureText, TextOption, PathOption } from '@syncfusion/ej2-svg-base';\r\nimport { textElement, textTrim, getRotatedRectangleCoordinates, isRotatedRectIntersect, isZoomSet } from '../../common/utils/helper';\r\n/**\r\n * Specifies the Cartesian Axis Layout.\r\n */\r\nvar axisPadding = 10;\r\nvar CartesianAxisLayoutPanel = /** @class */ (function () {\r\n    /**\r\n     * Constructor for creating the chart.\r\n     *\r\n     * @param {Chart} chartModule - Specifies the Chart model.\r\n     * @private */\r\n    function CartesianAxisLayoutPanel(chartModule) {\r\n        this.chart = chartModule;\r\n        this.padding = 5;\r\n    }\r\n    /**\r\n     * Measure the axis size.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.measureAxis = function (rect) {\r\n        var chart = this.chart;\r\n        var chartAreaWidth = chart.chartArea.width ? stringToNumber(chart.chartArea.width, chart.availableSize.width) : null;\r\n        this.crossAt(chart);\r\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\r\n        this.initialClipRect = rect;\r\n        this.leftSize = 0;\r\n        this.rightSize = 0;\r\n        this.topSize = 0;\r\n        this.bottomSize = 0;\r\n        //Measure Axis size with initial Rect\r\n        this.measureRowAxis(chart, this.initialClipRect);\r\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\r\n        this.measureColumnAxis(chart, this.initialClipRect);\r\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\r\n        if (!this.chart.delayRedraw) {\r\n            this.calculateAxisSize(this.initialClipRect);\r\n        }\r\n        this.leftSize = 0;\r\n        this.rightSize = 0;\r\n        this.topSize = 0;\r\n        this.bottomSize = 0;\r\n        //Measure Axis size with series Rect\r\n        this.measureRowAxis(chart, this.initialClipRect);\r\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\r\n        this.measureColumnAxis(chart, this.initialClipRect);\r\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\r\n        if (chartAreaWidth) {\r\n            this.calculateFixedChartArea(chart, chartAreaWidth);\r\n        }\r\n        if (!this.chart.delayRedraw) {\r\n            chart.refreshAxis();\r\n            this.calculateAxisSize(this.seriesClipRect);\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.calculateFixedChartArea = function (chart, chartAreaWidth) {\r\n        this.seriesClipRect.width = chartAreaWidth;\r\n        this.seriesClipRect.x = chart.availableSize.width - chart.margin.right - chartAreaWidth -\r\n            (chart.legendSettings.position === 'Right' ? chart.legendModule.legendBounds.width : 0);\r\n        for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            this.seriesClipRect.x -= sum(item.farSizes);\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.measureRowAxis = function (chart, rect) {\r\n        var row;\r\n        this.calculateRowSize(rect);\r\n        for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            row = item;\r\n            row.nearSizes = [];\r\n            row.farSizes = [];\r\n            row.insideNearSizes = [];\r\n            row.insideFarSizes = [];\r\n            this.arrangeAxis(row);\r\n            this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight));\r\n            if (this.leftSize < sum(row.nearSizes)) {\r\n                this.leftSize = sum(row.nearSizes);\r\n            }\r\n            if (this.rightSize < sum(row.farSizes)) {\r\n                this.rightSize = sum(row.farSizes);\r\n            }\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.measureColumnAxis = function (chart, rect) {\r\n        var column;\r\n        this.calculateColumnSize(rect);\r\n        for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            column = item;\r\n            column.farSizes = [];\r\n            column.nearSizes = [];\r\n            column.insideNearSizes = [];\r\n            column.insideFarSizes = [];\r\n            this.arrangeAxis(column);\r\n            this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height));\r\n            if (this.bottomSize < sum(column.nearSizes)) {\r\n                this.bottomSize = sum(column.nearSizes);\r\n            }\r\n            if (this.topSize < sum(column.farSizes)) {\r\n                this.topSize = sum(column.farSizes);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Measure the column and row in chart.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.measureDefinition = function (definition, chart, size) {\r\n        var ele;\r\n        for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\r\n            var axis = _a[_i];\r\n            ele = axis.scrollbarSettings.height;\r\n            axis.scrollBarHeight = chart.scrollBarModule && chart.zoomModule && chart.zoomSettings.enableScrollbar &&\r\n                axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? ele : 0;\r\n            axis.scrollBarHeight = chart.scrollBarModule && (chart.zoomModule && chart.zoomSettings.enableScrollbar &&\r\n                axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0)\r\n                || axis.scrollbarSettings.enable) ? ele : 0;\r\n            axis.getModule(chart);\r\n            axis.baseModule.calculateRangeAndInterval(size, axis);\r\n            definition.computeSize(axis, axis.scrollBarHeight, definition, chart);\r\n        }\r\n        if (definition.farSizes.length > 0) {\r\n            definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\r\n        }\r\n        if (definition.nearSizes.length > 0) {\r\n            definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\r\n        }\r\n    };\r\n    /**\r\n     * Measure the axis.\r\n     *\r\n     * @param {Rect} rect - The rect for measuring the axis.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.calculateAxisSize = function (rect) {\r\n        var chart = this.chart;\r\n        var row;\r\n        var column;\r\n        var definition;\r\n        var axis;\r\n        var nearCount = 0;\r\n        var farCount = 0;\r\n        var size = 0;\r\n        var x;\r\n        var y;\r\n        var axisOffset;\r\n        this.calculateRowSize(rect);\r\n        for (var i = 0, len = chart.rows.length; i < len; i++) {\r\n            row = chart.rows[i];\r\n            nearCount = 0;\r\n            farCount = 0;\r\n            for (var j = 0, len_1 = row.axes.length; j < len_1; j++) {\r\n                axis = row.axes[j];\r\n                axisOffset = axis.plotOffset;\r\n                if (axis.rect.height === 0) {\r\n                    axis.rect.height = row.computedHeight;\r\n                    size = 0;\r\n                    for (var k = i + 1, len_2 = i + axis.span; k < len_2; k++) {\r\n                        definition = chart.rows[k];\r\n                        size += definition.computedHeight;\r\n                    }\r\n                    axis.rect.y = (row.computedTop - size) + (axis.plotOffsetTop ? axis.plotOffsetTop : axisOffset);\r\n                    axis.rect.height = (axis.rect.height + size) -\r\n                        (this.getAxisOffsetValue(axis.plotOffsetTop, axis.plotOffsetBottom, axis.plotOffset));\r\n                    axis.rect.width = 0;\r\n                }\r\n                if (axis.isAxisOpposedPosition) {\r\n                    if (axis.labelPosition === 'Inside' && axis.orientation === 'Vertical') {\r\n                        x = rect.x + rect.width - sum(subArray(row.insideFarSizes, farCount));\r\n                    }\r\n                    else {\r\n                        x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\r\n                    }\r\n                    axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\r\n                    farCount++;\r\n                }\r\n                else {\r\n                    if (axis.labelPosition === 'Inside' && axis.orientation === 'Vertical') {\r\n                        x = rect.x + sum(subArray(row.insideNearSizes, nearCount));\r\n                    }\r\n                    else {\r\n                        x = rect.x - sum(subArray(row.nearSizes, nearCount));\r\n                    }\r\n                    axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\r\n                    nearCount++;\r\n                }\r\n            }\r\n        }\r\n        this.calculateColumnSize(rect);\r\n        for (var i = 0, len = chart.columns.length; i < len; i++) {\r\n            column = chart.columns[i];\r\n            nearCount = 0;\r\n            farCount = 0;\r\n            for (var j = 0, len_3 = column.axes.length; j < len_3; j++) {\r\n                axis = column.axes[j];\r\n                axisOffset = axis.plotOffset;\r\n                if (axis.rect.width === 0) {\r\n                    for (var k = i, len_4 = (i + axis.span); k < len_4; k++) {\r\n                        definition = chart.columns[k];\r\n                        axis.rect.width += definition.computedWidth;\r\n                    }\r\n                    axis.rect.x = column.computedLeft + (axis.plotOffsetLeft ? axis.plotOffsetLeft : axisOffset);\r\n                    axis.rect.width -= (this.getAxisOffsetValue(axis.plotOffsetLeft, axis.plotOffsetRight, axis.plotOffset));\r\n                    axis.rect.height = 0;\r\n                }\r\n                if (axis.isAxisOpposedPosition) {\r\n                    if (axis.labelPosition === 'Inside' && axis.orientation === 'Horizontal') {\r\n                        y = rect.y + sum(subArray(column.insideFarSizes, farCount));\r\n                    }\r\n                    else {\r\n                        y = rect.y - sum(subArray(column.farSizes, farCount));\r\n                    }\r\n                    axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\r\n                    farCount++;\r\n                }\r\n                else {\r\n                    if (axis.labelPosition === 'Inside' && axis.orientation === 'Horizontal') {\r\n                        y = rect.y + rect.height - sum(subArray(column.insideNearSizes, nearCount));\r\n                    }\r\n                    else {\r\n                        y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\r\n                    }\r\n                    axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\r\n                    nearCount++;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Measure the axis.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.measure = function () {\r\n        var chart = this.chart;\r\n        var row;\r\n        var column;\r\n        var definition;\r\n        var actualIndex;\r\n        var span;\r\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\r\n            var axis = _a[_i];\r\n            //definition.Axes = axis;\r\n            if (axis.orientation === 'Vertical') {\r\n                chart.verticalAxes.push(axis);\r\n                actualIndex = this.getActualRow(axis);\r\n                row = chart.rows[actualIndex];\r\n                this.pushAxis(row, axis);\r\n                span = ((actualIndex + axis.span) > chart.rows.length ? chart.rows.length : (actualIndex + axis.span));\r\n                for (var j = actualIndex + 1; j < span; j++) {\r\n                    definition = chart.rows[j];\r\n                    definition.axes[row.axes.length - 1] = axis;\r\n                    chart.rows[j] = definition;\r\n                }\r\n                chart.rows[actualIndex] = row;\r\n            }\r\n            else {\r\n                chart.horizontalAxes.push(axis);\r\n                actualIndex = this.getActualColumn(axis);\r\n                column = chart.columns[actualIndex];\r\n                this.pushAxis(column, axis);\r\n                span = ((actualIndex + axis.span) > chart.columns.length ? chart.columns.length : (actualIndex + axis.span));\r\n                for (var j = actualIndex + 1; j < span; j++) {\r\n                    definition = chart.columns[j];\r\n                    definition.axes[column.axes.length - 1] = axis;\r\n                    chart.columns[j] = definition;\r\n                }\r\n                chart.columns[actualIndex] = column;\r\n            }\r\n            axis.isRTLEnabled = chart.enableRtl;\r\n            axis.setIsInversedAndOpposedPosition();\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.getAxisOffsetValue = function (position1, position2, plotOffset) {\r\n        var rangeOffset = position1 ? (position1 + (position2 ? position2 :\r\n            plotOffset)) : (position2 ? position2 + plotOffset : 2 * plotOffset);\r\n        return rangeOffset;\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.crossAt = function (chart) {\r\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\r\n            var axis = _a[_i];\r\n            if (axis.crossesAt === null) {\r\n                continue;\r\n            }\r\n            if (!axis.crossesInAxis) {\r\n                if (chart.requireInvertedAxis) {\r\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryXAxis : chart.primaryYAxis;\r\n                }\r\n                else {\r\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryYAxis : chart.primaryXAxis;\r\n                }\r\n                axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\r\n                continue;\r\n            }\r\n            else {\r\n                for (var i = 2, len = chart.axisCollections.length; i < len; i++) {\r\n                    if (axis.crossesInAxis === chart.axisCollections[i].name) {\r\n                        axis.crossInAxis = chart.axisCollections[i];\r\n                        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.updateCrossAt = function (axis, crossAt) {\r\n        switch (axis.valueType) {\r\n            case 'DateTime': {\r\n                var option = {\r\n                    skeleton: 'full',\r\n                    type: 'dateTime'\r\n                };\r\n                var dateParser = this.chart.intl.getDateParser(option);\r\n                var dateFormatter = this.chart.intl.getDateFormat(option);\r\n                return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: crossAt }).val))));\r\n            }\r\n            case 'Category':\r\n                return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\r\n            case 'Logarithmic':\r\n                return logBase(crossAt, axis.logBase);\r\n            default:\r\n                return crossAt;\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.pushAxis = function (definition, axis) {\r\n        for (var i = 0, len = definition.axes.length; i <= len; i++) {\r\n            if (!definition.axes[i]) {\r\n                definition.axes[i] = axis;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.arrangeAxis = function (definition) {\r\n        var axisCollection = [];\r\n        for (var i = 0, len = definition.axes.length; i <= len; i++) {\r\n            if (definition.axes[i]) {\r\n                axisCollection.push(definition.axes[i]);\r\n            }\r\n        }\r\n        definition.axes = axisCollection;\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.getActualColumn = function (axis) {\r\n        var actualLength = this.chart.columns.length;\r\n        var pos = axis.columnIndex;\r\n        var result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\r\n        return result;\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.getActualRow = function (axis) {\r\n        var actualLength = this.chart.rows.length;\r\n        var pos = axis.rowIndex;\r\n        var result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\r\n        return result;\r\n    };\r\n    /**\r\n     * Measure the row size.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.calculateRowSize = function (rect) {\r\n        /** Calculate row size */\r\n        var chart = this.chart;\r\n        var row;\r\n        var rowTop = rect.y + rect.height;\r\n        var height = 0;\r\n        var remainingHeight = Math.max(0, rect.height);\r\n        for (var i = 0, len = chart.rows.length; i < len; i++) {\r\n            row = chart.rows[i];\r\n            if (row.height.indexOf('%') !== -1) {\r\n                height = Math.min(remainingHeight, (rect.height * parseInt(row.height, 10) / 100));\r\n            }\r\n            else {\r\n                height = Math.min(remainingHeight, parseInt(row.height, 10));\r\n            }\r\n            height = (i !== (len - 1)) ? height : remainingHeight;\r\n            row.computedHeight = height;\r\n            rowTop -= height;\r\n            row.computedTop = rowTop;\r\n            remainingHeight -= height;\r\n        }\r\n    };\r\n    /**\r\n     * Measure the row size.\r\n     *\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.calculateColumnSize = function (rect) {\r\n        /** Calculate column size */\r\n        var chart = this.chart;\r\n        var column;\r\n        var columnLeft = rect.x;\r\n        var width = 0;\r\n        var remainingWidth = Math.max(0, rect.width);\r\n        for (var i = 0, len = chart.columns.length; i < len; i++) {\r\n            column = chart.columns[i];\r\n            if (column.width.indexOf('%') !== -1) {\r\n                width = Math.min(remainingWidth, (rect.width * parseInt(column.width, 10) / 100));\r\n            }\r\n            else {\r\n                width = Math.min(remainingWidth, parseInt(column.width, 10));\r\n            }\r\n            width = (i !== (len - 1)) ? width : remainingWidth;\r\n            column.computedWidth = width;\r\n            column.computedLeft = columnLeft;\r\n            columnLeft += width;\r\n            remainingWidth -= width;\r\n        }\r\n    };\r\n    /**\r\n     * To render the axis element.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.renderAxes = function () {\r\n        var chart = this.chart;\r\n        var axis;\r\n        var axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisInsideCollection' });\r\n        var axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\r\n        if (axisLineElement) {\r\n            axisLineElement.setAttribute('aria-hidden', 'true');\r\n        }\r\n        var outsideElement;\r\n        var isInside;\r\n        for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\r\n            var axisVisibility = true;\r\n            axis = chart.axisCollections[i];\r\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Inside' });\r\n            if (this.element) {\r\n                this.element.setAttribute('aria-hidden', 'true');\r\n            }\r\n            outsideElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Outside' });\r\n            if (outsideElement) {\r\n                outsideElement.setAttribute('aria-hidden', 'true');\r\n            }\r\n            for (var _i = 0, _a = axis.series; _i < _a.length; _i++) {\r\n                var series = _a[_i];\r\n                if (axis.name === series.yAxisName || axis.name === series.xAxisName) {\r\n                    axisVisibility = series.visible;\r\n                    if (series.category === 'Pareto' && !series.paretoOptions.showAxis && series.type === 'Line') {\r\n                        axisVisibility = false;\r\n                    }\r\n                    if (!axisVisibility) {\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!axisVisibility) {\r\n                continue;\r\n            }\r\n            isInside = this.findAxisPosition(axis);\r\n            this.drawAxis(axis, i, isInside, outsideElement, axisElement, axisLineElement);\r\n        }\r\n        this.drawPaneLines(chart, axisElement);\r\n        appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\r\n        return axisLineElement;\r\n    };\r\n    /**\r\n     * To render the axis scrollbar\r\n     *\r\n     * @param {Chart} chart chart\r\n     * @param {Axis} axis axis\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.renderScrollbar = function (chart, axis) {\r\n        var isZoomed = isNullOrUndefined(chart.zoomModule) ? false : chart.zoomModule.isZoomed;\r\n        if (((isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0)) || (axis.scrollbarSettings.enable &&\r\n            (axis.zoomFactor <= 1 || axis.zoomPosition >= 0))) &&\r\n            (!axis.zoomingScrollBar.isScrollUI)) {\r\n            if (!chart.scrollElement) {\r\n                chart.scrollElement = redrawElement(chart.redraw, chart.element.id + '_scrollElement') || createElement('div', { id: chart.element.id + '_scrollElement' });\r\n            }\r\n            appendChildElement(false, chart.scrollElement, axis.zoomingScrollBar.render(true), true);\r\n        }\r\n        else if (axis.zoomFactor === 1 && axis.zoomPosition === 0 && axis.zoomingScrollBar.svgObject && !axis.scrollbarSettings.enable) {\r\n            axis.zoomingScrollBar.destroy();\r\n        }\r\n        else if (axis.zoomingScrollBar.svgObject) {\r\n            axis.zoomingScrollBar.svgObject.style.top = (axis.isAxisOpposedPosition && axis.orientation === 'Horizontal' ? -16 : 0)\r\n                + axis.rect.y + Math.max(0.5, axis.lineStyle.width / 2) + 'px';\r\n            axis.zoomingScrollBar.svgObject.style.left = (axis.isAxisOpposedPosition && axis.orientation !== 'Horizontal' ? 16 : 0)\r\n                + axis.rect.x - (axis.orientation === 'Vertical' ? axis.scrollbarSettings.height : 0) + 'px';\r\n        }\r\n        if (axis.zoomingScrollBar.isScrollUI) {\r\n            axis.zoomingScrollBar.isScrollUI = false;\r\n        }\r\n    };\r\n    /**\r\n     * Draws pane lines for the specified chart.\r\n     *\r\n     * @param {Chart} chart -The chart for which pane lines are to be drawn.\r\n     * @param {Element} [axisElement] -Optional. The axis element to which the pane lines are associated.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawPaneLines = function (chart, axisElement) {\r\n        this.element = chart.renderer.createGroup({ id: chart.element.id + 'DefinitionLine' });\r\n        for (var j = 0, len = chart.rows.length; j < len; j++) {\r\n            var row = chart.rows[j];\r\n            if (row.border.color) {\r\n                this.drawBottomLine(row, j, true);\r\n            }\r\n        }\r\n        for (var j = 0, len = chart.columns.length; j < len; j++) {\r\n            var column = chart.columns[j];\r\n            if (column.border.color) {\r\n                this.drawBottomLine(column, j, false);\r\n            }\r\n        }\r\n        axisElement = axisElement ? axisElement : getElement(chart.element.id + 'AxisInsideCollection');\r\n        if (!this.chart.enableCanvas) {\r\n            axisElement.appendChild(this.element);\r\n        }\r\n    };\r\n    /**\r\n     * Draws an axis for the specified axis configuration.\r\n     *\r\n     * @param {Axis} axis -The axis configuration to be drawn.\r\n     * @param {number} index -The index of the axis.\r\n     * @param {boolean} isInside -Indicates whether the axis is inside or outside the plot area.\r\n     * @param {Element} outsideElement -The element where the axis should be drawn if it's outside the plot area.\r\n     * @param {Element} axisElement -The element representing the axis.\r\n     * @param {Element} axisLineElement -The element representing the axis line.\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawAxis = function (axis, index, isInside, outsideElement, axisElement, axisLineElement) {\r\n        axis.updateCrossValue();\r\n        var axisName = '';\r\n        if (axis.orientation === 'Horizontal') {\r\n            if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\r\n                this.drawAxisLine(axis, index, axis.plotOffset, 0, 0, 0, axis.plotOffsetLeft, axis.plotOffsetRight, isInside ? outsideElement : this.element, axis.updatedRect);\r\n            }\r\n            axisName = 'X';\r\n        }\r\n        else {\r\n            if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\r\n                this.drawAxisLine(axis, index, 0, axis.plotOffset, axis.plotOffsetBottom, axis.plotOffsetTop, 0, 0, isInside ? outsideElement : this.element, axis.updatedRect);\r\n            }\r\n            axisName = 'Y';\r\n        }\r\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0 || axis.minorTickLines.width > 0 ||\r\n            axis.minorGridLines.width > 0) {\r\n            this['draw' + axisName + 'AxisGridLine'](axis, index, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\r\n        }\r\n        if (axis.visible && axis.internalVisibility) {\r\n            this['draw' + axisName + 'AxisLabels'](axis, index, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\r\n            this['draw' + axisName + 'AxisBorder'](axis, index, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\r\n            this['draw' + axisName + 'AxisTitle'](axis, index, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\r\n        }\r\n        if (!this.chart.enableCanvas) {\r\n            axisElement.appendChild(this.element);\r\n            if (outsideElement && outsideElement.childNodes.length > 0) {\r\n                axisLineElement.appendChild(outsideElement);\r\n            }\r\n        }\r\n        if (this.chart.scrollBarModule && ((this.chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming) ||\r\n            axis.scrollbarSettings.enable)) {\r\n            this.renderScrollbar(this.chart, axis);\r\n        }\r\n    };\r\n    /**\r\n     * To find the axis position\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @returns {boolean} axis position\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.findAxisPosition = function (axis) {\r\n        return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\r\n    };\r\n    /**\r\n     * To render the bootom line of the columns and rows\r\n     *\r\n     * @param {Row | Column} definition definition\r\n     * @param {number} index index\r\n     * @param {boolean} isRow isRow\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawBottomLine = function (definition, index, isRow) {\r\n        var chart = this.chart;\r\n        var optionsLine = {};\r\n        var x1;\r\n        var x2;\r\n        var y1;\r\n        var y2;\r\n        var definitionName;\r\n        if (isRow) {\r\n            definition = definition;\r\n            y1 = y2 = definition.computedTop + definition.computedHeight;\r\n            x1 = this.seriesClipRect.x;\r\n            x2 = x1 + this.seriesClipRect.width;\r\n            definitionName = 'Row';\r\n        }\r\n        else {\r\n            definition = definition;\r\n            x1 = x2 = definition.computedLeft;\r\n            y1 = this.seriesClipRect.y;\r\n            y2 = y1 + this.seriesClipRect.height;\r\n            definitionName = 'Column';\r\n        }\r\n        optionsLine = {\r\n            'id': chart.element.id + '_AxisBottom_' + definitionName + index,\r\n            x1: x1,\r\n            y1: y1,\r\n            x2: x2,\r\n            y2: y2,\r\n            'stroke-width': definition.border.width,\r\n            'stroke': definition.border.color\r\n        };\r\n        this.htmlObject = chart.renderer.drawLine(optionsLine);\r\n        this.element.appendChild(this.htmlObject);\r\n    };\r\n    /**\r\n     * To render the axis line\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {number} plotX plotX\r\n     * @param {number} plotY plotY\r\n     * @param {number} plotBottom plotBottom\r\n     * @param {number} plotTop plotTop\r\n     * @param {number} plotLeft plotLeft\r\n     * @param {number} plotRight plotRight\r\n     * @param {Element} parent parent\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawAxisLine = function (axis, index, plotX, plotY, plotBottom, plotTop, plotLeft, plotRight, parent, rect) {\r\n        var chart = this.chart;\r\n        var optionsLine = {};\r\n        var element = getElement(chart.element.id + 'AxisLine_' + index);\r\n        var direction = element ? element.getAttribute('d') : '';\r\n        element = null;\r\n        optionsLine = {\r\n            'id': chart.element.id + 'AxisLine_' + index,\r\n            'd': 'M ' + (rect.x - plotX - plotLeft) + ' ' + (rect.y - plotY - plotTop) +\r\n                ' L ' + (rect.x + rect.width + plotX + plotRight) + ' ' + (rect.y + rect.height + plotY + plotBottom),\r\n            'stroke-dasharray': axis.lineStyle.dashArray,\r\n            'stroke-width': axis.lineStyle.width,\r\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\r\n        };\r\n        this.htmlObject = chart.renderer.drawPath(optionsLine);\r\n        appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, null, null, null, chart.duration);\r\n    };\r\n    /**\r\n     * To render the yAxis grid line\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Element} parent parent\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawYAxisGridLine = function (axis, index, parent, rect) {\r\n        var isLogAxis = axis.valueType === 'Logarithmic';\r\n        var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\r\n        var tempInterval;\r\n        var pointY = 0;\r\n        var majorGrid = '';\r\n        var majorTick = '';\r\n        var minorGridDirection;\r\n        var isOpposed = axis.isAxisOpposedPosition;\r\n        var tickSize = isOpposed ? axis.majorTickLines.height : -axis.majorTickLines.height;\r\n        var axisLineSize = (isOpposed) ? axis.lineStyle.width * 0.5 : -axis.lineStyle.width * 0.5;\r\n        var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ?\r\n            0.5 : 0;\r\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? axis.scrollBarHeight :\r\n            -axis.scrollBarHeight : 0;\r\n        var isTickInside = axis.tickPosition === 'Inside';\r\n        var ticks = isTickInside ? (rect.x - tickSize - axisLineSize) : (rect.x + tickSize + axisLineSize + scrollBarHeight);\r\n        var length = axis.visibleLabels.length;\r\n        var chartThemeStyle = this.chart.themeStyle;\r\n        if (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && length > 0 && !this.chart.stockChart) {\r\n            length += 1;\r\n        }\r\n        var minorGridLines = axis.minorGridLines;\r\n        var minorTickLines = axis.minorTickLines;\r\n        //Gridlines\r\n        for (var i = 0; i < length; i++) {\r\n            tempInterval = !axis.visibleLabels[i] ? (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel\r\n                : axis.visibleLabels[i].value - ticksbwtLabel;\r\n            pointY = valueToCoefficient(tempInterval, axis) * rect.height;\r\n            pointY = (pointY * -1) + (rect.y + rect.height);\r\n            if (pointY >= rect.y && (rect.y + rect.height) >= pointY) {\r\n                if ((inside(tempInterval, axis.visibleRange)) || this.isBorder(axis, i, pointY)) {\r\n                    majorGrid = 'M ' + this.seriesClipRect.x + ' ' + (pointY) +\r\n                        ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY;\r\n                    this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\r\n                }\r\n                majorTick = 'M ' + (rect.x + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' ' + pointY +\r\n                    ' L ' + (ticks) + ' ' + pointY;\r\n                this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\r\n                if ((minorGridLines.width > 0 || minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\r\n                    if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\r\n                        this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\r\n                    }\r\n                    minorGridDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\r\n                    this.renderGridLine(axis, index, minorGridDirection[0], minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, minorGridLines.dashArray);\r\n                    this.renderGridLine(axis, index, minorGridDirection[1], minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\r\n                    if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\r\n                        this.renderMinorGridOnZooming(axis, (tempInterval + axis.visibleRange.interval), rect, i, index, chartThemeStyle, parent);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * To check the border of the axis\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {number} value value\r\n     * @returns {boolean} check the border of the axis\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.isBorder = function (axis, index, value) {\r\n        var border = this.chart.chartArea.border;\r\n        var rect = this.seriesClipRect;\r\n        var orientation = axis.orientation;\r\n        var start = (orientation === 'Horizontal') ? rect.x : rect.y;\r\n        var size = (orientation === 'Horizontal') ? rect.width : rect.height;\r\n        var startIndex = (orientation === 'Horizontal') ? 0 : axis.visibleLabels.length - 1;\r\n        var endIndex = (orientation === 'Horizontal') ? axis.visibleLabels.length - 1 : 0;\r\n        if (axis.plotOffset > 0) {\r\n            return true;\r\n        }\r\n        else if ((value === start || value === (start + size)) && (border.width <= 0 || border.color === 'transparent')) {\r\n            return true;\r\n        }\r\n        else if ((value !== start && index === startIndex) || (value !== (start + size) && index === endIndex)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * To render the yAxis label\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Element} parent parent\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawYAxisLabels = function (axis, index, parent, rect) {\r\n        var chart = this.chart;\r\n        var label;\r\n        var pointX = 0;\r\n        var pointY = 0;\r\n        var elementSize;\r\n        var labelSpace = axis.labelPadding;\r\n        var options;\r\n        var isAxisBreakLabel;\r\n        var isLabelInside = axis.labelPosition === 'Inside';\r\n        var isOpposed = axis.isAxisOpposedPosition;\r\n        var RotatedWidth;\r\n        var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\r\n        var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\r\n        var angle = axis.angle % 360;\r\n        var isVerticalAngle = (angle === -90 || angle === 90 || angle === 270 || angle === -270);\r\n        padding += (isVerticalAngle) ? (isLabelInside ? 5 : -5) : 0;\r\n        padding = (isOpposed) ? padding : -padding;\r\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\r\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight * (isOpposed ? 1 : -1) : 0;\r\n        var textHeight;\r\n        var textPadding;\r\n        var maxLineWidth;\r\n        var pixel = 10;\r\n        var isInverse = axis.isAxisInverse;\r\n        var previousEnd = isInverse ? rect.y : (rect.y + rect.height);\r\n        var labelPadding;\r\n        var intervalLength;\r\n        var labelHeight;\r\n        var yAxisLabelX;\r\n        var isLabelOnAxisLineLeft = ((!isOpposed && !isLabelInside) || (isOpposed && isLabelInside));\r\n        if (isLabelInside) {\r\n            labelPadding = !isLabelOnAxisLineLeft ? -padding : padding;\r\n        }\r\n        else {\r\n            labelPadding = !isLabelOnAxisLineLeft ? -padding + (chart.enableRtl ? -scrollBarHeight : scrollBarHeight) :\r\n                padding + (chart.enableRtl ? -scrollBarHeight : scrollBarHeight);\r\n        }\r\n        var sizeWidth = [];\r\n        var breakLabelSizeWidth = [];\r\n        axis.visibleLabels.map(function (item) {\r\n            sizeWidth.push(item.size['width']);\r\n            breakLabelSizeWidth.push(item.breakLabelSize['width']);\r\n        });\r\n        var LabelMaxWidth = Math.max.apply(Math, sizeWidth);\r\n        var breakLabelMaxWidth = Math.max.apply(Math, breakLabelSizeWidth);\r\n        RotatedWidth = LabelMaxWidth;\r\n        if (angle >= -45 && angle <= 45 && angle !== 0) {\r\n            RotatedWidth = LabelMaxWidth * Math.cos(angle * Math.PI / 180);\r\n            if (RotatedWidth < 0) {\r\n                RotatedWidth = -RotatedWidth;\r\n            }\r\n        }\r\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\r\n            label = axis.visibleLabels[i];\r\n            isAxisBreakLabel = isBreakLabel(axis.visibleLabels[i].originalText);\r\n            elementSize = isAxisBreakLabel ? axis.visibleLabels[i].breakLabelSize : axis.visibleLabels[i].size;\r\n            pointY = (valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height) + (chart.stockChart ? 7 : 0);\r\n            pointY = Math.floor((pointY * -1) + (rect.y + rect.height));\r\n            textHeight = ((elementSize.height / 8) * axis.visibleLabels[i].text.length / 2);\r\n            textPadding = (chart.requireInvertedAxis && axis.labelPosition === 'Inside') ? 0 : ((elementSize.height / 4) * 3) + 3;\r\n            intervalLength = rect.height / axis.visibleLabels.length;\r\n            labelHeight = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle !== 0 &&\r\n                elementSize.width > intervalLength) ? intervalLength : elementSize.width;\r\n            pointY = (isAxisBreakLabel ? (axis.labelPosition === 'Inside' ? (pointY - (elementSize.height / 2) - textHeight + textPadding)\r\n                : (pointY - textHeight)) : (axis.labelPosition === 'Inside' ? pointY + textPadding : pointY));\r\n            if (axis.labelPosition === 'Inside' && ((i === 0 && !axis.isInversed) || (i === len - 1 && axis.isInversed))) {\r\n                if (chart.stockChart) {\r\n                    pointY -= (textPadding);\r\n                }\r\n                else {\r\n                    pointY -= (textPadding - ((chart.requireInvertedAxis && axis.labelPosition === 'Inside') ? 0 : (axis.opposedPosition ? -padding : padding)));\r\n                }\r\n            }\r\n            if (axis.majorGridLines.width > axis.majorTickLines.width) {\r\n                maxLineWidth = axis.majorGridLines.width;\r\n            }\r\n            else {\r\n                maxLineWidth = axis.majorTickLines.width;\r\n            }\r\n            if (axis.labelStyle.textAlignment === 'Far') {\r\n                pointY = pointY - maxLineWidth - pixel;\r\n            }\r\n            else if (axis.labelStyle.textAlignment === 'Near') {\r\n                pointY = pointY + maxLineWidth + pixel;\r\n            }\r\n            // label X value adjustment (Start)\r\n            if (isLabelInside) {\r\n                yAxisLabelX = labelPadding + ((angle === 0 ? elementSize.width :\r\n                    (isAxisBreakLabel ? breakLabelMaxWidth : LabelMaxWidth)) / 2);\r\n            }\r\n            else {\r\n                yAxisLabelX = labelPadding - ((angle === 0 ? elementSize.width :\r\n                    (isAxisBreakLabel ? breakLabelMaxWidth : RotatedWidth)) / 2);\r\n            }\r\n            pointX = isOpposed ? axis.scrollBarHeight !== 0 ? ((rect.x + axis.scrollBarHeight + padding) - yAxisLabelX) : (rect.x - yAxisLabelX) : (rect.x + yAxisLabelX);\r\n            if (isVerticalAngle) {\r\n                pointX += (isOpposed) ? -10 : 10;\r\n            }\r\n            yAxisLabelX = labelPadding;\r\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, 'middle', label.text, '', 'middle', angle);\r\n            switch (axis.edgeLabelPlacement) {\r\n                case 'None':\r\n                    break;\r\n                case 'Hide':\r\n                    if (((i === 0 || (isInverse && i === len - 1)) && options.y > rect.y) ||\r\n                        (((i === len - 1) || (isInverse && i === 0)) && options.y - elementSize.height * 0.5 < rect.y)) {\r\n                        options.text = '';\r\n                    }\r\n                    break;\r\n                case 'Shift':\r\n                    if ((i === 0 || (isInverse && i === len - 1)) && options.y > rect.y + rect.height) {\r\n                        options.y = pointY = rect.y + rect.height;\r\n                    }\r\n                    else if (((i === len - 1) || (isInverse && i === 0)) && (options.y < rect.y || options.y - elementSize.height * 0.5 <= 0)) {\r\n                        options.y = pointY = rect.y + elementSize.height * 0.5;\r\n                    }\r\n                    break;\r\n            }\r\n            // ------- Hide Calculation (Start) -------------\r\n            var previousYValue = options.y;\r\n            var currentYValue = options.y - labelHeight;\r\n            if (isAxisBreakLabel) {\r\n                previousYValue = (options.y - (labelHeight / 2));\r\n                currentYValue = options.y + (labelHeight / 2);\r\n            }\r\n            if ((angle === 90 || angle === 270) && axis.labelIntersectAction === 'Hide' && i !== 0 &&\r\n                (!isInverse ? previousYValue >= previousEnd : currentYValue <= previousEnd)) {\r\n                continue;\r\n            }\r\n            previousEnd = isInverse ? previousYValue : currentYValue;\r\n            // ------- Hide Calculation (End) -------------\r\n            options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\r\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, false, chart.redraw, true, true, chart.duration, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisLabelFont, new ChartLocation(pointX, pointY));\r\n        }\r\n        if (!this.chart.enableCanvas) {\r\n            if (!chart.delayRedraw) {\r\n                appendChildElement(chart.enableCanvas, parent, labelElement, chart.redraw);\r\n            }\r\n            else if (axis.visible && axis.internalVisibility) {\r\n                this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * To get X value based on lineBreakAlignment for Y axis line break labels only.\r\n     *\r\n     * @param {number} x text x position\r\n     * @param {Axis} axis y axis values\r\n     * @param {number} textWidth axis label width\r\n     * @returns {number} returns suitable axis label x position\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.getAxisLabelXvalue = function (x, axis, textWidth) {\r\n        var anchor = axis.lineBreakAlignment;\r\n        var isLabelInside = axis.labelPosition === 'Inside';\r\n        var isOpposed = axis.isAxisOpposedPosition;\r\n        if ((isOpposed && isLabelInside) || (!isOpposed && !isLabelInside)) {\r\n            return (anchor === 'Right' ? x : (anchor === 'Center' ? (x - textWidth / 2) : (x - textWidth)));\r\n        }\r\n        else {\r\n            return (anchor === 'Left' ? x : (anchor === 'Center' ? (x + textWidth / 2) : (x + textWidth)));\r\n        }\r\n    };\r\n    /**\r\n     * To render the yAxis label border.\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Element} parent parent\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawYAxisBorder = function (axis, index, parent, rect) {\r\n        if (axis.border.width > 0) {\r\n            var startY = void 0;\r\n            var pointY = void 0;\r\n            var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\r\n            var isOpposed = axis.isAxisOpposedPosition;\r\n            scrollBarHeight = (isOpposed ? 1 : -1) * scrollBarHeight;\r\n            var gap = (rect.height / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\r\n                : axis.visibleRange.interval);\r\n            var endY = void 0;\r\n            var length_1 = axis.maxLabelSize.width + 10 + ((axis.tickPosition === axis.labelPosition) ?\r\n                axis.majorTickLines.height : 0);\r\n            var labelBorder = '';\r\n            var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\r\n            var endX = ((isOpposed && axis.labelPosition === 'Inside') || (!isOpposed\r\n                && axis.labelPosition === 'Outside')) ? rect.x - length_1 + scrollBarHeight : rect.x + length_1 + scrollBarHeight;\r\n            for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\r\n                pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\r\n                pointY = (axis.isAxisInverse ? (1 - pointY) : pointY) * rect.height;\r\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\r\n                    startY = (pointY * -1) + (rect.y + rect.height);\r\n                    endY = (pointY * -1) - (gap) + (rect.y + rect.height);\r\n                }\r\n                else {\r\n                    startY = (pointY * -1) + gap / 2 + (rect.y + rect.height);\r\n                    endY = (pointY * -1) - gap / 2 + (rect.y + rect.height);\r\n                }\r\n                switch (axis.border.type) {\r\n                    case 'Rectangle':\r\n                    case 'WithoutTopBorder':\r\n                        if (startY > (rect.y + rect.height)) {\r\n                            labelBorder += ('M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\r\n                        }\r\n                        else if (Math.floor(rect.y) > (endY)) {\r\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX\r\n                                + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + (rect.y) + ' ');\r\n                        }\r\n                        else {\r\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX +\r\n                                ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\r\n                            if (i === axis.visibleLabels.length - 1) {\r\n                                labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY + ' ' + 'L' + ' ' +\r\n                                    endX + ' ' + endY + ' ');\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'WithoutTopandBottomBorder':\r\n                        if (!(startY > rect.y + rect.height) && !((endY) < Math.floor(rect.y))) {\r\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX +\r\n                                ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' +\r\n                                'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            labelBorder += (axis.border.type === 'Rectangle') ? ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + rect.y + ' ' + 'L' + ' ' +\r\n                (rect.x + scrollBarHeight) + ' ' + (rect.y + rect.height) + ' ') : '';\r\n            if (labelBorder !== '') {\r\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\r\n            }\r\n        }\r\n        for (var i = 0; i < this.chart.visibleSeries.length; i++) {\r\n            if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule && this.chart.visibleSeries[i].visible) {\r\n                this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * To render the yAxis title\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Element} parent parent\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawYAxisTitle = function (axis, index, parent, rect) {\r\n        if (axis.title) {\r\n            var chart = this.chart;\r\n            var isRotated = false;\r\n            var isOpposed = axis.isAxisOpposedPosition;\r\n            var labelRotation = (axis.titleRotation == null ? (isOpposed ? 90 : -90) : axis.titleRotation) % 360;\r\n            var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) +\r\n                (axis.labelPosition === 'Inside' ? 0 :\r\n                    (axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding));\r\n            padding = isOpposed ? padding + axis.scrollBarHeight : -padding - axis.scrollBarHeight;\r\n            if ((labelRotation !== -90 && !isOpposed) || (labelRotation !== 90 && isOpposed)) {\r\n                padding += axis.isAxisOpposedPosition ? axis.titleSize.width / 2 + axis.labelPadding :\r\n                    -axis.titleSize.width / 2 - axis.labelPadding;\r\n                isRotated = true;\r\n            }\r\n            var x = rect.x + padding;\r\n            var y = void 0;\r\n            var anchor = void 0;\r\n            if (axis.titleStyle.textAlignment === 'Center') {\r\n                anchor = 'middle';\r\n                y = rect.y + rect.height * 0.5;\r\n            }\r\n            else if (axis.titleStyle.textAlignment === 'Near') {\r\n                anchor = axis.opposedPosition ? 'end' : 'start';\r\n                y = rect.height + rect.y;\r\n            }\r\n            else {\r\n                anchor = axis.opposedPosition ? 'start' : 'end';\r\n                y = rect.y;\r\n            }\r\n            var titleSize = (axis.titleSize.height * (axis.titleCollection.length - 1));\r\n            var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y + (isRotated ? -titleSize : -axis.labelPadding - titleSize), anchor, axis.titleCollection, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', null, labelRotation);\r\n            var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitleFont.color, parent, null, null, null, null, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisTitleFont, new ChartLocation(x, y));\r\n            element.setAttribute('aria-hidden', 'true');\r\n        }\r\n    };\r\n    /**\r\n     * xAxis grid line calculation performed here\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Element} parent parent\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawXAxisGridLine = function (axis, index, parent, rect) {\r\n        var isLogAxis = axis.valueType === 'Logarithmic';\r\n        var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\r\n        var tempInterval;\r\n        var pointX = 0;\r\n        var majorGrid = '';\r\n        var majorTick = '';\r\n        var minorDirection;\r\n        var isOpposed = axis.isAxisOpposedPosition;\r\n        var tickSize = (isOpposed) ? -axis.majorTickLines.height : axis.majorTickLines.height;\r\n        var axisLineSize = (isOpposed) ? -axis.lineStyle.width * 0.5 : axis.lineStyle.width * 0.5;\r\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? isOpposed ? -axis.scrollBarHeight :\r\n            axis.scrollBarHeight : 0;\r\n        var ticksbwtLabel = (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && !this.chart.stockChart) ?\r\n            0.5 : 0;\r\n        var length = axis.visibleLabels.length;\r\n        var isTickInside = axis.tickPosition === 'Inside';\r\n        var ticks = isTickInside ? (rect.y - tickSize - axisLineSize) : (rect.y + tickSize + axisLineSize + scrollBarHeight);\r\n        var chartThemeStyle = this.chart.themeStyle;\r\n        if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks' && !this.chart.stockChart) {\r\n            length += 1;\r\n        }\r\n        //Gridlines\r\n        var numericIDs = this.calculateGridLineId(parent, length);\r\n        for (var i = 0; i < length; i++) {\r\n            if (axis.valueType !== 'DateTimeCategory') {\r\n                tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel\r\n                    : (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\r\n            }\r\n            else {\r\n                tempInterval = axis.visibleLabels[i] ?\r\n                    axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\r\n            }\r\n            pointX = (valueToCoefficient(tempInterval, axis) * rect.width) + rect.x;\r\n            if (pointX >= rect.x && (rect.x + rect.width) >= pointX) {\r\n                if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\r\n                    if (this.chart.redraw && this.chart.pointsAdded && axis.majorGridLines.width && !this.chart.pointsRemoved && this.chart.chartArea.border.width && !getElement(this.chart.element.id + '_MajorGridLine_' + index + '_' + i)) {\r\n                        var pointXValue = (valueToCoefficient(axis.visibleRange.max, axis) * rect.width) + rect.x;\r\n                        majorGrid = 'M ' + pointXValue + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) +\r\n                            ' L ' + pointXValue + ' ' + this.seriesClipRect.y;\r\n                        this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray, (numericIDs['MajorGridLine'] && numericIDs['MajorGridLine'].ids ? numericIDs['MajorGridLine'].ids[i] : null), numericIDs['MajorGridLine'] ? numericIDs['MajorGridLine'].isPointRemoved : false);\r\n                        getElement(parent.id).appendChild(this.element.childNodes[this.element.childNodes.length - 1]);\r\n                    }\r\n                    majorGrid = 'M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) +\r\n                        ' L ' + pointX + ' ' + this.seriesClipRect.y;\r\n                    this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray, (numericIDs['MajorGridLine'] && numericIDs['MajorGridLine'].ids ? numericIDs['MajorGridLine'].ids[i] : null), numericIDs['MajorGridLine'] ? numericIDs['MajorGridLine'].isPointRemoved : false);\r\n                }\r\n                majorTick = 'M ' + (pointX) + ' ' + (rect.y + axisLineSize + (isTickInside ? scrollBarHeight : 0))\r\n                    + ' L ' + (pointX) + ' ' + ticks;\r\n                this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine, null, (numericIDs['MajorTickLine'] && numericIDs['MajorTickLine'].ids ? numericIDs['MajorTickLine'].ids[i] : null), numericIDs['MajorTickLine'] ? numericIDs['MajorTickLine'].isPointRemoved : false);\r\n                if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\r\n                    if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\r\n                        this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\r\n                    }\r\n                    minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\r\n                    this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray, (numericIDs['MinorGridLine'] && numericIDs['MinorGridLine'].ids ? numericIDs['MinorGridLine'].ids[i] : null), numericIDs['MinorGridLine'] ? numericIDs['MinorGridLine'].isPointRemoved : false);\r\n                    this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine, null, (numericIDs['MinorTickLine'] && numericIDs['MinorTickLine'].ids ? numericIDs['MinorTickLine'].ids[i] : null), numericIDs['MinorTickLine'] ? numericIDs['MinorTickLine'].isPointRemoved : false);\r\n                    if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\r\n                        this.renderMinorGridOnZooming(axis, (tempInterval + axis.visibleRange.interval), rect, i, index, chartThemeStyle, parent);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.calculateGridLineId = function (parent, length) {\r\n        var _this = this;\r\n        var numericIDs = {};\r\n        if (this.chart.pointsRemoved) {\r\n            var elementTypes = ['MajorGridLine', 'MajorTickLine', 'MinorGridLine', 'MinorTickLine'];\r\n            elementTypes.forEach(function (type) {\r\n                var parentElement = getElement(parent.id);\r\n                var elements = parentElement.querySelectorAll('[id*=\"_' + type + '_\"]');\r\n                var elementArray = [];\r\n                for (var i = 0; i < elements.length; i++) {\r\n                    elementArray.push(elements[i]);\r\n                }\r\n                var len = type === 'MajorGridLine' && _this.chart.chartArea.border.width ? length - 2 : length;\r\n                len = type === 'MinorGridLine' || type === 'MinorTickLine' ? length - 1 : len;\r\n                if (elementArray.length > 0 && elementArray.length > len) {\r\n                    var elementsLength = elementArray.length;\r\n                    for (var k = 0; k < elementsLength - len; k++) {\r\n                        if (elementArray[k]) {\r\n                            parentElement.removeChild(elementArray[k]);\r\n                        }\r\n                        elementArray.shift();\r\n                    }\r\n                    var numericIds = elementArray.map(function (element) {\r\n                        var parts = element.id.split('_');\r\n                        return parseInt(parts[parts.length - 1], 10);\r\n                    });\r\n                    numericIDs[type] = {\r\n                        ids: numericIds,\r\n                        isPointRemoved: true\r\n                    };\r\n                }\r\n            });\r\n        }\r\n        return numericIDs;\r\n    };\r\n    /**\r\n     * To render missing minor grid lines while zooming\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} tempInterval tempInterval\r\n     * @param {Rect} rect rect\r\n     * @param {number} i i\r\n     * @param {number} index index\r\n     * @param {IThemeStyle} chartThemeStyle chartThemeStyle\r\n     * @param {Element} parent parent\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.renderMinorGridOnZooming = function (axis, tempInterval, rect, i, index, chartThemeStyle, parent) {\r\n        var minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i, true);\r\n        this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', -1, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\r\n        this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', -1, parent, chartThemeStyle.minorTickLine);\r\n    };\r\n    /**\r\n     * To calcualte the axis minor line\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} tempInterval tempInterval\r\n     * @param {Rect} rect rect\r\n     * @param {number} labelIndex labelIndex\r\n     * @param {boolean} isFirstLabel isFirstLabel\r\n     * @returns {string[]} axis minor line path\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, rect, labelIndex, isFirstLabel) {\r\n        var value = tempInterval;\r\n        var coor = 0;\r\n        var position = 0;\r\n        var range = axis.visibleRange;\r\n        var isTickInside = axis.tickPosition === 'Inside';\r\n        var direction = [];\r\n        var tickSize = axis.isAxisOpposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\r\n        var logStart;\r\n        var logEnd;\r\n        var logInterval = 1;\r\n        var logPosition = 1;\r\n        var ticksX = isTickInside ? (rect.y - tickSize) : (rect.y + tickSize);\r\n        var ticksY = isTickInside ? (rect.x + tickSize) : (rect.x - tickSize);\r\n        var minorGird = '';\r\n        var minorTick = '';\r\n        var isInverse = axis.isAxisInverse;\r\n        if (axis.valueType === 'Logarithmic') {\r\n            logStart = Math.pow(axis.logBase, value - range.interval);\r\n            logEnd = Math.pow(axis.logBase, value);\r\n            logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\r\n            logPosition = logStart + logInterval;\r\n        }\r\n        if (axis.orientation === 'Horizontal') {\r\n            for (var j = 0; j < axis.minorTicksPerInterval; j++) {\r\n                value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\r\n                logPosition += logInterval;\r\n                if (inside(value, range)) {\r\n                    position = ((value - range.min) / (range.max - range.min));\r\n                    position = Math.ceil((isInverse ? (1 - position) : position) * rect.width);\r\n                    coor = (Math.floor(position + rect.x));\r\n                    minorGird = minorGird.concat('M' + ' ' + coor + ' ' + (this.seriesClipRect.y)\r\n                        + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\r\n                    coor = (Math.floor(position + rect.x));\r\n                    minorTick = minorTick.concat('M' + ' ' + coor + ' ' + (rect.y)\r\n                        + 'L ' + coor + ' ' + (ticksX + axis.scrollBarHeight));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var j = 0; j < axis.minorTicksPerInterval; j++) {\r\n                value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\r\n                if (inside(value, range)) {\r\n                    position = ((value - range.min) / (range.max - range.min));\r\n                    position = Math.ceil(((isInverse ? (1 - position) : position)) * rect.height) * -1; // For inversed axis\r\n                    coor = (Math.floor(position + rect.y + rect.height));\r\n                    minorGird = minorGird.concat('M' + ' ' + (this.seriesClipRect.x) + ' ' + coor\r\n                        + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor + ' ');\r\n                    coor = (Math.floor(position + rect.y + rect.height));\r\n                    minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + (ticksY - axis.scrollBarHeight) +\r\n                        ' ' + coor + ' ');\r\n                }\r\n                logPosition += logInterval;\r\n            }\r\n        }\r\n        direction.push(minorGird);\r\n        direction.push(minorTick);\r\n        return direction;\r\n    };\r\n    /**\r\n     * To find the numeric value of the log\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} logPosition logPosition\r\n     * @param {number} value value\r\n     * @param {number} labelIndex labelIndex\r\n     * @param {boolean} isFirstLabel isFirstLabel\r\n     * @returns {number} value\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.findLogNumeric = function (axis, logPosition, value, labelIndex, isFirstLabel) {\r\n        var range = axis.visibleRange;\r\n        var tempValue;\r\n        if (axis.valueType === 'Logarithmic') {\r\n            value = logBase(logPosition, axis.logBase);\r\n        }\r\n        else if (axis.valueType === 'DateTime') {\r\n            tempValue = axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\r\n            value = isFirstLabel ? (value - tempValue) : (value + tempValue);\r\n        }\r\n        else if (axis.valueType === 'DateTimeCategory') {\r\n            var padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\r\n            value += ((axis.visibleLabels[labelIndex + 1] ?\r\n                axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) -\r\n                (axis.visibleLabels[labelIndex] ?\r\n                    axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) /\r\n                (axis.minorTicksPerInterval + 1);\r\n        }\r\n        else {\r\n            tempValue = range.interval / (axis.minorTicksPerInterval + 1);\r\n            value = isFirstLabel ? (value - tempValue) : (value + tempValue);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * To render the xAxis Labels\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Element} parent parent\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawXAxisLabels = function (axis, index, parent, rect) {\r\n        var chart = this.chart;\r\n        var pointX = 0;\r\n        var pointY = 0;\r\n        var labelSpace = axis.labelPadding;\r\n        var labelHeight;\r\n        var elementSize;\r\n        var labelPadding;\r\n        var anchor;\r\n        var pixel = 10;\r\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\r\n        var islabelInside = axis.labelPosition === 'Inside';\r\n        var isOpposed = axis.isAxisOpposedPosition;\r\n        var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\r\n        var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\r\n        var angle = axis.angle % 360;\r\n        var isHorizontalAngle = (angle === 0 || angle === -180 || angle === 180);\r\n        var options;\r\n        var labelWidth;\r\n        var isInverse = axis.isAxisInverse;\r\n        var isLeft;\r\n        var previousEnd = isInverse ? (rect.x + rect.width) : rect.x;\r\n        var width = 0;\r\n        var length = axis.visibleLabels.length;\r\n        var intervalLength;\r\n        var label;\r\n        var isAxisBreakLabel;\r\n        var scrollBarHeight = axis.scrollbarSettings.enable || (!islabelInside && isNullOrUndefined(axis.crossesAt)\r\n            && (axis.zoomFactor < 1 || axis.zoomPosition > 0)) ? axis.scrollBarHeight : 0;\r\n        var newPoints = [];\r\n        var isRotatedLabelIntersect = false;\r\n        var textPoints = [];\r\n        var rotatedLabelSize = new Size(0, 0);\r\n        padding += (angle === 90 || angle === 270 || angle === -90 || angle === -270) ? (islabelInside ? 5 : -5) : 0;\r\n        var isLabelUnderAxisLine = ((!isOpposed && !islabelInside) || (isOpposed && islabelInside));\r\n        var axislabelElement = getElement(chart.element.id + 'AxisLabels' + index);\r\n        var pointsRemoved = this.removeAxisLabelElements(axis, axislabelElement);\r\n        var isEndAnchor = isLabelUnderAxisLine ?\r\n            ((360 >= angle && angle >= 180) || (-1 >= angle && angle >= -180)) :\r\n            ((1 <= angle && angle <= 180) || (-181 >= angle && angle >= -360));\r\n        for (var i = 0, len = length; i < len; i++) {\r\n            label = axis.visibleLabels[i];\r\n            isAxisBreakLabel = isBreakLabel(label.originalText) || (axis.labelIntersectAction === 'Wrap' && label.text.length > 1);\r\n            pointX = (valueToCoefficient(label.value, axis) * rect.width) + rect.x;\r\n            elementSize = label.size;\r\n            intervalLength = rect.width / length;\r\n            labelWidth = isAxisBreakLabel ? label.breakLabelSize.width : elementSize.width;\r\n            width = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle === 0 &&\r\n                labelWidth > intervalLength) ? intervalLength : labelWidth;\r\n            labelHeight = elementSize.height / 4;\r\n            pointX -= (isAxisBreakLabel || angle !== 0) ? 0 : (width / 2);\r\n            // label X value adjustment for label rotation (Start)\r\n            if (angle !== 0) {\r\n                if (isAxisBreakLabel) {\r\n                    pointX -= axis.lineBreakAlignment === 'Left' ? (label.breakLabelSize.width / 2) : axis.lineBreakAlignment === 'Right' ?\r\n                        -(label.breakLabelSize.width / 2) : 0;\r\n                }\r\n                else {\r\n                    pointX -= (angle === -90 || angle === 270 ? -labelHeight : (angle === 90 || angle === -270) ? labelHeight : 0);\r\n                }\r\n            }\r\n            // label X value adjustment for label rotation (End)\r\n            if (axis.labelStyle.textAlignment === 'Far') {\r\n                pointX = pointX + width - pixel;\r\n            }\r\n            else if (axis.labelStyle.textAlignment === 'Near') {\r\n                pointX = pointX - width + pixel;\r\n            }\r\n            // For line break label alignment like left, right & center in angle 0\r\n            if (isAxisBreakLabel && axis.lineBreakAlignment !== 'Center' && angle === 0) {\r\n                pointX += axis.lineBreakAlignment === 'Left' ? -(width / 2) : (width / 2);\r\n            }\r\n            var paddingForBreakLabel = isAxisBreakLabel ?\r\n                (isHorizontalAngle ? (axis.opposedPosition || islabelInside ? 0 : elementSize.height) :\r\n                    (label.breakLabelSize.width / 2)) : 0;\r\n            padding = isAxisBreakLabel ? (tickSpace + labelSpace + axis.lineStyle.width * 0.5) : padding;\r\n            // label Y value adjustment (Start)\r\n            if (islabelInside && angle) {\r\n                if (isAxisBreakLabel) {\r\n                    pointY = isOpposed ? (rect.y + padding + (paddingForBreakLabel)) : (rect.y - padding - (paddingForBreakLabel));\r\n                }\r\n                else {\r\n                    pointY = isOpposed ? (rect.y + padding + labelHeight) : (rect.y - padding - labelHeight);\r\n                }\r\n            }\r\n            else {\r\n                if (isAxisBreakLabel) {\r\n                    labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + (paddingForBreakLabel)) :\r\n                        padding + scrollBarHeight + (angle ? paddingForBreakLabel : (3 * labelHeight));\r\n                }\r\n                else {\r\n                    labelPadding = !isLabelUnderAxisLine ?\r\n                        -(padding + scrollBarHeight + (angle ? labelHeight : (label.index > 1 ? (2 * labelHeight) : 0))) :\r\n                        padding + scrollBarHeight + ((angle ? 1 : 3) * labelHeight);\r\n                }\r\n                pointY = (rect.y + (labelPadding * label.index));\r\n            }\r\n            // label Y value adjustment (End)\r\n            if (isAxisBreakLabel) {\r\n                anchor = this.getAnchor(axis); // for break label self alignment\r\n            }\r\n            else {\r\n                anchor = (chart.enableRtl) ? ((isEndAnchor) ? '' : 'end') : (chart.isRtlEnabled || isEndAnchor) ? 'end' : '';\r\n            }\r\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor);\r\n            options.id = pointsRemoved && axislabelElement &&\r\n                axislabelElement.children[i] ? axislabelElement.children[i].id : options.id;\r\n            if (angle !== 0) {\r\n                rotatedLabelSize = rotateTextSize(label.labelStyle, label.originalText, angle, chart, chart.themeStyle.axisLabelFont);\r\n                isLeft = ((angle < 0 && angle > -90) || (angle < -180 && angle > -270) ||\r\n                    (angle > 90 && angle < 180) || (angle > 270 && angle < 360));\r\n            }\r\n            if (axis.edgeLabelPlacement) {\r\n                switch (axis.edgeLabelPlacement) {\r\n                    case 'None':\r\n                        break;\r\n                    case 'Hide':\r\n                        if (((i === 0 || (isInverse && i === len - 1)) && options.x < rect.x) ||\r\n                            ((i === len - 1 || (isInverse && i === 0)) &&\r\n                                (options.x + (angle === 0 ? width : rotatedLabelSize.width) > rect.x + rect.width))) {\r\n                            continue;\r\n                        }\r\n                        break;\r\n                    case 'Shift':\r\n                        if ((i === 0 || (isInverse && i === len - 1)) && (options.x < rect.x || (angle !== 0 && isLeft && options.x - rotatedLabelSize.width <= rect.x) || (axis.lineBreakAlignment === 'Center' && options.x - (label.size.width / label.text.length) / 2 < rect.x && angle === 0))) {\r\n                            intervalLength -= (rect.x - options.x);\r\n                            if (anchor === '' && !isInverse && angle === 0) {\r\n                                if (options.x <= 0) {\r\n                                    pointX = options.x = 0;\r\n                                }\r\n                                else {\r\n                                    pointX = options.x;\r\n                                }\r\n                                intervalLength = rect.width / length;\r\n                            }\r\n                            else if (isLeft && angle !== 0) {\r\n                                intervalLength = rect.width / length;\r\n                                if (rect.x + intervalLength > options.x + rotatedLabelSize.width) {\r\n                                    options.x = pointX = rect.x + padding;\r\n                                }\r\n                                else {\r\n                                    options.x = pointX = rect.x + intervalLength - padding;\r\n                                }\r\n                            }\r\n                            else if (isAxisBreakLabel && axis.lineBreakAlignment === 'Center' && axis.labelPlacement === 'OnTicks' && angle === 0) {\r\n                                var maxWidth = 0;\r\n                                for (var i_1 = 0; i_1 < label.text.length; i_1++) {\r\n                                    var breakLabelWidth = measureText(label.text[i_1], axis.labelStyle, chart.themeStyle.axisLabelFont).width;\r\n                                    if (breakLabelWidth > maxWidth) {\r\n                                        maxWidth = breakLabelWidth;\r\n                                    }\r\n                                }\r\n                                options.x = pointX = rect.x + maxWidth / 2;\r\n                            }\r\n                            else if (!(anchor === 'start' && options.x > 0)) {\r\n                                options.x = pointX = !isHorizontalAngle ? rect.x + padding : rect.x;\r\n                            }\r\n                        }\r\n                        else if ((i === len - 1 || (isInverse && i === 0)) && (((options.x + width) > rect.x + rect.width && anchor !== 'end' && angle === 0) || (angle !== 0 && !isLeft && (options.x + rotatedLabelSize.width) > rect.x + rect.width) || (anchor === 'end' && options.x > rect.x + rect.width))) {\r\n                            if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim' && angle === 0) {\r\n                                intervalLength -= (options.x + width - (rect.x + rect.width));\r\n                            }\r\n                            else if (angle !== 0) {\r\n                                if (rotatedLabelSize.width < intervalLength) {\r\n                                    intervalLength = rotatedLabelSize.width;\r\n                                }\r\n                            }\r\n                            else {\r\n                                intervalLength = width;\r\n                            }\r\n                            if (angle !== 0) {\r\n                                options.x = pointX = rect.x + rect.width - intervalLength + padding;\r\n                            }\r\n                            else {\r\n                                options.x = pointX = !isHorizontalAngle ? rect.x + rect.width - intervalLength / 2 :\r\n                                    rect.x + rect.width - intervalLength;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            options.text = this.getLabelText(label, axis, intervalLength);\r\n            options.labelRotation = angle;\r\n            // ------- Hide Calculation (Start) -------------\r\n            // Currect label actual start value (Start)\r\n            var xValue = void 0;\r\n            var xValue2 = void 0;\r\n            if (isAxisBreakLabel && angle === 0) {\r\n                if (axis.lineBreakAlignment === 'Right') {\r\n                    xValue = (options.x - width);\r\n                    xValue2 = options.x;\r\n                }\r\n                else if (axis.lineBreakAlignment === 'Center') {\r\n                    xValue = (options.x - (width / 2));\r\n                    xValue2 = options.x + (width / 2);\r\n                }\r\n                else {\r\n                    xValue = options.x;\r\n                    xValue2 = options.x + width;\r\n                }\r\n            }\r\n            else {\r\n                xValue = options.x;\r\n                xValue2 = options.x + width;\r\n            }\r\n            // Currect label actual start value (End)\r\n            if (angle === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 &&\r\n                (!isInverse ? xValue <= previousEnd : xValue2 >= previousEnd)) {\r\n                continue;\r\n            }\r\n            // Previous label actual end value (Start)\r\n            if (isAxisBreakLabel) {\r\n                if (axis.lineBreakAlignment === 'Right') {\r\n                    previousEnd = isInverse ? (options.x - width) : options.x;\r\n                }\r\n                else if (axis.lineBreakAlignment === 'Center') {\r\n                    previousEnd = isInverse ? (options.x - (width / 2)) : options.x + (width / 2);\r\n                }\r\n                else {\r\n                    previousEnd = isInverse ? options.x : options.x + width;\r\n                }\r\n            }\r\n            else {\r\n                previousEnd = isInverse ? options.x : options.x + width;\r\n            }\r\n            // Previous label actual end value (End)\r\n            // ------- Hide Calculation (End) -------------\r\n            // label Rotataion calculation (Start)\r\n            if (angle !== 0) {\r\n                var height = void 0;\r\n                var rect_1 = void 0;\r\n                if (isAxisBreakLabel) {\r\n                    var xAdjustment = 0;\r\n                    var yAdjustment = 0;\r\n                    height = (label.breakLabelSize.height);\r\n                    yAdjustment = (label.breakLabelSize.height) - 4; // 4 for label bound correction\r\n                    // xAdjustment (Start)\r\n                    if (axis.lineBreakAlignment === 'Center') {\r\n                        xAdjustment = -(label.breakLabelSize.width / 2);\r\n                    }\r\n                    else if (axis.lineBreakAlignment === 'Right') {\r\n                        xAdjustment = -label.breakLabelSize.width;\r\n                    }\r\n                    // xAdjustment (End)\r\n                    if (isLabelUnderAxisLine) {\r\n                        yAdjustment = (label.breakLabelSize.height) / (options.text.length + 1);\r\n                    }\r\n                    rect_1 = new Rect(options.x + xAdjustment, options.y - (yAdjustment), label.breakLabelSize.width, height);\r\n                }\r\n                else {\r\n                    height = (pointY) - (options.y - ((label.size.height / 2)));\r\n                    rect_1 = new Rect(options.x, options.y - ((label.size.height / 2) - 5), label.size.width, height);\r\n                }\r\n                var rectCoordinates = this.getRectanglePoints(rect_1);\r\n                var rectCenterX = isAxisBreakLabel ? rect_1.x + (rect_1.width / 2) : pointX;\r\n                var rectCenterY = isAxisBreakLabel ? rect_1.y + (rect_1.height / 2) : (pointY - (height / 2));\r\n                if (isAxisBreakLabel) {\r\n                    options.transform = 'rotate(' + angle + ',' + rectCenterX + ',' + rectCenterY + ')';\r\n                }\r\n                else {\r\n                    options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\r\n                }\r\n                newPoints.push(getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle));\r\n                isRotatedLabelIntersect = false;\r\n                if (axis.labelIntersectAction !== 'None') {\r\n                    for (var index_1 = i; index_1 > 0; index_1--) {\r\n                        if (newPoints[i] && newPoints[index_1 - 1] &&\r\n                            isRotatedRectIntersect(newPoints[i], newPoints[index_1 - 1])) {\r\n                            isRotatedLabelIntersect = true;\r\n                            newPoints[i] = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                var rotateAngle = ((angle > 0 && angle < 90) || (angle > 180 && angle < 270) ||\r\n                    (angle < -90 && angle > -180) || (angle < -270 && angle > -360));\r\n                var textRect = new Rect(options.x, options.y - (elementSize.height / 2 + padding / 2), label.size.width, height);\r\n                var textRectCoordinates = this.getRectanglePoints(textRect);\r\n                var rectPoints = [];\r\n                rectPoints.push(new ChartLocation(rotateAngle ? this.chart.availableSize.width : this.padding, axis.rect.y));\r\n                rectPoints.push(new ChartLocation(rotateAngle ? this.chart.availableSize.width :\r\n                    this.padding, axis.rect.y + axis.maxLabelSize.height));\r\n                textPoints.push(getRotatedRectangleCoordinates(textRectCoordinates, rectCenterX, rectCenterY, angle));\r\n                var newRect = new Rect(0, axis.rect.y, this.chart.availableSize.width, axis.maxLabelSize.height * 2);\r\n                for (var k = 0; k < textPoints[i].length; k++) {\r\n                    if (!axis.opposedPosition && !withInBounds(textPoints[i][k].x, textPoints[i][k].y, newRect) && typeof options.text === 'string') {\r\n                        var interSectPoint = this.calculateIntersection(textPoints[i][0], textPoints[i][1], rectPoints[0], rectPoints[1]);\r\n                        var rectPoint1 = rotateAngle ? this.chart.availableSize.width - pointX : pointX;\r\n                        var rectPoint2 = interSectPoint.y - axis.rect.y;\r\n                        var trimValue = Math.sqrt((rectPoint1 * rectPoint1) + (rectPoint2 * rectPoint2));\r\n                        options.text = textTrim(trimValue, label.text, label.labelStyle, chart.enableRtl, chart.themeStyle.axisLabelFont);\r\n                    }\r\n                }\r\n            }\r\n            if (chart.pointsAdded && !chart.pointsRemoved && !getElement(options.id)) {\r\n                var optionsX = options.x;\r\n                options.x = rect.width + (rect.width / (i ? i : 1));\r\n                var transform = options.transform;\r\n                options.transform = angle ? 'rotate(' + angle + ',' + options.x + ',' + parseFloat(options.transform.split(',')[2]) + ')' : '';\r\n                textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, (axis.isAxisOpposedPosition !== (axis.labelPosition === 'Inside')), chart.redraw, true, null, null, null, label.size, isRotatedLabelIntersect, chart.enableCanvas, null, chart.themeStyle.axisLabelFont);\r\n                options.x = optionsX;\r\n                options.transform = transform;\r\n            }\r\n            // label Rotataion calculation (End)\r\n            var element = textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabelFont.color, labelElement, (axis.isAxisOpposedPosition !== (axis.labelPosition === 'Inside')), chart.redraw, true, null, chart.duration, null, label.size, isRotatedLabelIntersect, chart.enableCanvas, null, chart.themeStyle.axisLabelFont, new ChartLocation(parseFloat(options.transform.split(',')[1]), parseFloat(options.transform.split(',')[2])));\r\n            if (pointsRemoved) {\r\n                element.id = chart.element.id + index + '_AxisLabel_' + i;\r\n            }\r\n        }\r\n        if (!this.chart.enableCanvas) {\r\n            if (!chart.delayRedraw) {\r\n                parent.appendChild(labelElement);\r\n            }\r\n            else if (axis.visible && axis.internalVisibility) {\r\n                this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\r\n            }\r\n        }\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.removeAxisLabelElements = function (axis, axislabelElement) {\r\n        if (this.chart.pointsRemoved && axislabelElement && axislabelElement.childNodes.length) {\r\n            var pointsRemoved = false;\r\n            if (axis.valueType.indexOf('Category') > -1) {\r\n                var visibleLabelTexts_1 = [];\r\n                axis.visibleLabels.map(function (label) {\r\n                    if (typeof label.text !== 'string') {\r\n                        visibleLabelTexts_1.push(label.text.join(''));\r\n                    }\r\n                    else {\r\n                        visibleLabelTexts_1.push(label.text);\r\n                    }\r\n                });\r\n                for (var i = axislabelElement.childNodes.length - 1; i >= 0; i--) {\r\n                    var childNode = axislabelElement.childNodes[i];\r\n                    if (visibleLabelTexts_1.indexOf(childNode.textContent.trim()) === -1) {\r\n                        axislabelElement.removeChild(childNode);\r\n                        pointsRemoved = true;\r\n                    }\r\n                }\r\n            }\r\n            else if (axislabelElement.childNodes.length > axis.visibleLabels.length) {\r\n                for (var j = 0; j < axislabelElement.childNodes.length - axis.visibleLabels.length; j++) {\r\n                    axislabelElement.removeChild(axislabelElement.childNodes[j]);\r\n                    pointsRemoved = true;\r\n                }\r\n            }\r\n            return pointsRemoved;\r\n        }\r\n        return false;\r\n    };\r\n    CartesianAxisLayoutPanel.prototype.calculateIntersection = function (p1, p2, p3, p4) {\r\n        var c2x = p3.x - p4.x;\r\n        var c3x = p1.x - p2.x;\r\n        var c2y = p3.y - p4.y;\r\n        var c3y = p1.y - p2.y;\r\n        var d = c3x * c2y - c3y * c2x;\r\n        var u1 = p1.x * p2.y - p1.y * p2.x;\r\n        var u4 = p3.x * p4.y - p3.y * p4.x;\r\n        var px = (u1 * c2x - c3x * u4) / d;\r\n        var py = (u1 * c2y - c3y * u4) / d;\r\n        var p = { x: px, y: py };\r\n        return p;\r\n    };\r\n    /**\r\n     * To get text anchor value for line break labels.\r\n     *\r\n     * @param {Axis} axis axis model\r\n     * @returns {string} returns text anchor\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.getAnchor = function (axis) {\r\n        return (axis.lineBreakAlignment === 'Center' ? 'middle' : (this.chart.enableRtl) ? (axis.lineBreakAlignment === 'Left' ? 'end' : 'start') : (axis.lineBreakAlignment === 'Left' ? 'start' : 'end'));\r\n    };\r\n    /**\r\n     * Get rect coordinates\r\n     *\r\n     * @param {Rect} rect rect\r\n     * @returns {ChartLocation[]} rectangle points\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.getRectanglePoints = function (rect) {\r\n        var point1 = new ChartLocation(rect.x, rect.y);\r\n        var point2 = new ChartLocation(rect.x + rect.width, rect.y);\r\n        var point3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\r\n        var point4 = new ChartLocation(rect.x, rect.y + rect.height);\r\n        return [point1, point2, point3, point4];\r\n    };\r\n    /**\r\n     * To get axis label text\r\n     *\r\n     * @param {VisibleLabels} label label\r\n     * @param {Axis} axis axis\r\n     * @param {number} intervalLength intervalLength\r\n     * @returns {string | string[]} label or label collection\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.getLabelText = function (label, axis, intervalLength) {\r\n        if (isBreakLabel(label.originalText)) {\r\n            var result = [];\r\n            var str = void 0;\r\n            for (var index = 0; index < label.text.length; index++) {\r\n                str = this.findAxisLabel(axis, label.text[index], intervalLength);\r\n                result.push(str);\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            return this.findAxisLabel(axis, label.text, intervalLength);\r\n        }\r\n    };\r\n    /**\r\n     * To render the x-axis label border.\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Element} parent parent\r\n     * @param {Rect} axisRect axisRect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawXAxisBorder = function (axis, index, parent, axisRect) {\r\n        if (axis.border.width > 0) {\r\n            var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\r\n            var isOpposed = axis.isAxisOpposedPosition;\r\n            var startX = void 0;\r\n            var startY = axisRect.y + ((isOpposed ? -1 : 1) * scrollBarHeight);\r\n            var padding = 10;\r\n            var pointX = void 0;\r\n            var gap = (axisRect.width / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\r\n                : axis.visibleRange.interval);\r\n            var endX = void 0;\r\n            var length_2 = axis.maxLabelSize.height +\r\n                ((axis.tickPosition === axis.labelPosition) ? axis.majorTickLines.height : 0);\r\n            var labelBorder = '';\r\n            var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\r\n            var endY = ((isOpposed && axis.labelPosition === 'Inside') ||\r\n                (!isOpposed && axis.labelPosition === 'Outside')) ?\r\n                (axisRect.y + length_2 + padding + scrollBarHeight) : (axisRect.y - length_2 - padding - scrollBarHeight);\r\n            for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\r\n                pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\r\n                pointX = (axis.isAxisInverse ? (1 - pointX) : pointX) * axisRect.width;\r\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\r\n                    startX = pointX + axisRect.x;\r\n                    endX = pointX + (gap) + axisRect.x;\r\n                }\r\n                else {\r\n                    startX = pointX - gap * 0.5 + axisRect.x;\r\n                    endX = pointX + gap * 0.5 + axisRect.x;\r\n                }\r\n                switch (axis.border.type) {\r\n                    case 'Rectangle':\r\n                    case 'WithoutTopBorder':\r\n                        if (startX < axisRect.x && axis.labelPlacement !== 'OnTicks') {\r\n                            labelBorder += ('M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\r\n                        }\r\n                        else if (Math.floor(endX) > axisRect.width + axisRect.x && !(axis.visibleLabels.length === 1) &&\r\n                            !(i === axis.visibleLabels.length - 1)) {\r\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\r\n                                'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ');\r\n                        }\r\n                        else {\r\n                            startX = (i === 0 && axis.labelPlacement === 'OnTicks') ? axisRect.x : startX;\r\n                            endX = ((i === axis.visibleLabels.length - 1) && axis.labelPlacement === 'OnTicks') ? endX - gap * 0.5 : endX;\r\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' +\r\n                                endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\r\n                            if (i === 0) {\r\n                                labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\r\n                                    'M ' + startX + ' ' + endY + ' L ' + (axisRect.x) + ' ' + endY);\r\n                            }\r\n                            if (i === axis.visibleLabels.length - 1) {\r\n                                labelBorder += ('M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\r\n                                    'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'WithoutTopandBottomBorder':\r\n                        if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\r\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\r\n                                'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            labelBorder += (axis.border.type === 'Rectangle' ? ('M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' +\r\n                (axisRect.x + axisRect.width) + ' ' + startY) : '');\r\n            if (labelBorder !== '') {\r\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\r\n            }\r\n        }\r\n        for (var i = 0; i < this.chart.visibleSeries.length; i++) {\r\n            if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0 && this.chart.visibleSeries[i].visible) {\r\n                this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * To create border element of the axis\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {string} labelBorder labelBorder\r\n     * @param {Element} parent parent\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.createAxisBorderElement = function (axis, index, labelBorder, parent) {\r\n        var element = getElement(this.chart.element.id + '_BorderLine_' + index);\r\n        var direction = element ? element.getAttribute('d') : '';\r\n        var borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\r\n        borderElement.style.pointerEvents = 'none';\r\n        appendChildElement(this.chart.enableCanvas, parent, borderElement, this.chart.redraw, false, 'x', 'y', null, direction, true, null, null, this.chart.duration);\r\n    };\r\n    /**\r\n     * To find the axis label of the intersect action\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {string} label label\r\n     * @param {number} width width\r\n     * @returns {string} label\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.findAxisLabel = function (axis, label, width) {\r\n        return (axis.labelIntersectAction === 'Trim' ?\r\n            ((axis.angle % 360 === 0 && !axis.enableTrim) ? textTrim(width, label, axis.labelStyle, this.chart.enableRtl, this.chart.themeStyle.axisLabelFont) : label) : label);\r\n    };\r\n    /**\r\n     * X-Axis Title function performed\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Element} parent parent\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.drawXAxisTitle = function (axis, index, parent, rect) {\r\n        if (axis.title) {\r\n            var chart = this.chart;\r\n            var elementSize = measureText(axis.title, axis.titleStyle, this.chart.themeStyle.axisTitleFont);\r\n            var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight : 0;\r\n            var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) +\r\n                (axis.labelPosition === 'Inside' ? 0 :\r\n                    axis.maxLabelSize.height + axis.multiLevelLabelHeight + axis.labelPadding);\r\n            var titleSize = (axis.titleSize.height * (axis.titleCollection.length - 1));\r\n            padding = axis.isAxisOpposedPosition ? -(padding + elementSize.height / 4 + scrollBarHeight + titleSize) : (padding + (3 *\r\n                elementSize.height / 4) + scrollBarHeight);\r\n            var labelRotation = axis.titleRotation ? axis.titleRotation : 0;\r\n            var x = void 0;\r\n            var y = rect.y + padding;\r\n            var anchor = void 0;\r\n            if (axis.titleStyle.textAlignment === 'Center') {\r\n                anchor = 'middle';\r\n                x = rect.x + rect.width * 0.5;\r\n            }\r\n            else if (axis.titleStyle.textAlignment === 'Near') {\r\n                anchor = 'start';\r\n                x = rect.x;\r\n            }\r\n            else {\r\n                anchor = 'end';\r\n                x = rect.x + rect.width;\r\n            }\r\n            if (labelRotation !== 0) {\r\n                y += axis.opposedPosition ? -(axis.titleSize.height / 2 + elementSize.height / 4) :\r\n                    axis.titleSize.height / 2 - elementSize.height / 4;\r\n            }\r\n            var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y, anchor, axis.titleCollection, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', null, labelRotation);\r\n            var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitleFont.color, parent, null, chart.redraw, chart.redraw, null, null, null, null, null, chart.enableCanvas, null, chart.themeStyle.axisTitleFont, new ChartLocation(x, y));\r\n            element.setAttribute('aria-hidden', 'true');\r\n        }\r\n    };\r\n    /**\r\n     * To render the axis grid and tick lines(Both Major and Minor)\r\n     *\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {string} gridDirection gridDirection\r\n     * @param {MajorTickLinesModel | MinorTickLinesModel | MajorGridLinesModel | MinorGridLinesModel} gridModel gridModel\r\n     * @param {string} gridId gridId\r\n     * @param {number} gridIndex gridIndex\r\n     * @param {Element} parent parent\r\n     * @param {string} themeColor themeColor\r\n     * @param {string} dashArray dashArray\r\n     * @param {number} removeIndex removeIndex\r\n     * @param {boolean} isRemoved isRemoved\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.renderGridLine = function (axis, index, gridDirection, gridModel, gridId, gridIndex, parent, themeColor, dashArray, removeIndex, isRemoved) {\r\n        if (dashArray === void 0) { dashArray = null; }\r\n        if (removeIndex === void 0) { removeIndex = null; }\r\n        if (isRemoved === void 0) { isRemoved = false; }\r\n        var chart = this.chart;\r\n        var direction;\r\n        var element;\r\n        if (gridModel.width > 0 && axis.visible && axis.internalVisibility && gridDirection) {\r\n            element = getElement(chart.element.id + gridId + index + '_' + (isRemoved ? removeIndex : gridIndex));\r\n            direction = element ? element.getAttribute('d') : null;\r\n            element = null;\r\n            this.htmlObject = chart.renderer.drawPath(new PathOption(chart.element.id + gridId + index + '_' + (isRemoved ? removeIndex : gridIndex), 'transparent', gridModel.width, gridModel.color || themeColor, null, dashArray, gridDirection));\r\n            appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, true, null, null, chart.duration);\r\n            if (isRemoved) {\r\n                this.htmlObject.id = chart.element.id + gridId + index + '_' + gridIndex;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * To Find the parent node of the axis\r\n     *\r\n     * @param {string} elementId elementId\r\n     * @param {Element} label label\r\n     * @param {number} index index\r\n     * @returns {Element} parent node of the axis\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.findParentNode = function (elementId, label, index) {\r\n        if (document.getElementById(elementId + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\r\n            return document.getElementById(elementId + 'AxisGroup' + index + 'Inside');\r\n        }\r\n        else {\r\n            return document.getElementById(elementId + 'AxisGroup' + index + 'Outside');\r\n        }\r\n    };\r\n    /**\r\n     * Create Zooming Labels Function Called here\r\n     *\r\n     * @param {Chart} chart chart\r\n     * @param {Element} labelElement labelElement\r\n     * @param {Axis} axis axis\r\n     * @param {number} index index\r\n     * @param {Rect} rect rect\r\n     * @returns {void}\r\n     */\r\n    CartesianAxisLayoutPanel.prototype.createZoomingLabel = function (chart, labelElement, axis, index, rect) {\r\n        var parentNode = this.findParentNode(chart.element.id, labelElement, index);\r\n        labelElement.setAttribute('opacity', '0.3');\r\n        var zoomElement = chart.renderer.createGroup({\r\n            id: chart.element.id + 'AxisLabels_Zoom' + index\r\n        });\r\n        zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\r\n        parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\r\n        if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\r\n            parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\r\n        }\r\n        else {\r\n            parentNode.appendChild(zoomElement);\r\n        }\r\n    };\r\n    return CartesianAxisLayoutPanel;\r\n}());\r\nexport { CartesianAxisLayoutPanel };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}