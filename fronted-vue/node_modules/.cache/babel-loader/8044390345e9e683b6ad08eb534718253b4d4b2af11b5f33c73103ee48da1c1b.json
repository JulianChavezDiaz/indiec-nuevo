{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = {\n  GroupGuid: '{271bbba0-1ee7}'\n};\n/**\r\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\r\n * This is the base adaptor class that other adaptors can extend.\r\n *\r\n * @hidden\r\n */\nvar Adaptor = /** @class */function () {\n  /**\r\n   * Constructor for Adaptor class\r\n   *\r\n   * @param {DataOptions} ds?\r\n   * @param ds\r\n   * @hidden\r\n   * @returns aggregates\r\n   */\n  function Adaptor(ds) {\n    // common options for all the adaptors\n    this.options = {\n      from: 'table',\n      requestType: 'json',\n      sortBy: 'sorted',\n      select: 'select',\n      skip: 'skip',\n      group: 'group',\n      take: 'take',\n      search: 'search',\n      count: 'requiresCounts',\n      where: 'where',\n      aggregates: 'aggregates',\n      expand: 'expand'\n    };\n    /**\r\n     * Specifies the type of adaptor.\r\n     *\r\n     * @default Adaptor\r\n     */\n    this.type = Adaptor;\n    this.dataSource = ds;\n    this.pvt = {};\n  }\n  /**\r\n   * Returns the data from the query processing.\r\n   *\r\n   * @param {Object} data\r\n   * @param {DataOptions} ds?\r\n   * @param {Query} query?\r\n   * @param {Request} xhr?\r\n   * @param ds\r\n   * @param query\r\n   * @param xhr\r\n   * @returns Object\r\n   */\n  Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n    return data;\n  };\n  return Adaptor;\n}();\nexport { Adaptor };\n/**\r\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\r\n *\r\n * @hidden\r\n */\nvar JsonAdaptor = /** @class */function (_super) {\n  __extends(JsonAdaptor, _super);\n  function JsonAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Process the JSON data based on the provided queries.\r\n   *\r\n   * @param  {DataManager} dataManager\r\n   * @param  {Query} query\r\n   * @returns Object\r\n   */\n  JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n    var result = dataManager.dataSource.json.slice(0);\n    var count = result.length;\n    var countFlg = true;\n    var ret;\n    var key;\n    var lazyLoad = {};\n    var keyCount = 0;\n    var group = [];\n    var sort = [];\n    var page;\n    for (var i = 0; i < query.lazyLoad.length; i++) {\n      keyCount++;\n      lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n    }\n    var agg = {};\n    var isGroupByFormat = false;\n    if (query.lazyLoad.length) {\n      for (var i = 0; i < query.queries.length; i++) {\n        key = query.queries[i];\n        if (key.fn === 'onGroup' && !isNullOrUndefined(key.e.format)) {\n          isGroupByFormat = true;\n          break;\n        }\n      }\n    }\n    for (var i = 0; i < query.queries.length; i++) {\n      key = query.queries[i];\n      if ((key.fn === 'onPage' || key.fn === 'onGroup' || key.fn === 'onSortBy' && !isGroupByFormat) && query.lazyLoad.length) {\n        if (key.fn === 'onGroup') {\n          group.push(key.e);\n        }\n        if (key.fn === 'onPage') {\n          page = key.e;\n        }\n        if (key.fn === 'onSortBy') {\n          sort.unshift(key.e);\n        }\n        continue;\n      }\n      ret = this[key.fn].call(this, result, key.e, query);\n      if (key.fn === 'onAggregates') {\n        agg[key.e.field + ' - ' + key.e.type] = ret;\n      } else {\n        result = ret !== undefined ? ret : result;\n      }\n      if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n        countFlg = false;\n      }\n      if (countFlg) {\n        count = result.length;\n      }\n    }\n    if (keyCount) {\n      var args = {\n        query: query,\n        lazyLoad: lazyLoad,\n        result: result,\n        group: group,\n        page: page,\n        sort: sort\n      };\n      var lazyLoadData = this.lazyLoadGroup(args);\n      result = lazyLoadData.result;\n      count = lazyLoadData.count;\n    }\n    if (query.isCountRequired) {\n      result = {\n        result: result,\n        count: count,\n        aggregates: agg\n      };\n    }\n    return result;\n  };\n  /**\r\n   * Perform lazy load grouping in JSON array based on the given query and lazy load details.\r\n   *\r\n   * @param  {LazyLoadGroupArgs} args\r\n   */\n  JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n    var count = 0;\n    var agg = this.getAggregate(args.query);\n    var result = args.result;\n    if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n      var req = args.lazyLoad.onDemandGroupInfo;\n      for (var i = req.where.length - 1; i >= 0; i--) {\n        result = this.onWhere(result, req.where[i]);\n      }\n      if (args.group.length !== req.level) {\n        var field = args.group[req.level].fieldName;\n        result = DataUtil.group(result, field, agg, null, null, args.group[req.level].comparer, true);\n        if (args.sort.length) {\n          result = this.onSortBy(result, args.sort[parseInt(req.level.toString(), 10)], args.query, true);\n        }\n      } else {\n        for (var i = args.sort.length - 1; i >= req.level; i--) {\n          result = this.onSortBy(result, args.sort[parseInt(i.toString(), 10)], args.query, false);\n        }\n      }\n      count = result.length;\n      var data = result;\n      result = result.slice(req.skip);\n      result = result.slice(0, req.take);\n      if (args.group.length !== req.level) {\n        this.formGroupResult(result, data);\n      }\n    } else {\n      var field_1 = args.group[0].fieldName;\n      result = DataUtil.group(result, field_1, agg, null, null, args.group[0].comparer, true);\n      count = result.length;\n      var data = result;\n      if (args.sort.length) {\n        var sort = args.sort.length > 1 ? args.sort.filter(function (x) {\n          return x.fieldName === field_1;\n        })[0] : args.sort[0];\n        result = this.onSortBy(result, sort, args.query, true);\n      }\n      if (args.page) {\n        result = this.onPage(result, args.page, args.query);\n      }\n      this.formGroupResult(result, data);\n    }\n    return {\n      result: result,\n      count: count\n    };\n  };\n  JsonAdaptor.prototype.formGroupResult = function (result, data) {\n    if (result.length && data.length) {\n      var uid = 'GroupGuid';\n      var childLevel = 'childLevels';\n      var level = 'level';\n      var records = 'records';\n      result[uid] = data[uid];\n      result[childLevel] = data[childLevel];\n      result[level] = data[level];\n      result[records] = data[records];\n    }\n    return result;\n  };\n  /**\r\n   * Separate the aggregate query from the given queries\r\n   *\r\n   * @param  {Query} query\r\n   */\n  JsonAdaptor.prototype.getAggregate = function (query) {\n    var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n    var agg = [];\n    if (aggQuery.length) {\n      var tmp = void 0;\n      for (var i = 0; i < aggQuery.length; i++) {\n        tmp = aggQuery[i].e;\n        agg.push({\n          type: tmp.type,\n          field: DataUtil.getValue(tmp.field, query)\n        });\n      }\n    }\n    return agg;\n  };\n  /**\r\n   * Performs batch update in the JSON array which add, remove and update records.\r\n   *\r\n   * @param  {DataManager} dm\r\n   * @param  {CrudOptions} changes\r\n   * @param  {RemoteArgs} e\r\n   */\n  JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var i;\n    var deletedRecordsLen = changes.deletedRecords.length;\n    for (i = 0; i < changes.addedRecords.length; i++) {\n      this.insert(dm, changes.addedRecords[i]);\n    }\n    for (i = 0; i < changes.changedRecords.length; i++) {\n      this.update(dm, e.key, changes.changedRecords[i]);\n    }\n    for (i = 0; i < deletedRecordsLen; i++) {\n      this.remove(dm, e.key, changes.deletedRecords[i]);\n    }\n    return changes;\n  };\n  /**\r\n   * Performs filter operation with the given data and where query.\r\n   *\r\n   * @param {Object[]} ds\r\n   * @param {{validate:Function}} e\r\n   * @param e.validate\r\n   */\n  JsonAdaptor.prototype.onWhere = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.filter(function (obj) {\n      if (e) {\n        return e.validate(obj);\n      }\n    });\n  };\n  /**\r\n   * Returns aggregate function based on the aggregate type.\r\n   *\r\n   * @param {Object[]} ds\r\n   * @param e\r\n   * @param {string} } type\r\n   * @param e.field\r\n   * @param e.type\r\n   */\n  JsonAdaptor.prototype.onAggregates = function (ds, e) {\n    var fn = DataUtil.aggregates[e.type];\n    if (!ds || !fn || ds.length === 0) {\n      return null;\n    }\n    return fn(ds, e.field);\n  };\n  /**\r\n   * Performs search operation based on the given query.\r\n   *\r\n   * @param  {Object[]} ds\r\n   * @param  {QueryOptions} e\r\n   */\n  JsonAdaptor.prototype.onSearch = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    if (e.fieldNames.length === 0) {\n      DataUtil.getFieldList(ds[0], e.fieldNames);\n    }\n    return ds.filter(function (obj) {\n      for (var j = 0; j < e.fieldNames.length; j++) {\n        if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n  /**\r\n   * Sort the data with given direction and field.\r\n   *\r\n   * @param {Object[]} ds\r\n   * @param e\r\n   * @param {Object} b\r\n   * @param e.comparer\r\n   * @param e.fieldName\r\n   * @param query\r\n   * @param isLazyLoadGroupSort\r\n   */\n  JsonAdaptor.prototype.onSortBy = function (ds, e, query, isLazyLoadGroupSort) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    var fnCompare;\n    var field = DataUtil.getValue(e.fieldName, query);\n    if (!field) {\n      return ds.sort(e.comparer);\n    }\n    if (field instanceof Array) {\n      field = field.slice(0);\n      for (var i = field.length - 1; i >= 0; i--) {\n        if (!field[i]) {\n          continue;\n        }\n        fnCompare = e.comparer;\n        if (DataUtil.endsWith(field[i], ' desc')) {\n          fnCompare = DataUtil.fnSort('descending');\n          field[i] = field[i].replace(' desc', '');\n        }\n        ds = DataUtil.sort(ds, field[i], fnCompare);\n      }\n      return ds;\n    }\n    return DataUtil.sort(ds, isLazyLoadGroupSort ? 'key' : field, e.comparer);\n  };\n  /**\r\n   * Group the data based on the given query.\r\n   *\r\n   * @param  {Object[]} ds\r\n   * @param  {QueryOptions} e\r\n   * @param  {Query} query\r\n   */\n  JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    var agg = this.getAggregate(query);\n    return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n  };\n  /**\r\n   * Retrieves records based on the given page index and size.\r\n   *\r\n   * @param {Object[]} ds\r\n   * @param e\r\n   * @param {number} } pageIndex\r\n   * @param e.pageSize\r\n   * @param {Query} query\r\n   * @param e.pageIndex\r\n   */\n  JsonAdaptor.prototype.onPage = function (ds, e, query) {\n    var size = DataUtil.getValue(e.pageSize, query);\n    var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n    var end = start + size;\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(start, end);\n  };\n  /**\r\n   * Retrieves records based on the given start and end index from query.\r\n   *\r\n   * @param {Object[]} ds\r\n   * @param e\r\n   * @param {number} } end\r\n   * @param e.start\r\n   * @param e.end\r\n   */\n  JsonAdaptor.prototype.onRange = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n  };\n  /**\r\n   * Picks the given count of records from the top of the datasource.\r\n   *\r\n   * @param {Object[]} ds\r\n   * @param {{nos:number}} e\r\n   * @param e.nos\r\n   */\n  JsonAdaptor.prototype.onTake = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(0, DataUtil.getValue(e.nos));\n  };\n  /**\r\n   * Skips the given count of records from the data source.\r\n   *\r\n   * @param {Object[]} ds\r\n   * @param {{nos:number}} e\r\n   * @param e.nos\r\n   */\n  JsonAdaptor.prototype.onSkip = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return ds.slice(DataUtil.getValue(e.nos));\n  };\n  /**\r\n   * Selects specified columns from the data source.\r\n   *\r\n   * @param {Object[]} ds\r\n   * @param {{fieldNames:string}} e\r\n   * @param e.fieldNames\r\n   */\n  JsonAdaptor.prototype.onSelect = function (ds, e) {\n    if (!ds || !ds.length) {\n      return ds;\n    }\n    return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n  };\n  /**\r\n   * Inserts new record in the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Object} data\r\n   * @param tableName\r\n   * @param query\r\n   * @param {number} position\r\n   */\n  JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    if (isNullOrUndefined(position)) {\n      return dm.dataSource.json.push(data);\n    } else {\n      return dm.dataSource.json.splice(position, 0, data);\n    }\n  };\n  /**\r\n   * Remove the data from the dataSource based on the key field value.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {Object} value\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   * @returns null\r\n   */\n  JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    if (typeof value === 'object' && !(value instanceof Date)) {\n      value = DataUtil.getObject(keyField, value);\n    }\n    for (i = 0; i < ds.length; i++) {\n      if (DataUtil.getObject(keyField, ds[i]) === value) {\n        break;\n      }\n    }\n    return i !== ds.length ? ds.splice(i, 1) : null;\n  };\n  /**\r\n   * Updates existing record and saves the changes to the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {Object} value\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   * @returns null\r\n   */\n  JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    var ds = dm.dataSource.json;\n    var i;\n    var key;\n    if (!isNullOrUndefined(keyField)) {\n      key = getValue(keyField, value);\n    }\n    for (i = 0; i < ds.length; i++) {\n      if (!isNullOrUndefined(keyField) && getValue(keyField, ds[i]) === key) {\n        break;\n      }\n    }\n    return i < ds.length ? merge(ds[i], value) : null;\n  };\n  return JsonAdaptor;\n}(Adaptor);\nexport { JsonAdaptor };\n/**\r\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\r\n * It interacts with server-side for all DataManager Queries and CRUD operations.\r\n *\r\n * @hidden\r\n */\nvar UrlAdaptor = /** @class */function (_super) {\n  __extends(UrlAdaptor, _super);\n  function UrlAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Process the query to generate request body.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Query} query\r\n   * @param {Object[]} hierarchyFilters?\r\n   * @param hierarchyFilters\r\n   * @returns p\r\n   */\n  // tslint:disable-next-line:max-func-body-length\n  UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var params = query.params;\n    var url = dm.dataSource.url;\n    var temp;\n    var skip;\n    var take = null;\n    var options = this.options;\n    var request = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    // calc Paging & Range\n    if ('onPage' in singles) {\n      temp = singles.onPage;\n      skip = DataUtil.getValue(temp.pageIndex, query);\n      take = DataUtil.getValue(temp.pageSize, query);\n      skip = (skip - 1) * take;\n    } else if ('onRange' in singles) {\n      temp = singles.onRange;\n      skip = temp.start;\n      take = temp.end - temp.start;\n    }\n    // Sorting\n    for (var i = 0; i < queries.sorts.length; i++) {\n      temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n      request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', {\n        name: temp,\n        direction: queries.sorts[i].e.direction\n      }, query));\n    }\n    // hierarchy\n    if (hierarchyFilters) {\n      temp = this.getFiltersFrom(hierarchyFilters, query);\n      if (temp) {\n        request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n      }\n    }\n    // Filters\n    for (var i = 0; i < queries.filters.length; i++) {\n      var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n      if (this.getModuleName && this.getModuleName() === 'ODataV4Adaptor' && !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n        res = '(' + res + ')';\n      }\n      request.filters.push(res);\n      var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n      for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n        var prop = keys_1[_i];\n        if (DataUtil.isNull(request[prop])) {\n          delete request[prop];\n        }\n      }\n    }\n    // Searches\n    for (var i = 0; i < queries.searches.length; i++) {\n      temp = queries.searches[i].e;\n      request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n        fields: temp.fieldNames,\n        operator: temp.operator,\n        key: temp.searchKey,\n        ignoreCase: temp.ignoreCase\n      }, query));\n    }\n    // Grouping\n    for (var i = 0; i < queries.groups.length; i++) {\n      request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n    }\n    // aggregates\n    for (var i = 0; i < queries.aggregates.length; i++) {\n      temp = queries.aggregates[i].e;\n      request.aggregates.push({\n        type: temp.type,\n        field: DataUtil.getValue(temp.field, query)\n      });\n    }\n    var req = {};\n    this.getRequestQuery(options, query, singles, request, req);\n    // Params\n    DataUtil.callAdaptorFunction(this, 'addParams', {\n      dm: dm,\n      query: query,\n      params: params,\n      reqParams: req\n    });\n    if (query.lazyLoad.length) {\n      for (var i = 0; i < query.lazyLoad.length; i++) {\n        req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n      }\n    }\n    // cleanup\n    var keys = Object.keys(req);\n    for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n      var prop = keys_2[_a];\n      if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n        delete req[prop];\n      }\n    }\n    if (!(options.skip in req && options.take in req) && take !== null) {\n      req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n      req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n    }\n    var p = this.pvt;\n    this.pvt = {};\n    if (this.options.requestType === 'json') {\n      return {\n        data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n        url: url,\n        pvtData: p,\n        type: 'POST',\n        contentType: 'application/json; charset=utf-8'\n      };\n    }\n    temp = this.convertToQueryString(req, query, dm);\n    temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n    return {\n      type: 'GET',\n      url: temp.length ? url.replace(/\\/*$/, temp) : url,\n      pvtData: p\n    };\n  };\n  UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n    var param = 'param';\n    var req = request1;\n    req[options.from] = query.fromTable;\n    if (options.apply && query.distincts.length) {\n      req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n    }\n    if (!query.distincts.length && options.expand) {\n      req[options.expand] = 'onExpand' in this && 'onSelect' in singles ? DataUtil.callAdaptorFunction(this, 'onExpand', {\n        selects: DataUtil.getValue(singles.onSelect.fieldNames, query),\n        expands: query.expands\n      }, query) : query.expands;\n    }\n    req[options.select] = 'onSelect' in singles && !query.distincts.length ? DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n    req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n    req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n    req[options.skip] = 'onSkip' in singles ? DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n    req[options.take] = 'onTake' in singles ? DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n    req[options.where] = request.filters.length || request.searches.length ? DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n    req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n    req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n    req[options.aggregates] = request.aggregates.length ? DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n    req[param] = [];\n  };\n  /**\r\n   * Convert the object from processQuery to string which can be added query string.\r\n   *\r\n   * @param {Object} req\r\n   * @param request\r\n   * @param {Query} query\r\n   * @param {DataManager} dm\r\n   */\n  UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    return '';\n    // this needs to be overridden\n  };\n  /**\r\n   * Return the data from the data manager processing.\r\n   *\r\n   * @param {DataResult} data\r\n   * @param {DataOptions} ds?\r\n   * @param {Query} query?\r\n   * @param {Request} xhr?\r\n   * @param {Object} request?\r\n   * @param {CrudOptions} changes?\r\n   * @param ds\r\n   * @param query\r\n   * @param xhr\r\n   * @param request\r\n   * @param changes\r\n   */\n  UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('application/json') !== -1) {\n      var handleTimeZone = DataUtil.timeZoneHandling;\n      if (ds && !ds.timeZoneHandling) {\n        DataUtil.timeZoneHandling = false;\n      }\n      data = DataUtil.parse.parseJson(data);\n      DataUtil.timeZoneHandling = handleTimeZone;\n    }\n    var requests = request;\n    var pvt = requests.pvtData || {};\n    var groupDs = data ? data.groupDs : [];\n    if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n    var d = JSON.parse(requests.data);\n    if (d && d.action === 'batch' && data && data.addedRecords) {\n      changes.addedRecords = data.addedRecords;\n      return changes;\n    }\n    if (data && data.d) {\n      data = data.d;\n    }\n    var args = {};\n    if (data && 'count' in data) {\n      args.count = data.count;\n    }\n    args.result = data && data.result ? data.result : data;\n    var isExpand = false;\n    if (Array.isArray(data.result) && data.result.length) {\n      var key = 'key';\n      var val = 'value';\n      var level = 'level';\n      if (!isNullOrUndefined(data.result[0][key])) {\n        args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n      }\n      if (query && query.lazyLoad.length && pvt.groups.length) {\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n          if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n            var value = query.lazyLoad[i][val][level];\n            if (pvt.groups.length === value) {\n              isExpand = true;\n            }\n          }\n        }\n      }\n    }\n    if (!isExpand) {\n      this.getAggregateResult(pvt, data, args, groupDs, query);\n    }\n    return DataUtil.isNull(args.count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n        this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n      }\n    }\n    var uid = 'GroupGuid';\n    var childLvl = 'childLevels';\n    var lvl = 'level';\n    var records = 'records';\n    data[uid] = consts[uid];\n    data[lvl] = level;\n    data[childLvl] = childLevel;\n    data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n    return data;\n  };\n  UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n    var childGroupedRecords = [];\n    var records = 'records';\n    for (var i = 0; i < data.length; i++) {\n      if (!hasRecords) {\n        for (var j = 0; j < data[i].items.length; j++) {\n          childGroupedRecords.push(data[i].items[j]);\n        }\n      } else {\n        childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n      }\n    }\n    return childGroupedRecords;\n  };\n  /**\r\n   * Add the group query to the adaptor`s option.\r\n   *\r\n   * @param  {Object[]} e\r\n   * @returns void\r\n   */\n  UrlAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return e;\n  };\n  /**\r\n   * Add the aggregate query to the adaptor`s option.\r\n   *\r\n   * @param  {Aggregates[]} e\r\n   * @returns void\r\n   */\n  UrlAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n  };\n  /**\r\n   * Prepare the request body based on the newly added, removed and updated records.\r\n   * The result is used by the batch request.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {CrudOptions} changes\r\n   * @param {Object} e\r\n   * @param query\r\n   * @param original\r\n   */\n  UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var url;\n    var key;\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e[url],\n        key: e[key]\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\r\n   * Method will trigger before send the request to server side.\r\n   * Used to set the custom header or modify the request options.\r\n   *\r\n   * @param  {DataManager} dm\r\n   * @param  {Request} request\r\n   * @returns void\r\n   */\n  UrlAdaptor.prototype.beforeSend = function (dm, request) {\n    // need to extend this method\n  };\n  /**\r\n   * Prepare and returns request body which is used to insert a new record in the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Object} data\r\n   * @param {string} tableName\r\n   * @param query\r\n   */\n  UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\r\n   * Prepare and return request body which is used to remove record from the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {number|string} value\r\n   * @param {string} tableName\r\n   * @param query\r\n   */\n  UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: value,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\r\n   * Prepare and return request body which is used to update record.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {Object} value\r\n   * @param {string} tableName\r\n   * @param query\r\n   */\n  UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: value,\n        action: 'update',\n        keyColumn: keyField,\n        key: DataUtil.getObject(keyField, value),\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  /**\r\n   * To generate the predicate based on the filtered query.\r\n   *\r\n   * @param  {Object[]|string[]|number[]} data\r\n   * @param  {Query} query\r\n   * @hidden\r\n   */\n  UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n    var key = query.fKey;\n    var value;\n    var prop = key;\n    var pKey = query.key;\n    var predicats = [];\n    if (typeof data[0] !== 'object') {\n      prop = null;\n    }\n    for (var i = 0; i < data.length; i++) {\n      if (typeof data[0] === 'object') {\n        value = DataUtil.getObject(pKey || prop, data[i]);\n      } else {\n        value = data[i];\n      }\n      predicats.push(new Predicate(key, 'equal', value));\n    }\n    return Predicate.or(predicats);\n  };\n  UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n    var pData = data;\n    if (data && data.result) {\n      pData = data.result;\n    }\n    if (pvt && pvt.aggregates && pvt.aggregates.length) {\n      var agg = pvt.aggregates;\n      var fn = void 0;\n      var aggregateData = pData;\n      var res = {};\n      if (data.aggregate) {\n        aggregateData = data.aggregate;\n      }\n      for (var i = 0; i < agg.length; i++) {\n        fn = DataUtil.aggregates[agg[i].type];\n        if (fn) {\n          res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n        }\n      }\n      args.aggregates = res;\n    }\n    var key = 'key';\n    var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n    if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n      var groups = pvt.groups;\n      for (var i = 0; i < groups.length; i++) {\n        var level = null;\n        if (!isNullOrUndefined(groupDs)) {\n          groupDs = DataUtil.group(groupDs, groups[i]);\n        }\n        var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n        pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n      }\n      args.result = pData;\n    }\n    return args;\n  };\n  UrlAdaptor.prototype.getQueryRequest = function (query) {\n    var req = {\n      sorts: [],\n      groups: [],\n      filters: [],\n      searches: [],\n      aggregates: []\n    };\n    req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n    req.groups = Query.filterQueries(query.queries, 'onGroup');\n    req.filters = Query.filterQueries(query.queries, 'onWhere');\n    req.searches = Query.filterQueries(query.queries, 'onSearch');\n    req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n    return req;\n  };\n  UrlAdaptor.prototype.addParams = function (options) {\n    var req = options.reqParams;\n    if (options.params.length) {\n      req.params = {};\n    }\n    for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n      var tmp = _a[_i];\n      if (req[tmp.key]) {\n        throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n      }\n      req[tmp.key] = tmp.value;\n      if (tmp.fn) {\n        req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n      }\n      req.params[tmp.key] = req[tmp.key];\n    }\n  };\n  return UrlAdaptor;\n}(Adaptor);\nexport { UrlAdaptor };\n/**\r\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\r\n *\r\n * @hidden\r\n */\nvar ODataAdaptor = /** @class */function (_super) {\n  __extends(ODataAdaptor, _super);\n  function ODataAdaptor(props) {\n    var _this = _super.call(this) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$inlinecount',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PUT'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  ODataAdaptor.prototype.getModuleName = function () {\n    return 'ODataAdaptor';\n  };\n  /**\r\n   * Generate request string based on the filter criteria from query.\r\n   *\r\n   * @param {Predicate} pred\r\n   * @param {boolean} requiresCast?\r\n   * @param predicate\r\n   * @param query\r\n   * @param requiresCast\r\n   */\n  ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var operator;\n    var guid;\n    var val = predicate.value;\n    var type = typeof val;\n    var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n    if (val instanceof Date) {\n      val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n    }\n    if (type === 'string') {\n      val = val.replace(/'/g, '\\'\\'');\n      if (predicate.ignoreCase) {\n        val = val.toLowerCase();\n      }\n      if (predicate.operator !== 'like') {\n        val = encodeURIComponent(val);\n      }\n      if (predicate.operator !== 'wildcard' && predicate.operator !== 'like') {\n        val = '\\'' + val + '\\'';\n      }\n      if (requiresCast) {\n        field = 'cast(' + field + ', \\'Edm.String\\')';\n      }\n      if (DataUtil.parse.isGuid(val)) {\n        guid = 'guid';\n      }\n      if (predicate.ignoreCase) {\n        if (!guid) {\n          field = 'tolower(' + field + ')';\n        }\n        val = val.toLowerCase();\n      }\n    }\n    if (predicate.operator === 'isempty' || predicate.operator === 'isnull' || predicate.operator === 'isnotempty' || predicate.operator === 'isnotnull') {\n      operator = predicate.operator.indexOf('isnot') !== -1 ? DataUtil.odBiOperator['notequal'] : DataUtil.odBiOperator['equal'];\n      val = predicate.operator === 'isnull' || predicate.operator === 'isnotnull' ? null : '\\'\\'';\n    } else {\n      operator = DataUtil.odBiOperator[predicate.operator];\n    }\n    if (operator) {\n      returnValue += field;\n      returnValue += operator;\n      if (guid) {\n        returnValue += guid;\n      }\n      return returnValue + val;\n    }\n    if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n      operator = DataUtil.odv4UniOperator[predicate.operator];\n    } else {\n      operator = DataUtil.odUniOperator[predicate.operator];\n    }\n    if (operator === 'like') {\n      val = val;\n      if (val.indexOf('%') !== -1) {\n        if (val.charAt(0) === '%' && val.lastIndexOf('%') < 2) {\n          val = val.substring(1, val.length);\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\n        } else if (val.charAt(val.length - 1) === '%' && val.indexOf('%') > val.length - 3) {\n          val = val.substring(0, val.length - 1);\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\n        } else if (val.lastIndexOf('%') !== val.indexOf('%') && val.lastIndexOf('%') > val.indexOf('%') + 1) {\n          val = val.substring(val.indexOf('%') + 1, val.lastIndexOf('%'));\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n        } else {\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n        }\n      }\n      val = encodeURIComponent(val);\n      val = '\\'' + val + '\\'';\n    } else if (operator === 'wildcard') {\n      val = val;\n      if (val.indexOf('*') !== -1) {\n        var splittedStringValue = val.split('*');\n        var splittedValue = void 0;\n        var count = 0;\n        if (val.indexOf('*') !== 0 && splittedStringValue[0].indexOf('%3f') === -1 && splittedStringValue[0].indexOf('?') === -1) {\n          splittedValue = splittedStringValue[0];\n          splittedValue = '\\'' + splittedValue + '\\'';\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\n          returnValue += operator + '(';\n          returnValue += field + ',';\n          if (guid) {\n            returnValue += guid;\n          }\n          returnValue += splittedValue + ')';\n          count++;\n        }\n        if (val.lastIndexOf('*') !== val.length - 1 && splittedStringValue[splittedStringValue.length - 1].indexOf('%3f') === -1 && splittedStringValue[splittedStringValue.length - 1].indexOf('?') === -1) {\n          splittedValue = splittedStringValue[splittedStringValue.length - 1];\n          splittedValue = '\\'' + splittedValue + '\\'';\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\n          if (count > 0) {\n            returnValue += ' and ';\n          }\n          returnValue += operator + '(';\n          returnValue += field + ',';\n          if (guid) {\n            returnValue += guid;\n          }\n          returnValue += splittedValue + ')';\n          count++;\n        }\n        if (splittedStringValue.length > 2) {\n          for (var i = 1; i < splittedStringValue.length - 1; i++) {\n            if (splittedStringValue[i].indexOf('%3f') === -1 && splittedStringValue[i].indexOf('?') === -1) {\n              splittedValue = splittedStringValue[i];\n              splittedValue = '\\'' + splittedValue + '\\'';\n              operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n              if (count > 0) {\n                returnValue += ' and ';\n              }\n              if (operator === 'substringof' || operator === 'not substringof') {\n                var temp = splittedValue;\n                splittedValue = field;\n                field = temp;\n              }\n              returnValue += operator + '(';\n              returnValue += field + ',';\n              if (guid) {\n                returnValue += guid;\n              }\n              returnValue += splittedValue + ')';\n              count++;\n            }\n          }\n        }\n        if (count === 0) {\n          operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n          if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\n            val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\n          }\n          val = '\\'' + val + '\\'';\n        } else {\n          operator = 'wildcard';\n        }\n      } else {\n        operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ? DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\n        if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\n          val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\n        }\n        val = '\\'' + val + '\\'';\n      }\n    }\n    if (operator === 'substringof' || operator === 'not substringof') {\n      var temp = val;\n      val = field;\n      field = temp;\n    }\n    if (operator !== 'wildcard') {\n      returnValue += operator + '(';\n      returnValue += field + ',';\n      if (guid) {\n        returnValue += guid;\n      }\n      returnValue += val + ')';\n    }\n    return returnValue;\n  };\n  ODataAdaptor.prototype.addParams = function (options) {\n    _super.prototype.addParams.call(this, options);\n    delete options.reqParams.params;\n  };\n  /**\r\n   * Generate request string based on the multiple filter criteria from query.\r\n   *\r\n   * @param {Predicate} pred\r\n   * @param {boolean} requiresCast?\r\n   * @param predicate\r\n   * @param query\r\n   * @param requiresCast\r\n   */\n  ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n    var res = [];\n    for (var i = 0; i < predicate.predicates.length; i++) {\n      res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n    }\n    return res.join(' ' + predicate.condition + ' ');\n  };\n  /**\r\n   * Generate query string based on the multiple filter criteria from query.\r\n   *\r\n   * @param {Predicate} filter\r\n   * @param {boolean} requiresCast?\r\n   * @param query\r\n   * @param requiresCast\r\n   */\n  ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n    return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n  };\n  /**\r\n   * Generate query string based on the multiple filter criteria from query.\r\n   *\r\n   * @param  {string[]} filters\r\n   */\n  ODataAdaptor.prototype.onWhere = function (filters) {\n    if (this.pvt.search) {\n      filters.push(this.onEachWhere(this.pvt.search, null, true));\n    }\n    return filters.join(' and ');\n  };\n  /**\r\n   * Generate query string based on the multiple search criteria from query.\r\n   *\r\n   * @param e\r\n   * @param {string} operator\r\n   * @param {string} key\r\n   * @param {boolean} } ignoreCase\r\n   * @param e.fields\r\n   * @param e.operator\r\n   * @param e.key\r\n   * @param e.ignoreCase\r\n   */\n  ODataAdaptor.prototype.onEachSearch = function (e) {\n    if (e.fields && e.fields.length === 0) {\n      DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n    }\n    var filter = this.pvt.search || [];\n    for (var i = 0; i < e.fields.length; i++) {\n      filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n    }\n    this.pvt.search = filter;\n  };\n  /**\r\n   * Generate query string based on the search criteria from query.\r\n   *\r\n   * @param  {Object} e\r\n   */\n  ODataAdaptor.prototype.onSearch = function (e) {\n    this.pvt.search = Predicate.or(this.pvt.search);\n    return '';\n  };\n  /**\r\n   * Generate query string based on multiple sort criteria from query.\r\n   *\r\n   * @param  {QueryOptions} e\r\n   */\n  ODataAdaptor.prototype.onEachSort = function (e) {\n    var res = [];\n    if (e.name instanceof Array) {\n      for (var i = 0; i < e.name.length; i++) {\n        res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n      }\n    } else {\n      res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n    }\n    return res.join(',');\n  };\n  /**\r\n   * Returns sort query string.\r\n   *\r\n   * @param  {string[]} e\r\n   */\n  ODataAdaptor.prototype.onSortBy = function (e) {\n    return e.reverse().join(',');\n  };\n  /**\r\n   * Adds the group query to the adaptor option.\r\n   *\r\n   * @param  {Object[]} e\r\n   * @returns string\r\n   */\n  ODataAdaptor.prototype.onGroup = function (e) {\n    this.pvt.groups = e;\n    return [];\n  };\n  /**\r\n   * Returns the select query string.\r\n   *\r\n   * @param  {string[]} e\r\n   */\n  ODataAdaptor.prototype.onSelect = function (e) {\n    for (var i = 0; i < e.length; i++) {\n      e[i] = ODataAdaptor.getField(e[i]);\n    }\n    return e.join(',');\n  };\n  /**\r\n   * Add the aggregate query to the adaptor option.\r\n   *\r\n   * @param  {Object[]} e\r\n   * @returns string\r\n   */\n  ODataAdaptor.prototype.onAggregates = function (e) {\n    this.pvt.aggregates = e;\n    return '';\n  };\n  /**\r\n   * Returns the query string which requests total count from the data source.\r\n   *\r\n   * @param  {boolean} e\r\n   * @returns string\r\n   */\n  ODataAdaptor.prototype.onCount = function (e) {\n    return e === true ? 'allpages' : '';\n  };\n  /**\r\n   * Method will trigger before send the request to server side.\r\n   * Used to set the custom header or modify the request options.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Request} request\r\n   * @param {Fetch} settings?\r\n   * @param settings\r\n   */\n  ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.headers.set('Accept', this.options.multipartAccept);\n      request.headers.set('DataServiceVersion', '2.0');\n      //request.overrideMimeType('text/plain; charset=x-user-defined');\n    } else {\n      request.headers.set('Accept', this.options.accept);\n    }\n    request.headers.set('DataServiceVersion', '2.0');\n    request.headers.set('MaxDataServiceVersion', '2.0');\n  };\n  /**\r\n   * Returns the data from the query processing.\r\n   *\r\n   * @param {DataResult} data\r\n   * @param {DataOptions} ds?\r\n   * @param {Query} query?\r\n   * @param {Request} xhr?\r\n   * @param {Fetch} request?\r\n   * @param {CrudOptions} changes?\r\n   * @param ds\r\n   * @param query\r\n   * @param xhr\r\n   * @param request\r\n   * @param changes\r\n   * @returns aggregateResult\r\n   */\n  ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaCheck = 'odata.metadata';\n    if (request && request.type === 'GET' && !this.rootUrl && data[metaCheck]) {\n      var dataUrls = data[metaCheck].split('/$metadata#');\n      this.rootUrl = dataUrls[0];\n      this.resourceTableName = dataUrls[1];\n    }\n    var pvtData = 'pvtData';\n    if (!isNullOrUndefined(data.d)) {\n      var dataCopy = query && query.isCountRequired ? data.d.results : data.d;\n      var metaData = '__metadata';\n      if (!isNullOrUndefined(dataCopy)) {\n        for (var i = 0; i < dataCopy.length; i++) {\n          if (!isNullOrUndefined(dataCopy[i][metaData])) {\n            delete dataCopy[i][metaData];\n          }\n        }\n      }\n    }\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n    var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\n    var count = null;\n    var version = versionCheck && parseInt(versionCheck, 10) || 2;\n    if (query && query.isCountRequired) {\n      var oDataCount = '__count';\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n      if (data.d) {\n        data = data.d;\n      }\n      if (data[oDataCount] || data['odata.count']) {\n        count = data[oDataCount] || data['odata.count'];\n      }\n    }\n    if (version === 3 && data.value) {\n      data = data.value;\n    }\n    if (data.d) {\n      data = data.d;\n    }\n    if (version < 3 && data.results) {\n      data = data.results;\n    }\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  /**\r\n   * Converts the request object to query string.\r\n   *\r\n   * @param {Object} req\r\n   * @param request\r\n   * @param {Query} query\r\n   * @param {DataManager} dm\r\n   * @returns tableName\r\n   */\n  ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n    var res = [];\n    var table = 'table';\n    var tableName = request[table] || '';\n    var format = '$format';\n    delete request[table];\n    if (dm.dataSource.requiresFormat) {\n      request[format] = 'json';\n    }\n    var keys = Object.keys(request);\n    for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n      var prop = keys_4[_i];\n      res.push(prop + '=' + request[prop]);\n    }\n    res = res.join('&');\n    if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n      return res;\n    }\n    return res.length ? tableName + '?' + res : tableName || '';\n  };\n  ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n    for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n      var prop = _a[_i];\n      if (convertObj[prop] instanceof Date) {\n        convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n      }\n    }\n    return convertObj;\n  };\n  /**\r\n   * Prepare and returns request body which is used to insert a new record in the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Object} data\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   */\n  ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n      data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n    };\n  };\n  /**\r\n   * Prepare and return request body which is used to remove record from the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {number} value\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   */\n  ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    var url;\n    if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n      url = \"('\" + value + \"')\";\n    } else {\n      url = \"(\" + value + \")\";\n    }\n    return {\n      type: 'DELETE',\n      url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n    };\n  };\n  /**\r\n   * Updates existing record and saves the changes to the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {Object} value\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   * @param query\r\n   * @param original\r\n   * @returns this\r\n   */\n  ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n    if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n      value = this.compareAndRemove(value, original, keyField);\n    }\n    var url;\n    if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n      url = \"('\" + value[keyField] + \"')\";\n    } else {\n      url = \"(\" + value[keyField] + \")\";\n    }\n    return {\n      type: this.options.updateType,\n      url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n      data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n      accept: this.options.accept\n    };\n  };\n  /**\r\n   * Prepare the request body based on the newly added, removed and updated records.\r\n   * The result is used by the batch request.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {CrudOptions} changes\r\n   * @param {RemoteArgs} e\r\n   * @param query\r\n   * @param original\r\n   * @returns {Object}\r\n   */\n  ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.batchUrl || this.rootUrl ? (dm.dataSource.batchUrl || this.rootUrl) + '/' + this.options.batch : (dm.dataSource.batchUrl || dm.dataSource.url).replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var args = {\n      url: e.url,\n      key: e.key,\n      cid: 1,\n      cSet: DataUtil.getGuid(this.options.changeSet)\n    };\n    var req = '--' + initialGuid + '\\n';\n    req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n    this.pvt.changeSet = 0;\n    req += this.generateInsertRequest(changes.addedRecords, args, dm);\n    req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n    req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n    req += args.cSet + '--\\n';\n    req += '--' + initialGuid + '--';\n    return {\n      type: 'POST',\n      url: url,\n      dataType: 'json',\n      contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n      data: req\n    };\n  };\n  /**\r\n   * Generate the string content from the removed records.\r\n   * The result will be send during batch update.\r\n   *\r\n   * @param {Object[]} arr\r\n   * @param {RemoteArgs} e\r\n   * @param dm\r\n   * @returns this\r\n   */\n  ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    var stat = {\n      'method': 'DELETE ',\n      'url': function (data, i, key) {\n        var url = DataUtil.getObject(key, data[i]);\n        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n          return '(' + url + ')';\n        } else if (url instanceof Date) {\n          var dateTime = data[i][key];\n          return '(' + dateTime.toJSON() + ')';\n        } else {\n          return \"('\" + url + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return '';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req + '\\n';\n  };\n  /**\r\n   * Generate the string content from the inserted records.\r\n   * The result will be send during batch update.\r\n   *\r\n   * @param {Object[]} arr\r\n   * @param {RemoteArgs} e\r\n   * @param dm\r\n   */\n  ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    var stat = {\n      'method': 'POST ',\n      'url': function (data, i, key) {\n        return '';\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  /**\r\n   * Generate the string content from the updated records.\r\n   * The result will be send during batch update.\r\n   *\r\n   * @param {Object[]} arr\r\n   * @param {RemoteArgs} e\r\n   * @param dm\r\n   * @param org\r\n   */\n  ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n    var _this = this;\n    if (!arr) {\n      return '';\n    }\n    var req = '';\n    arr.forEach(function (change) {\n      return change = _this.compareAndRemove(change, org.filter(function (o) {\n        return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change);\n      })[0], e.key);\n    });\n    var stat = {\n      'method': this.options.updateType + ' ',\n      'url': function (data, i, key) {\n        if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n          return '(' + data[i][key] + ')';\n        } else if (data[i][key] instanceof Date) {\n          var date = data[i][key];\n          return '(' + date.toJSON() + ')';\n        } else {\n          return \"('\" + data[i][key] + \"')\";\n        }\n      },\n      'data': function (data, i) {\n        return JSON.stringify(data[i]) + '\\n\\n';\n      }\n    };\n    req = this.generateBodyContent(arr, e, stat, dm);\n    return req;\n  };\n  ODataAdaptor.getField = function (prop) {\n    return prop.replace(/\\./g, '/');\n  };\n  ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n    var req = '';\n    for (var i = 0; i < arr.length; i++) {\n      req += '\\n' + e.cSet + '\\n';\n      req += this.options.changeSetContent + '\\n\\n';\n      req += stat.method;\n      if (stat.method === 'POST ') {\n        req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n        req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      } else if (stat.method === 'DELETE ') {\n        req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n      }\n      req += 'Accept: ' + this.options.accept + '\\n';\n      req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n      req += this.options.batchChangeSetContentType + '\\n';\n      if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n        req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n        delete arr[i]['@odata.etag'];\n      } else {\n        req += '\\n';\n      }\n      req += stat.data(arr, i);\n    }\n    return req;\n  };\n  ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n    if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\n      return query.isCountRequired ? {\n        result: [],\n        count: 0\n      } : [];\n    }\n    if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n      var guid = xhr.headers.get('Content-Type');\n      var cIdx = void 0;\n      var jsonObj = void 0;\n      var d = data + '';\n      guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n      d = d.split(guid);\n      if (d.length < 2) {\n        return {};\n      }\n      d = d[1];\n      var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n      if (exVal) {\n        d.replace(exVal[0], '');\n      }\n      var changeGuid = exVal ? exVal[1] : '';\n      d = d.split(changeGuid);\n      for (var i = d.length; i > -1; i--) {\n        if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n          continue;\n        }\n        cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n        if (changes.addedRecords[cIdx]) {\n          jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n          extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n        }\n      }\n      return changes;\n    }\n    return null;\n  };\n  ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n    var _this = this;\n    if (isNullOrUndefined(original)) {\n      return data;\n    }\n    Object.keys(data).forEach(function (prop) {\n      if (prop !== key && prop !== '@odata.etag') {\n        if (DataUtil.isPlainObject(data[prop])) {\n          _this.compareAndRemove(data[prop], original[prop]);\n          var final = Object.keys(data[prop]).filter(function (data) {\n            return data !== '@odata.etag';\n          });\n          if (final.length === 0) {\n            delete data[prop];\n          }\n        } else if (data[prop] === original[prop]) {\n          delete data[prop];\n        } else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n          delete data[prop];\n        }\n      }\n    });\n    return data;\n  };\n  return ODataAdaptor;\n}(UrlAdaptor);\nexport { ODataAdaptor };\n/**\r\n * The OData v4 is an improved version of OData protocols.\r\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\r\n *\r\n * @hidden\r\n */\nvar ODataV4Adaptor = /** @class */function (_super) {\n  __extends(ODataV4Adaptor, _super);\n  function ODataV4Adaptor(props) {\n    var _this = _super.call(this, props) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      requestType: 'get',\n      accept: 'application/json, text/javascript, */*; q=0.01',\n      multipartAccept: 'multipart/mixed',\n      sortBy: '$orderby',\n      select: '$select',\n      skip: '$skip',\n      take: '$top',\n      count: '$count',\n      search: '$search',\n      where: '$filter',\n      expand: '$expand',\n      batch: '$batch',\n      changeSet: '--changeset_',\n      batchPre: 'batch_',\n      contentId: 'Content-Id: ',\n      batchContent: 'Content-Type: multipart/mixed; boundary=',\n      changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n      batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n      updateType: 'PATCH',\n      localTime: false,\n      apply: '$apply'\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  /**\r\n   * @hidden\r\n   */\n  ODataV4Adaptor.prototype.getModuleName = function () {\n    return 'ODataV4Adaptor';\n  };\n  /**\r\n   * Returns the query string which requests total count from the data source.\r\n   *\r\n   * @param  {boolean} e\r\n   * @returns string\r\n   */\n  ODataV4Adaptor.prototype.onCount = function (e) {\n    return e === true ? 'true' : '';\n  };\n  /**\r\n   * Generate request string based on the filter criteria from query.\r\n   *\r\n   * @param {Predicate} pred\r\n   * @param {boolean} requiresCast?\r\n   * @param predicate\r\n   * @param query\r\n   * @param requiresCast\r\n   */\n  ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n    var returnValue = '';\n    var val = predicate.value;\n    var isDate = val instanceof Date;\n    if (query instanceof Query) {\n      var queries = this.getQueryRequest(query);\n      for (var i = 0; i < queries.filters.length; i++) {\n        if (queries.filters[i].e.key === predicate.value) {\n          requiresCast = true;\n        }\n      }\n    }\n    returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n    if (isDate) {\n      returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n    }\n    if (DataUtil.parse.isGuid(val)) {\n      returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n    }\n    return returnValue;\n  };\n  /**\r\n   * Generate query string based on the multiple search criteria from query.\r\n   *\r\n   * @param e\r\n   * @param {string} operator\r\n   * @param {string} key\r\n   * @param {boolean} } ignoreCase\r\n   * @param e.fields\r\n   * @param e.operator\r\n   * @param e.key\r\n   * @param e.ignoreCase\r\n   */\n  ODataV4Adaptor.prototype.onEachSearch = function (e) {\n    var search = this.pvt.searches || [];\n    search.push(e.key);\n    this.pvt.searches = search;\n  };\n  /**\r\n   *  Generate query string based on the search criteria from query.\r\n   *\r\n   * @param  {Object} e\r\n   */\n  ODataV4Adaptor.prototype.onSearch = function (e) {\n    return this.pvt.searches.join(' OR ');\n  };\n  /**\r\n   * Returns the expand query string.\r\n   *\r\n   * @param {string} e\r\n   * @param e.selects\r\n   * @param e.expands\r\n   */\n  ODataV4Adaptor.prototype.onExpand = function (e) {\n    var _this = this;\n    var selected = {};\n    var expanded = {};\n    var expands = e.expands.slice();\n    var exArr = [];\n    var selects = e.selects.filter(function (item) {\n      return item.indexOf('.') > -1;\n    });\n    selects.forEach(function (select) {\n      var splits = select.split('.');\n      if (!(splits[0] in selected)) {\n        selected[splits[0]] = [];\n      }\n      if (splits.length === 2) {\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\n          if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\n            selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\n          } else {\n            selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\n          }\n        } else {\n          selected[splits[0]].push('$select=' + splits[1]);\n        }\n      } else {\n        var sel = '$select=' + splits[splits.length - 1];\n        var exp = '';\n        var close_1 = '';\n        for (var i = 1; i < splits.length - 1; i++) {\n          exp = exp + '$expand=' + splits[i] + '(';\n          close_1 = close_1 + ')';\n        }\n        var combineVal = exp + sel + close_1;\n        if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 && _this.expandQueryIndex(selected[splits[0]], true)) {\n          var idx = _this.expandQueryIndex(selected[splits[0]]);\n          selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\n        } else {\n          selected[splits[0]].push(combineVal);\n        }\n      }\n    });\n    //Auto expand from select query\n    Object.keys(selected).forEach(function (expand) {\n      if (expands.indexOf(expand) === -1) {\n        expands.push(expand);\n      }\n    });\n    expands.forEach(function (expand) {\n      expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\n    });\n    Object.keys(expanded).forEach(function (ex) {\n      return exArr.push(expanded[ex]);\n    });\n    return exArr.join(',');\n  };\n  ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\n    for (var i = 0; i < query.length; i++) {\n      if (query[i].indexOf('$expand') !== -1) {\n        return isExpand ? true : i;\n      }\n    }\n    return isExpand ? false : 0;\n  };\n  /**\r\n   * Returns the groupby query string.\r\n   *\r\n   * @param {string} e\r\n   * @param distinctFields\r\n   */\n  ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n    var fields = distinctFields.map(function (field) {\n      return ODataAdaptor.getField(field);\n    }).join(',');\n    return \"groupby((\" + fields + \"))\";\n  };\n  /**\r\n   * Returns the select query string.\r\n   *\r\n   * @param  {string[]} e\r\n   */\n  ODataV4Adaptor.prototype.onSelect = function (e) {\n    return _super.prototype.onSelect.call(this, e.filter(function (item) {\n      return item.indexOf('.') === -1;\n    }));\n  };\n  /**\r\n   * Method will trigger before send the request to server side.\r\n   * Used to set the custom header or modify the request options.\r\n   *\r\n   * @param  {DataManager} dm\r\n   * @param  {Request} request\r\n   * @param  {Fetch} settings\r\n   * @returns void\r\n   */\n  ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n      request.headers.set('Prefer', 'return=representation');\n    }\n    request.headers.set('Accept', this.options.accept);\n  };\n  /**\r\n   * Returns the data from the query processing.\r\n   *\r\n   * @param {DataResult} data\r\n   * @param {DataOptions} ds?\r\n   * @param {Query} query?\r\n   * @param {Request} xhr?\r\n   * @param {Fetch} request?\r\n   * @param {CrudOptions} changes?\r\n   * @param ds\r\n   * @param query\r\n   * @param xhr\r\n   * @param request\r\n   * @param changes\r\n   * @returns aggregateResult\r\n   */\n  ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var metaName = '@odata.context';\n    var metaV4Name = '@context';\n    if (request && request.type === 'GET' && !this.rootUrl && (data[metaName] || data[metaV4Name])) {\n      var dataUrl = data[metaName] ? data[metaName].split('/$metadata#') : data[metaV4Name].split('/$metadata#');\n      this.rootUrl = dataUrl[0];\n      this.resourceTableName = dataUrl[1];\n    }\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n    if (emptyAndBatch) {\n      return emptyAndBatch;\n    }\n    var count = null;\n    var dataCount = '@odata.count';\n    var dataV4Count = '@count';\n    if (query && query.isCountRequired) {\n      if (dataCount in data) {\n        count = data[dataCount];\n      } else if (dataV4Count in data) {\n        count = data[dataV4Count];\n      }\n    }\n    data = !isNullOrUndefined(data.value) ? data.value : data;\n    var args = {};\n    args.count = count;\n    args.result = data;\n    this.getAggregateResult(pvt, data, args, null, query);\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: count,\n      aggregates: args.aggregates\n    };\n  };\n  return ODataV4Adaptor;\n}(ODataAdaptor);\nexport { ODataV4Adaptor };\n/**\r\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\r\n * The DataManager uses the WebApiAdaptor to consume Web API.\r\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n *\r\n * @hidden\r\n */\nvar WebApiAdaptor = /** @class */function (_super) {\n  __extends(WebApiAdaptor, _super);\n  function WebApiAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  WebApiAdaptor.prototype.getModuleName = function () {\n    return 'WebApiAdaptor';\n  };\n  /**\r\n   * Prepare and returns request body which is used to insert a new record in the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Object} data\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   */\n  WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.url,\n      data: JSON.stringify(data)\n    };\n  };\n  /**\r\n   * Prepare and return request body which is used to remove record from the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {number} value\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   */\n  WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    return {\n      type: 'DELETE',\n      url: dm.dataSource.url + '/' + value,\n      data: JSON.stringify(value)\n    };\n  };\n  /**\r\n   * Prepare and return request body which is used to update record.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {Object} value\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   */\n  WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    return {\n      type: 'PUT',\n      url: dm.dataSource.url,\n      data: JSON.stringify(value)\n    };\n  };\n  WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    var _this = this;\n    var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n    var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n    e.url = this.resourceTableName ? this.resourceTableName : e.url;\n    var req = [];\n    var _loop_1 = function (i, x) {\n      changes.addedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': 'POST ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //insertion\n    for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n      _loop_1(i, x);\n    }\n    var _loop_2 = function (i, x) {\n      changes.changedRecords.forEach(function (j, d) {\n        var stat = {\n          'method': _this.options.updateType + ' ',\n          'url': function (data, i, key) {\n            return '';\n          },\n          'data': function (data, i) {\n            return JSON.stringify(data[i]) + '\\n\\n';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //updation\n    for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n      _loop_2(i, x);\n    }\n    var _loop_3 = function (i, x) {\n      changes.deletedRecords.forEach(function (j, d) {\n        var state = {\n          'mtd': 'DELETE ',\n          'url': function (data, i, key) {\n            var url = DataUtil.getObject(key, data[i]);\n            if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n              return '/' + url;\n            } else if (url instanceof Date) {\n              var datTime = data[i][key];\n              return '/' + datTime.toJSON();\n            } else {\n              return \"/'\" + url + \"'\";\n            }\n          },\n          'data': function (data, i) {\n            return '';\n          }\n        };\n        req.push('--' + initialGuid);\n        req.push('Content-Type: application/http; msgtype=request', '');\n        req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n        req.push('Content-Type: ' + 'application/json; charset=utf-8');\n        req.push('Host: ' + location.host);\n        req.push('', j ? JSON.stringify(j) : '');\n      });\n    };\n    //deletion\n    for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n      _loop_3(i, x);\n    }\n    req.push('--' + initialGuid + '--', '');\n    return {\n      type: 'POST',\n      url: url,\n      contentType: 'multipart/mixed; boundary=' + initialGuid,\n      data: req.join('\\r\\n')\n    };\n  };\n  /**\r\n   * Method will trigger before send the request to server side.\r\n   * Used to set the custom header or modify the request options.\r\n   *\r\n   * @param  {DataManager} dm\r\n   * @param  {Request} request\r\n   * @param  {Fetch} settings\r\n   * @returns void\r\n   */\n  WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    request.headers.set('Accept', 'application/json, text/javascript, */*; q=0.01');\n  };\n  /**\r\n   * Returns the data from the query processing.\r\n   *\r\n   * @param {DataResult} data\r\n   * @param {DataOptions} ds?\r\n   * @param {Query} query?\r\n   * @param {Request} xhr?\r\n   * @param {Fetch} request?\r\n   * @param {CrudOptions} changes?\r\n   * @param ds\r\n   * @param query\r\n   * @param xhr\r\n   * @param request\r\n   * @param changes\r\n   * @returns aggregateResult\r\n   */\n  WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    var pvtData = 'pvtData';\n    var pvt = request && request[pvtData];\n    var count = null;\n    var args = {};\n    if (request && request.type.toLowerCase() !== 'post') {\n      var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\n      var version = versionCheck && parseInt(versionCheck, 10) || 2;\n      if (query && query.isCountRequired) {\n        if (!DataUtil.isNull(data.Count)) {\n          count = data.Count;\n        }\n      }\n      if (version < 3 && data.Items) {\n        data = data.Items;\n      }\n      args.count = count;\n      args.result = data;\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n    args.result = args.result || data;\n    return DataUtil.isNull(count) ? args.result : {\n      result: args.result,\n      count: args.count,\n      aggregates: args.aggregates\n    };\n  };\n  return WebApiAdaptor;\n}(ODataAdaptor);\nexport { WebApiAdaptor };\n/**\r\n * WebMethodAdaptor can be used by DataManager to interact with web method.\r\n *\r\n * @hidden\r\n */\nvar WebMethodAdaptor = /** @class */function (_super) {\n  __extends(WebMethodAdaptor, _super);\n  function WebMethodAdaptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Prepare the request body based on the query.\r\n   * The query information can be accessed at the WebMethod using variable named `value`.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Query} query\r\n   * @param {Object[]} hierarchyFilters?\r\n   * @param hierarchyFilters\r\n   * @returns application\r\n   */\n  WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n    var getData = 'data';\n    var data = DataUtil.parse.parseJson(obj[getData]);\n    var result = {};\n    var value = 'value';\n    if (data.param) {\n      for (var i = 0; i < data.param.length; i++) {\n        var param = data.param[i];\n        var key = Object.keys(param)[0];\n        result[key] = param[key];\n      }\n    }\n    result[value] = data;\n    var pvtData = 'pvtData';\n    var url = 'url';\n    return {\n      data: JSON.stringify(result, DataUtil.parse.jsonDateReplacer),\n      url: obj[url],\n      pvtData: obj[pvtData],\n      type: 'POST',\n      contentType: 'application/json; charset=utf-8'\n    };\n  };\n  return WebMethodAdaptor;\n}(UrlAdaptor);\nexport { WebMethodAdaptor };\n/**\r\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\r\n * It interacts with server-side only for CRUD operations.\r\n *\r\n * @hidden\r\n */\nvar RemoteSaveAdaptor = /** @class */function (_super) {\n  __extends(RemoteSaveAdaptor, _super);\n  /**\r\n   * @hidden\r\n   */\n  function RemoteSaveAdaptor() {\n    var _this = _super.call(this) || this;\n    setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n    return _this;\n  }\n  RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n    this.pvt.position = position;\n    this.updateType = 'add';\n    return {\n      url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: data,\n        table: tableName,\n        action: 'insert'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n    _super.prototype.remove.call(this, dm, keyField, val);\n    return {\n      type: 'POST',\n      url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        key: val,\n        keyColumn: keyField,\n        table: tableName,\n        action: 'remove'\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n    this.updateType = 'update';\n    this.updateKey = keyField;\n    return {\n      type: 'POST',\n      url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      data: JSON.stringify(extend({}, {\n        value: val,\n        action: 'update',\n        keyColumn: keyField,\n        key: val[keyField],\n        table: tableName\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n    var i;\n    var newData = request ? JSON.parse(request.data) : data;\n    data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n    if (this.updateType === 'add') {\n      _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n    }\n    if (this.updateType === 'update') {\n      _super.prototype.update.call(this, ds, this.updateKey, data);\n    }\n    this.updateType = undefined;\n    if (data.added) {\n      for (i = 0; i < data.added.length; i++) {\n        _super.prototype.insert.call(this, ds, data.added[i]);\n      }\n    }\n    if (data.changed) {\n      for (i = 0; i < data.changed.length; i++) {\n        _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n      }\n    }\n    if (data.deleted) {\n      for (i = 0; i < data.deleted.length; i++) {\n        _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n      }\n    }\n    return data;\n  };\n  /**\r\n   * Prepare the request body based on the newly added, removed and updated records.\r\n   * Also perform the changes in the locally cached data to sync with the remote data.\r\n   * The result is used by the batch request.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {CrudOptions} changes\r\n   * @param {RemoteArgs} e\r\n   * @param query\r\n   * @param original\r\n   */\n  RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    return {\n      type: 'POST',\n      url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n      contentType: 'application/json; charset=utf-8',\n      dataType: 'json',\n      data: JSON.stringify(extend({}, {\n        changed: changes.changedRecords,\n        added: changes.addedRecords,\n        deleted: changes.deletedRecords,\n        action: 'batch',\n        table: e.url,\n        key: e.key\n      }, DataUtil.getAddParams(this, dm, query)))\n    };\n  };\n  RemoteSaveAdaptor.prototype.addParams = function (options) {\n    var urlParams = new UrlAdaptor();\n    urlParams.addParams(options);\n  };\n  return RemoteSaveAdaptor;\n}(JsonAdaptor);\nexport { RemoteSaveAdaptor };\n/**\r\n * Fetch Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\r\n *\r\n * @hidden\r\n */\nvar CustomDataAdaptor = /** @class */function (_super) {\n  __extends(CustomDataAdaptor, _super);\n  function CustomDataAdaptor(props) {\n    var _this = _super.call(this) || this;\n    // options replaced the default adaptor options\n    _this.options = extend({}, _this.options, {\n      getData: new Function(),\n      addRecord: new Function(),\n      updateRecord: new Function(),\n      deleteRecord: new Function(),\n      batchUpdate: new Function()\n    });\n    extend(_this.options, props || {});\n    return _this;\n  }\n  CustomDataAdaptor.prototype.getModuleName = function () {\n    return 'CustomDataAdaptor';\n  };\n  return CustomDataAdaptor;\n}(UrlAdaptor);\nexport { CustomDataAdaptor };\n/**\r\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\r\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\r\n *\r\n * @hidden\r\n */\nvar GraphQLAdaptor = /** @class */function (_super) {\n  __extends(GraphQLAdaptor, _super);\n  function GraphQLAdaptor(options) {\n    var _this = _super.call(this) || this;\n    _this.opt = options;\n    _this.schema = _this.opt.response;\n    _this.query = _this.opt.query;\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    // tslint:disable-next-line:no-empty\n    _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () {};\n    /* eslint-enable @typescript-eslint/no-empty-function */\n    _this.getQuery = function () {\n      return _this.query;\n    };\n    return _this;\n  }\n  GraphQLAdaptor.prototype.getModuleName = function () {\n    return 'GraphQLAdaptor';\n  };\n  /**\r\n   * Process the JSON data based on the provided queries.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Query} query?\r\n   * @param datamanager\r\n   * @param query\r\n   */\n  GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\n    var urlQuery = _super.prototype.processQuery.apply(this, arguments);\n    var dm = JSON.parse(urlQuery.data);\n    // constructing GraphQL parameters\n    var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where', 'search', 'requiresCounts', 'aggregates', 'params'];\n    var temp = {};\n    var str = 'searchwhereparams';\n    keys.filter(function (e) {\n      temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\n    });\n    var vars = this.getVariables() || {};\n    // tslint:disable-next-line:no-string-literal\n    vars['datamanager'] = temp;\n    var data = JSON.stringify({\n      query: this.getQuery(),\n      variables: vars\n    });\n    urlQuery.data = data;\n    return urlQuery;\n  };\n  /**\r\n   * Returns the data from the query processing.\r\n   * It will also cache the data for later usage.\r\n   *\r\n   * @param {DataResult} data\r\n   * @param {DataManager} ds?\r\n   * @param {Query} query?\r\n   * @param {Request} xhr?\r\n   * @param {Object} request?\r\n   * @param resData\r\n   * @param ds\r\n   * @param query\r\n   * @param xhr\r\n   * @param request\r\n   * @returns DataResult\r\n   */\n  GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\n    var res = resData;\n    var count;\n    var aggregates;\n    var result = getValue(this.schema.result, res.data);\n    if (this.schema.count) {\n      count = getValue(this.schema.count, res.data);\n    }\n    if (this.schema.aggregates) {\n      aggregates = getValue(this.schema.aggregates, res.data);\n      aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\n    }\n    var pvt = request.pvtData || {};\n    var args = {\n      result: result,\n      aggregates: aggregates\n    };\n    var data = args;\n    if (pvt && pvt.groups && pvt.groups.length) {\n      this.getAggregateResult(pvt, data, args, null, query);\n    }\n    return !isNullOrUndefined(count) ? {\n      result: args.result,\n      count: count,\n      aggregates: aggregates\n    } : args.result;\n  };\n  /**\r\n   * Prepare and returns request body which is used to insert a new record in the table.\r\n   */\n  GraphQLAdaptor.prototype.insert = function () {\n    var inserted = _super.prototype.insert.apply(this, arguments);\n    return this.generateCrudData(inserted, 'insert');\n  };\n  /**\r\n   * Prepare and returns request body which is used to update a new record in the table.\r\n   */\n  GraphQLAdaptor.prototype.update = function () {\n    var inserted = _super.prototype.update.apply(this, arguments);\n    return this.generateCrudData(inserted, 'update');\n  };\n  /**\r\n   * Prepare and returns request body which is used to remove a new record in the table.\r\n   */\n  GraphQLAdaptor.prototype.remove = function () {\n    var inserted = _super.prototype.remove.apply(this, arguments);\n    return this.generateCrudData(inserted, 'remove');\n  };\n  /**\r\n   * Prepare the request body based on the newly added, removed and updated records.\r\n   * The result is used by the batch request.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {CrudOptions} changes\r\n   * @param {Object} e\r\n   * @param e.key\r\n   * @param {Query} query\r\n   * @param {Object} original\r\n   */\n  GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n    var batch = _super.prototype.batchRequest.apply(this, arguments);\n    // tslint:disable-next-line:typedef\n    var bData = JSON.parse(batch.data);\n    bData.key = e.key;\n    batch.data = JSON.stringify(bData);\n    return this.generateCrudData(batch, 'batch');\n  };\n  GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\n    var parsed = JSON.parse(crudData.data);\n    crudData.data = JSON.stringify({\n      query: this.opt.getMutation(action),\n      variables: parsed\n    });\n    return crudData;\n  };\n  return GraphQLAdaptor;\n}(UrlAdaptor);\nexport { GraphQLAdaptor };\n/**\r\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\r\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\r\n *\r\n * @hidden\r\n */\nvar CacheAdaptor = /** @class */function (_super) {\n  __extends(CacheAdaptor, _super);\n  /**\r\n   * Constructor for CacheAdaptor class.\r\n   *\r\n   * @param {CacheAdaptor} adaptor?\r\n   * @param {number} timeStamp?\r\n   * @param {number} pageSize?\r\n   * @param adaptor\r\n   * @param timeStamp\r\n   * @param pageSize\r\n   * @hidden\r\n   */\n  function CacheAdaptor(adaptor, timeStamp, pageSize) {\n    var _this = _super.call(this) || this;\n    _this.isCrudAction = false;\n    _this.isInsertAction = false;\n    if (!isNullOrUndefined(adaptor)) {\n      _this.cacheAdaptor = adaptor;\n    }\n    _this.pageSize = pageSize;\n    _this.guidId = DataUtil.getGuid('cacheAdaptor');\n    var obj = {\n      keys: [],\n      results: []\n    };\n    window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n    var guid = _this.guidId;\n    if (!isNullOrUndefined(timeStamp)) {\n      setInterval(function () {\n        var data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n        var forDel = [];\n        for (var i = 0; i < data.results.length; i++) {\n          var currentTime = +new Date();\n          var requestTime = +new Date(data.results[i].timeStamp);\n          data.results[i].timeStamp = currentTime - requestTime;\n          if (currentTime - requestTime > timeStamp) {\n            forDel.push(i);\n          }\n        }\n        for (var i = 0; i < forDel.length; i++) {\n          data.results.splice(forDel[i], 1);\n          data.keys.splice(forDel[i], 1);\n        }\n        window.localStorage.removeItem(guid);\n        window.localStorage.setItem(guid, JSON.stringify(data));\n      }, timeStamp);\n    }\n    return _this;\n  }\n  /**\r\n   * It will generate the key based on the URL when we send a request to server.\r\n   *\r\n   * @param {string} url\r\n   * @param {Query} query?\r\n   * @param query\r\n   * @hidden\r\n   */\n  CacheAdaptor.prototype.generateKey = function (url, query) {\n    var queries = this.getQueryRequest(query);\n    var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n    var key = url;\n    var page = 'onPage';\n    if (page in singles) {\n      key += singles[page].pageIndex;\n    }\n    queries.sorts.forEach(function (obj) {\n      key += obj.e.direction + obj.e.fieldName;\n    });\n    queries.groups.forEach(function (obj) {\n      key += obj.e.fieldName;\n    });\n    queries.searches.forEach(function (obj) {\n      key += obj.e.searchKey;\n    });\n    for (var filter = 0; filter < queries.filters.length; filter++) {\n      var currentFilter = queries.filters[filter];\n      if (currentFilter.e.isComplex) {\n        var newQuery = query.clone();\n        newQuery.queries = [];\n        for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n          newQuery.queries.push({\n            fn: 'onWhere',\n            e: currentFilter.e.predicates[i],\n            filter: query.queries.filter\n          });\n        }\n        key += currentFilter.e.condition + this.generateKey(url, newQuery);\n      } else {\n        key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n      }\n    }\n    return key;\n  };\n  /**\r\n   * Process the query to generate request body.\r\n   * If the data is already cached, it will return the cached data.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Query} query?\r\n   * @param {Object[]} hierarchyFilters?\r\n   * @param query\r\n   * @param hierarchyFilters\r\n   */\n  CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n    var key = this.generateKey(dm.dataSource.url, query);\n    var cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n    if (data != null && !this.isCrudAction && !this.isInsertAction) {\n      return data;\n    }\n    this.isCrudAction = null;\n    this.isInsertAction = null;\n    /* eslint-disable prefer-spread */\n    return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    /* eslint-enable prefer-spread */\n  };\n  /**\r\n   * Returns the data from the query processing.\r\n   * It will also cache the data for later usage.\r\n   *\r\n   * @param {DataResult} data\r\n   * @param {DataManager} ds?\r\n   * @param {Query} query?\r\n   * @param {Request} xhr?\r\n   * @param {Fetch} request?\r\n   * @param {CrudOptions} changes?\r\n   * @param ds\r\n   * @param query\r\n   * @param xhr\r\n   * @param request\r\n   * @param changes\r\n   */\n  CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n    if (this.isInsertAction || request && this.cacheAdaptor.options.batch && DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post') {\n      return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n    }\n    /* eslint-disable prefer-spread */\n    data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    /* eslint-enable prefer-spread */\n    var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n    var obj = {};\n    obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n    var index = obj.keys.indexOf(key);\n    if (index !== -1) {\n      obj.results.splice(index, 1);\n      obj.keys.splice(index, 1);\n    }\n    obj.results[obj.keys.push(key) - 1] = {\n      keys: key,\n      result: data.result,\n      timeStamp: new Date(),\n      count: data.count\n    };\n    while (obj.results.length > this.pageSize) {\n      obj.results.splice(0, 1);\n      obj.keys.splice(0, 1);\n    }\n    window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n    return data;\n  };\n  /**\r\n   * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Request} request\r\n   * @param {Fetch} settings?\r\n   * @param settings\r\n   */\n  CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n    if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n      request.headers.set('Accept', this.cacheAdaptor.options.multipartAccept);\n    }\n    if (!dm.dataSource.crossDomain) {\n      request.headers.set('Accept', this.cacheAdaptor.options.accept);\n    }\n  };\n  /**\r\n   * Updates existing record and saves the changes to the table.\r\n   *\r\n   * @param  {DataManager} dm\r\n   * @param  {string} keyField\r\n   * @param  {Object} value\r\n   * @param  {string} tableName\r\n   */\n  CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.update(dm, keyField, value, tableName);\n  };\n  /**\r\n   * Prepare and returns request body which is used to insert a new record in the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {Object} data\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   */\n  CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n    this.isInsertAction = true;\n    return this.cacheAdaptor.insert(dm, data, tableName);\n  };\n  /**\r\n   * Prepare and return request body which is used to remove record from the table.\r\n   *\r\n   * @param {DataManager} dm\r\n   * @param {string} keyField\r\n   * @param {Object} value\r\n   * @param {string} tableName?\r\n   * @param tableName\r\n   */\n  CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n    this.isCrudAction = true;\n    return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n  };\n  /**\r\n   * Prepare the request body based on the newly added, removed and updated records.\r\n   * The result is used by the batch request.\r\n   *\r\n   * @param  {DataManager} dm\r\n   * @param  {CrudOptions} changes\r\n   * @param  {RemoteArgs} e\r\n   */\n  CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n    return this.cacheAdaptor.batchRequest(dm, changes, e);\n  };\n  return CacheAdaptor;\n}(UrlAdaptor);\nexport { CacheAdaptor };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","merge","extend","isNullOrUndefined","setValue","getValue","DataUtil","Query","Predicate","consts","GroupGuid","Adaptor","ds","options","from","requestType","sortBy","select","skip","group","take","search","count","where","aggregates","expand","type","dataSource","pvt","processResponse","data","query","xhr","JsonAdaptor","_super","apply","arguments","processQuery","dataManager","result","json","slice","length","countFlg","ret","key","lazyLoad","keyCount","sort","page","i","value","agg","isGroupByFormat","queries","fn","e","format","push","unshift","call","field","undefined","args","lazyLoadData","lazyLoadGroup","isCountRequired","getAggregate","onDemandGroupInfo","req","onWhere","level","fieldName","comparer","onSortBy","parseInt","toString","formGroupResult","field_1","filter","x","onPage","uid","childLevel","records","aggQuery","filterQueries","tmp","batchRequest","dm","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","obj","validate","onAggregates","onSearch","fieldNames","getFieldList","j","getObject","searchKey","ignoreCase","ignoreAccent","isLazyLoadGroupSort","fnCompare","endsWith","fnSort","replace","onGroup","size","pageSize","start","pageIndex","end","onRange","onTake","nos","onSkip","onSelect","tableName","position","splice","keyField","Date","UrlAdaptor","hierarchyFilters","getQueryRequest","singles","filterQueryLists","params","url","temp","request","sorts","groups","filters","searches","callAdaptorFunction","name","direction","getFiltersFrom","toJson","res","getModuleName","keys_3","keys","_i","keys_1","prop","isNull","fields","operator","getRequestQuery","reqParams","_a","keys_2","JSON","stringify","parse","jsonDateReplacer","pvtData","contentType","convertToQueryString","indexOf","request1","param","fromTable","distincts","selects","expands","headers","get","handleTimeZone","timeZoneHandling","parseJson","requests","groupDs","action","isExpand","isArray","val","formRemoteGroupedData","getAggregateResult","items","childLvl","lvl","getGroupedRecords","hasRecords","childGroupedRecords","concat","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","getAddParams","beforeSend","insertUrl","keyColumn","updateUrl","fKey","pKey","predicats","or","pData","aggregateData","aggregate","isServerGrouping","groupQuery","addParams","Error","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","predicate","requiresCast","returnValue","guid","getField","replacer","toLowerCase","encodeURIComponent","isGuid","odBiOperator","odv4UniOperator","odUniOperator","charAt","lastIndexOf","substring","splittedStringValue","split","splittedValue","join","onComplexPredicate","predicates","onEachWhere","condition","isComplex","onEachSearch","throwError","onEachSort","reverse","onCount","settings","set","metaCheck","rootUrl","dataUrls","resourceTableName","dataCopy","results","metaData","emptyAndBatch","processBatchResponse","versionCheck","fetchRequest","version","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","dateParse","toLocalTime","localTime","compareAndRemove","initialGuid","getGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","arr","stat","dateTime","toJSON","generateBodyContent","org","forEach","change","o","date","method","cIdx","jsonObj","exVal","exec","changeGuid","test","isPlainObject","final","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","splits","sel","exp","close_1","combineVal","expandQueryIndex","idx","ex","onDistinct","distinctFields","map","metaName","metaV4Name","dataUrl","dataCount","dataV4Count","WebApiAdaptor","_loop_1","location","host","_loop_2","_loop_3","state","datTime","Count","Items","WebMethodAdaptor","getData","RemoteSaveAdaptor","updateKey","newData","urlParams","CustomDataAdaptor","Function","addRecord","updateRecord","deleteRecord","batchUpdate","GraphQLAdaptor","opt","schema","response","getVariables","getQuery","datamanager","urlQuery","str","vars","variables","resData","inserted","generateCrudData","bData","crudData","parsed","getMutation","CacheAdaptor","adaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","window","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","clone","cachedItems","index","crossDomain"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-data/src/adaptors.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\r\nimport { DataUtil } from './util';\r\nimport { Query, Predicate } from './query';\r\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\r\n/**\r\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\r\n * This is the base adaptor class that other adaptors can extend.\r\n *\r\n * @hidden\r\n */\r\nvar Adaptor = /** @class */ (function () {\r\n    /**\r\n     * Constructor for Adaptor class\r\n     *\r\n     * @param {DataOptions} ds?\r\n     * @param ds\r\n     * @hidden\r\n     * @returns aggregates\r\n     */\r\n    function Adaptor(ds) {\r\n        // common options for all the adaptors\r\n        this.options = {\r\n            from: 'table',\r\n            requestType: 'json',\r\n            sortBy: 'sorted',\r\n            select: 'select',\r\n            skip: 'skip',\r\n            group: 'group',\r\n            take: 'take',\r\n            search: 'search',\r\n            count: 'requiresCounts',\r\n            where: 'where',\r\n            aggregates: 'aggregates',\r\n            expand: 'expand'\r\n        };\r\n        /**\r\n         * Specifies the type of adaptor.\r\n         *\r\n         * @default Adaptor\r\n         */\r\n        this.type = Adaptor;\r\n        this.dataSource = ds;\r\n        this.pvt = {};\r\n    }\r\n    /**\r\n     * Returns the data from the query processing.\r\n     *\r\n     * @param {Object} data\r\n     * @param {DataOptions} ds?\r\n     * @param {Query} query?\r\n     * @param {Request} xhr?\r\n     * @param ds\r\n     * @param query\r\n     * @param xhr\r\n     * @returns Object\r\n     */\r\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\r\n        return data;\r\n    };\r\n    return Adaptor;\r\n}());\r\nexport { Adaptor };\r\n/**\r\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\r\n *\r\n * @hidden\r\n */\r\nvar JsonAdaptor = /** @class */ (function (_super) {\r\n    __extends(JsonAdaptor, _super);\r\n    function JsonAdaptor() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Process the JSON data based on the provided queries.\r\n     *\r\n     * @param  {DataManager} dataManager\r\n     * @param  {Query} query\r\n     * @returns Object\r\n     */\r\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\r\n        var result = dataManager.dataSource.json.slice(0);\r\n        var count = result.length;\r\n        var countFlg = true;\r\n        var ret;\r\n        var key;\r\n        var lazyLoad = {};\r\n        var keyCount = 0;\r\n        var group = [];\r\n        var sort = [];\r\n        var page;\r\n        for (var i = 0; i < query.lazyLoad.length; i++) {\r\n            keyCount++;\r\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\r\n        }\r\n        var agg = {};\r\n        var isGroupByFormat = false;\r\n        if (query.lazyLoad.length) {\r\n            for (var i = 0; i < query.queries.length; i++) {\r\n                key = query.queries[i];\r\n                if (key.fn === 'onGroup' && !isNullOrUndefined(key.e.format)) {\r\n                    isGroupByFormat = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (var i = 0; i < query.queries.length; i++) {\r\n            key = query.queries[i];\r\n            if ((key.fn === 'onPage' || key.fn === 'onGroup' || (key.fn === 'onSortBy' && !isGroupByFormat)) && query.lazyLoad.length) {\r\n                if (key.fn === 'onGroup') {\r\n                    group.push(key.e);\r\n                }\r\n                if (key.fn === 'onPage') {\r\n                    page = key.e;\r\n                }\r\n                if (key.fn === 'onSortBy') {\r\n                    sort.unshift(key.e);\r\n                }\r\n                continue;\r\n            }\r\n            ret = this[key.fn].call(this, result, key.e, query);\r\n            if (key.fn === 'onAggregates') {\r\n                agg[key.e.field + ' - ' + key.e.type] = ret;\r\n            }\r\n            else {\r\n                result = ret !== undefined ? ret : result;\r\n            }\r\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\r\n                countFlg = false;\r\n            }\r\n            if (countFlg) {\r\n                count = result.length;\r\n            }\r\n        }\r\n        if (keyCount) {\r\n            var args = {\r\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page, sort: sort\r\n            };\r\n            var lazyLoadData = this.lazyLoadGroup(args);\r\n            result = lazyLoadData.result;\r\n            count = lazyLoadData.count;\r\n        }\r\n        if (query.isCountRequired) {\r\n            result = {\r\n                result: result,\r\n                count: count,\r\n                aggregates: agg\r\n            };\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\r\n     *\r\n     * @param  {LazyLoadGroupArgs} args\r\n     */\r\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\r\n        var count = 0;\r\n        var agg = this.getAggregate(args.query);\r\n        var result = args.result;\r\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\r\n            var req = args.lazyLoad.onDemandGroupInfo;\r\n            for (var i = req.where.length - 1; i >= 0; i--) {\r\n                result = this.onWhere(result, req.where[i]);\r\n            }\r\n            if (args.group.length !== req.level) {\r\n                var field = args.group[req.level].fieldName;\r\n                result = DataUtil.group(result, field, agg, null, null, args.group[req.level].comparer, true);\r\n                if (args.sort.length) {\r\n                    result = this.onSortBy(result, args.sort[parseInt(req.level.toString(), 10)], args.query, true);\r\n                }\r\n            }\r\n            else {\r\n                for (var i = args.sort.length - 1; i >= req.level; i--) {\r\n                    result = this.onSortBy(result, args.sort[parseInt(i.toString(), 10)], args.query, false);\r\n                }\r\n            }\r\n            count = result.length;\r\n            var data = result;\r\n            result = result.slice(req.skip);\r\n            result = result.slice(0, req.take);\r\n            if (args.group.length !== req.level) {\r\n                this.formGroupResult(result, data);\r\n            }\r\n        }\r\n        else {\r\n            var field_1 = args.group[0].fieldName;\r\n            result = DataUtil.group(result, field_1, agg, null, null, args.group[0].comparer, true);\r\n            count = result.length;\r\n            var data = result;\r\n            if (args.sort.length) {\r\n                var sort = args.sort.length > 1 ?\r\n                    args.sort.filter(function (x) { return x.fieldName === field_1; })[0] : args.sort[0];\r\n                result = this.onSortBy(result, sort, args.query, true);\r\n            }\r\n            if (args.page) {\r\n                result = this.onPage(result, args.page, args.query);\r\n            }\r\n            this.formGroupResult(result, data);\r\n        }\r\n        return { result: result, count: count };\r\n    };\r\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\r\n        if (result.length && data.length) {\r\n            var uid = 'GroupGuid';\r\n            var childLevel = 'childLevels';\r\n            var level = 'level';\r\n            var records = 'records';\r\n            result[uid] = data[uid];\r\n            result[childLevel] = data[childLevel];\r\n            result[level] = data[level];\r\n            result[records] = data[records];\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Separate the aggregate query from the given queries\r\n     *\r\n     * @param  {Query} query\r\n     */\r\n    JsonAdaptor.prototype.getAggregate = function (query) {\r\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\r\n        var agg = [];\r\n        if (aggQuery.length) {\r\n            var tmp = void 0;\r\n            for (var i = 0; i < aggQuery.length; i++) {\r\n                tmp = aggQuery[i].e;\r\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\r\n            }\r\n        }\r\n        return agg;\r\n    };\r\n    /**\r\n     * Performs batch update in the JSON array which add, remove and update records.\r\n     *\r\n     * @param  {DataManager} dm\r\n     * @param  {CrudOptions} changes\r\n     * @param  {RemoteArgs} e\r\n     */\r\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\r\n        var i;\r\n        var deletedRecordsLen = changes.deletedRecords.length;\r\n        for (i = 0; i < changes.addedRecords.length; i++) {\r\n            this.insert(dm, changes.addedRecords[i]);\r\n        }\r\n        for (i = 0; i < changes.changedRecords.length; i++) {\r\n            this.update(dm, e.key, changes.changedRecords[i]);\r\n        }\r\n        for (i = 0; i < deletedRecordsLen; i++) {\r\n            this.remove(dm, e.key, changes.deletedRecords[i]);\r\n        }\r\n        return changes;\r\n    };\r\n    /**\r\n     * Performs filter operation with the given data and where query.\r\n     *\r\n     * @param {Object[]} ds\r\n     * @param {{validate:Function}} e\r\n     * @param e.validate\r\n     */\r\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        return ds.filter(function (obj) {\r\n            if (e) {\r\n                return e.validate(obj);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns aggregate function based on the aggregate type.\r\n     *\r\n     * @param {Object[]} ds\r\n     * @param e\r\n     * @param {string} } type\r\n     * @param e.field\r\n     * @param e.type\r\n     */\r\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\r\n        var fn = DataUtil.aggregates[e.type];\r\n        if (!ds || !fn || ds.length === 0) {\r\n            return null;\r\n        }\r\n        return fn(ds, e.field);\r\n    };\r\n    /**\r\n     * Performs search operation based on the given query.\r\n     *\r\n     * @param  {Object[]} ds\r\n     * @param  {QueryOptions} e\r\n     */\r\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        if (e.fieldNames.length === 0) {\r\n            DataUtil.getFieldList(ds[0], e.fieldNames);\r\n        }\r\n        return ds.filter(function (obj) {\r\n            for (var j = 0; j < e.fieldNames.length; j++) {\r\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n    /**\r\n     * Sort the data with given direction and field.\r\n     *\r\n     * @param {Object[]} ds\r\n     * @param e\r\n     * @param {Object} b\r\n     * @param e.comparer\r\n     * @param e.fieldName\r\n     * @param query\r\n     * @param isLazyLoadGroupSort\r\n     */\r\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query, isLazyLoadGroupSort) {\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        var fnCompare;\r\n        var field = DataUtil.getValue(e.fieldName, query);\r\n        if (!field) {\r\n            return ds.sort(e.comparer);\r\n        }\r\n        if (field instanceof Array) {\r\n            field = field.slice(0);\r\n            for (var i = field.length - 1; i >= 0; i--) {\r\n                if (!field[i]) {\r\n                    continue;\r\n                }\r\n                fnCompare = e.comparer;\r\n                if (DataUtil.endsWith(field[i], ' desc')) {\r\n                    fnCompare = DataUtil.fnSort('descending');\r\n                    field[i] = field[i].replace(' desc', '');\r\n                }\r\n                ds = DataUtil.sort(ds, field[i], fnCompare);\r\n            }\r\n            return ds;\r\n        }\r\n        return DataUtil.sort(ds, isLazyLoadGroupSort ? 'key' : field, e.comparer);\r\n    };\r\n    /**\r\n     * Group the data based on the given query.\r\n     *\r\n     * @param  {Object[]} ds\r\n     * @param  {QueryOptions} e\r\n     * @param  {Query} query\r\n     */\r\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        var agg = this.getAggregate(query);\r\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\r\n    };\r\n    /**\r\n     * Retrieves records based on the given page index and size.\r\n     *\r\n     * @param {Object[]} ds\r\n     * @param e\r\n     * @param {number} } pageIndex\r\n     * @param e.pageSize\r\n     * @param {Query} query\r\n     * @param e.pageIndex\r\n     */\r\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\r\n        var size = DataUtil.getValue(e.pageSize, query);\r\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\r\n        var end = start + size;\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        return ds.slice(start, end);\r\n    };\r\n    /**\r\n     * Retrieves records based on the given start and end index from query.\r\n     *\r\n     * @param {Object[]} ds\r\n     * @param e\r\n     * @param {number} } end\r\n     * @param e.start\r\n     * @param e.end\r\n     */\r\n    JsonAdaptor.prototype.onRange = function (ds, e) {\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\r\n    };\r\n    /**\r\n     * Picks the given count of records from the top of the datasource.\r\n     *\r\n     * @param {Object[]} ds\r\n     * @param {{nos:number}} e\r\n     * @param e.nos\r\n     */\r\n    JsonAdaptor.prototype.onTake = function (ds, e) {\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        return ds.slice(0, DataUtil.getValue(e.nos));\r\n    };\r\n    /**\r\n     * Skips the given count of records from the data source.\r\n     *\r\n     * @param {Object[]} ds\r\n     * @param {{nos:number}} e\r\n     * @param e.nos\r\n     */\r\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        return ds.slice(DataUtil.getValue(e.nos));\r\n    };\r\n    /**\r\n     * Selects specified columns from the data source.\r\n     *\r\n     * @param {Object[]} ds\r\n     * @param {{fieldNames:string}} e\r\n     * @param e.fieldNames\r\n     */\r\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\r\n        if (!ds || !ds.length) {\r\n            return ds;\r\n        }\r\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\r\n    };\r\n    /**\r\n     * Inserts new record in the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Object} data\r\n     * @param tableName\r\n     * @param query\r\n     * @param {number} position\r\n     */\r\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\r\n        if (isNullOrUndefined(position)) {\r\n            return dm.dataSource.json.push(data);\r\n        }\r\n        else {\r\n            return dm.dataSource.json.splice(position, 0, data);\r\n        }\r\n    };\r\n    /**\r\n     * Remove the data from the dataSource based on the key field value.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {Object} value\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     * @returns null\r\n     */\r\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\r\n        var ds = dm.dataSource.json;\r\n        var i;\r\n        if (typeof value === 'object' && !(value instanceof Date)) {\r\n            value = DataUtil.getObject(keyField, value);\r\n        }\r\n        for (i = 0; i < ds.length; i++) {\r\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\r\n                break;\r\n            }\r\n        }\r\n        return i !== ds.length ? ds.splice(i, 1) : null;\r\n    };\r\n    /**\r\n     * Updates existing record and saves the changes to the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {Object} value\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     * @returns null\r\n     */\r\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\r\n        var ds = dm.dataSource.json;\r\n        var i;\r\n        var key;\r\n        if (!isNullOrUndefined(keyField)) {\r\n            key = getValue(keyField, value);\r\n        }\r\n        for (i = 0; i < ds.length; i++) {\r\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\r\n                break;\r\n            }\r\n        }\r\n        return i < ds.length ? merge(ds[i], value) : null;\r\n    };\r\n    return JsonAdaptor;\r\n}(Adaptor));\r\nexport { JsonAdaptor };\r\n/**\r\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\r\n * It interacts with server-side for all DataManager Queries and CRUD operations.\r\n *\r\n * @hidden\r\n */\r\nvar UrlAdaptor = /** @class */ (function (_super) {\r\n    __extends(UrlAdaptor, _super);\r\n    function UrlAdaptor() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Process the query to generate request body.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Query} query\r\n     * @param {Object[]} hierarchyFilters?\r\n     * @param hierarchyFilters\r\n     * @returns p\r\n     */\r\n    // tslint:disable-next-line:max-func-body-length\r\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\r\n        var queries = this.getQueryRequest(query);\r\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\r\n        var params = query.params;\r\n        var url = dm.dataSource.url;\r\n        var temp;\r\n        var skip;\r\n        var take = null;\r\n        var options = this.options;\r\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\r\n        // calc Paging & Range\r\n        if ('onPage' in singles) {\r\n            temp = singles.onPage;\r\n            skip = DataUtil.getValue(temp.pageIndex, query);\r\n            take = DataUtil.getValue(temp.pageSize, query);\r\n            skip = (skip - 1) * take;\r\n        }\r\n        else if ('onRange' in singles) {\r\n            temp = singles.onRange;\r\n            skip = temp.start;\r\n            take = temp.end - temp.start;\r\n        }\r\n        // Sorting\r\n        for (var i = 0; i < queries.sorts.length; i++) {\r\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\r\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\r\n        }\r\n        // hierarchy\r\n        if (hierarchyFilters) {\r\n            temp = this.getFiltersFrom(hierarchyFilters, query);\r\n            if (temp) {\r\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\r\n            }\r\n        }\r\n        // Filters\r\n        for (var i = 0; i < queries.filters.length; i++) {\r\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\r\n            if ((this.getModuleName &&\r\n                this.getModuleName() === 'ODataV4Adaptor') &&\r\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\r\n                res = '(' + res + ')';\r\n            }\r\n            request.filters.push(res);\r\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\r\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\r\n                var prop = keys_1[_i];\r\n                if (DataUtil.isNull((request)[prop])) {\r\n                    delete request[prop];\r\n                }\r\n            }\r\n        }\r\n        // Searches\r\n        for (var i = 0; i < queries.searches.length; i++) {\r\n            temp = queries.searches[i].e;\r\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\r\n                fields: temp.fieldNames,\r\n                operator: temp.operator,\r\n                key: temp.searchKey,\r\n                ignoreCase: temp.ignoreCase\r\n            }, query));\r\n        }\r\n        // Grouping\r\n        for (var i = 0; i < queries.groups.length; i++) {\r\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\r\n        }\r\n        // aggregates\r\n        for (var i = 0; i < queries.aggregates.length; i++) {\r\n            temp = queries.aggregates[i].e;\r\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\r\n        }\r\n        var req = {};\r\n        this.getRequestQuery(options, query, singles, request, req);\r\n        // Params\r\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\r\n        if (query.lazyLoad.length) {\r\n            for (var i = 0; i < query.lazyLoad.length; i++) {\r\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\r\n            }\r\n        }\r\n        // cleanup\r\n        var keys = Object.keys(req);\r\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\r\n            var prop = keys_2[_a];\r\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\r\n                delete req[prop];\r\n            }\r\n        }\r\n        if (!(options.skip in req && options.take in req) && take !== null) {\r\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\r\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\r\n        }\r\n        var p = this.pvt;\r\n        this.pvt = {};\r\n        if (this.options.requestType === 'json') {\r\n            return {\r\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\r\n                url: url,\r\n                pvtData: p,\r\n                type: 'POST',\r\n                contentType: 'application/json; charset=utf-8'\r\n            };\r\n        }\r\n        temp = this.convertToQueryString(req, query, dm);\r\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\r\n        return {\r\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\r\n        };\r\n    };\r\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\r\n        var param = 'param';\r\n        var req = request1;\r\n        req[options.from] = query.fromTable;\r\n        if (options.apply && query.distincts.length) {\r\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\r\n        }\r\n        if (!query.distincts.length && options.expand) {\r\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\r\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\r\n        }\r\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\r\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\r\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\r\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\r\n        req[options.skip] = 'onSkip' in singles ?\r\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\r\n        req[options.take] = 'onTake' in singles ?\r\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\r\n        req[options.where] = request.filters.length || request.searches.length ?\r\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\r\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\r\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\r\n        req[options.aggregates] = request.aggregates.length ?\r\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\r\n        req[param] = [];\r\n    };\r\n    /**\r\n     * Convert the object from processQuery to string which can be added query string.\r\n     *\r\n     * @param {Object} req\r\n     * @param request\r\n     * @param {Query} query\r\n     * @param {DataManager} dm\r\n     */\r\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\r\n        return '';\r\n        // this needs to be overridden\r\n    };\r\n    /**\r\n     * Return the data from the data manager processing.\r\n     *\r\n     * @param {DataResult} data\r\n     * @param {DataOptions} ds?\r\n     * @param {Query} query?\r\n     * @param {Request} xhr?\r\n     * @param {Object} request?\r\n     * @param {CrudOptions} changes?\r\n     * @param ds\r\n     * @param query\r\n     * @param xhr\r\n     * @param request\r\n     * @param changes\r\n     */\r\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\r\n        if (xhr && xhr.headers.get('Content-Type') &&\r\n            xhr.headers.get('Content-Type').indexOf('application/json') !== -1) {\r\n            var handleTimeZone = DataUtil.timeZoneHandling;\r\n            if (ds && !ds.timeZoneHandling) {\r\n                DataUtil.timeZoneHandling = false;\r\n            }\r\n            data = DataUtil.parse.parseJson(data);\r\n            DataUtil.timeZoneHandling = handleTimeZone;\r\n        }\r\n        var requests = request;\r\n        var pvt = requests.pvtData || {};\r\n        var groupDs = data ? data.groupDs : [];\r\n        if (xhr && xhr.headers.get('Content-Type') &&\r\n            xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\r\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\r\n        }\r\n        var d = JSON.parse(requests.data);\r\n        if (d && d.action === 'batch' && data && data.addedRecords) {\r\n            changes.addedRecords = data.addedRecords;\r\n            return changes;\r\n        }\r\n        if (data && data.d) {\r\n            data = data.d;\r\n        }\r\n        var args = {};\r\n        if (data && 'count' in data) {\r\n            args.count = data.count;\r\n        }\r\n        args.result = data && data.result ? data.result : data;\r\n        var isExpand = false;\r\n        if (Array.isArray(data.result) && data.result.length) {\r\n            var key = 'key';\r\n            var val = 'value';\r\n            var level = 'level';\r\n            if (!isNullOrUndefined(data.result[0][key])) {\r\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\r\n            }\r\n            if (query && query.lazyLoad.length && pvt.groups.length) {\r\n                for (var i = 0; i < query.lazyLoad.length; i++) {\r\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\r\n                        var value = query.lazyLoad[i][val][level];\r\n                        if (pvt.groups.length === value) {\r\n                            isExpand = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!isExpand) {\r\n            this.getAggregateResult(pvt, data, args, groupDs, query);\r\n        }\r\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\r\n    };\r\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\r\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\r\n            }\r\n        }\r\n        var uid = 'GroupGuid';\r\n        var childLvl = 'childLevels';\r\n        var lvl = 'level';\r\n        var records = 'records';\r\n        data[uid] = consts[uid];\r\n        data[lvl] = level;\r\n        data[childLvl] = childLevel;\r\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\r\n        return data;\r\n    };\r\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\r\n        var childGroupedRecords = [];\r\n        var records = 'records';\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (!hasRecords) {\r\n                for (var j = 0; j < data[i].items.length; j++) {\r\n                    childGroupedRecords.push(data[i].items[j]);\r\n                }\r\n            }\r\n            else {\r\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\r\n            }\r\n        }\r\n        return childGroupedRecords;\r\n    };\r\n    /**\r\n     * Add the group query to the adaptor`s option.\r\n     *\r\n     * @param  {Object[]} e\r\n     * @returns void\r\n     */\r\n    UrlAdaptor.prototype.onGroup = function (e) {\r\n        this.pvt.groups = e;\r\n        return e;\r\n    };\r\n    /**\r\n     * Add the aggregate query to the adaptor`s option.\r\n     *\r\n     * @param  {Aggregates[]} e\r\n     * @returns void\r\n     */\r\n    UrlAdaptor.prototype.onAggregates = function (e) {\r\n        this.pvt.aggregates = e;\r\n    };\r\n    /**\r\n     * Prepare the request body based on the newly added, removed and updated records.\r\n     * The result is used by the batch request.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {CrudOptions} changes\r\n     * @param {Object} e\r\n     * @param query\r\n     * @param original\r\n     */\r\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\r\n        var url;\r\n        var key;\r\n        return {\r\n            type: 'POST',\r\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\r\n            contentType: 'application/json; charset=utf-8',\r\n            dataType: 'json',\r\n            data: JSON.stringify(extend({}, {\r\n                changed: changes.changedRecords,\r\n                added: changes.addedRecords,\r\n                deleted: changes.deletedRecords,\r\n                action: 'batch',\r\n                table: e[url],\r\n                key: e[key]\r\n            }, DataUtil.getAddParams(this, dm, query)))\r\n        };\r\n    };\r\n    /**\r\n     * Method will trigger before send the request to server side.\r\n     * Used to set the custom header or modify the request options.\r\n     *\r\n     * @param  {DataManager} dm\r\n     * @param  {Request} request\r\n     * @returns void\r\n     */\r\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\r\n        // need to extend this method\r\n    };\r\n    /**\r\n     * Prepare and returns request body which is used to insert a new record in the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Object} data\r\n     * @param {string} tableName\r\n     * @param query\r\n     */\r\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\r\n        return {\r\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\r\n            data: JSON.stringify(extend({}, {\r\n                value: data,\r\n                table: tableName,\r\n                action: 'insert'\r\n            }, DataUtil.getAddParams(this, dm, query)))\r\n        };\r\n    };\r\n    /**\r\n     * Prepare and return request body which is used to remove record from the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {number|string} value\r\n     * @param {string} tableName\r\n     * @param query\r\n     */\r\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\r\n        return {\r\n            type: 'POST',\r\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\r\n            data: JSON.stringify(extend({}, {\r\n                key: value,\r\n                keyColumn: keyField,\r\n                table: tableName,\r\n                action: 'remove'\r\n            }, DataUtil.getAddParams(this, dm, query)))\r\n        };\r\n    };\r\n    /**\r\n     * Prepare and return request body which is used to update record.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {Object} value\r\n     * @param {string} tableName\r\n     * @param query\r\n     */\r\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\r\n        return {\r\n            type: 'POST',\r\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\r\n            data: JSON.stringify(extend({}, {\r\n                value: value,\r\n                action: 'update',\r\n                keyColumn: keyField,\r\n                key: DataUtil.getObject(keyField, value),\r\n                table: tableName\r\n            }, DataUtil.getAddParams(this, dm, query)))\r\n        };\r\n    };\r\n    /**\r\n     * To generate the predicate based on the filtered query.\r\n     *\r\n     * @param  {Object[]|string[]|number[]} data\r\n     * @param  {Query} query\r\n     * @hidden\r\n     */\r\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\r\n        var key = query.fKey;\r\n        var value;\r\n        var prop = key;\r\n        var pKey = query.key;\r\n        var predicats = [];\r\n        if (typeof data[0] !== 'object') {\r\n            prop = null;\r\n        }\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (typeof data[0] === 'object') {\r\n                value = DataUtil.getObject(pKey || prop, data[i]);\r\n            }\r\n            else {\r\n                value = data[i];\r\n            }\r\n            predicats.push(new Predicate(key, 'equal', value));\r\n        }\r\n        return Predicate.or(predicats);\r\n    };\r\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\r\n        var pData = data;\r\n        if (data && data.result) {\r\n            pData = data.result;\r\n        }\r\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\r\n            var agg = pvt.aggregates;\r\n            var fn = void 0;\r\n            var aggregateData = pData;\r\n            var res = {};\r\n            if (data.aggregate) {\r\n                aggregateData = data.aggregate;\r\n            }\r\n            for (var i = 0; i < agg.length; i++) {\r\n                fn = DataUtil.aggregates[agg[i].type];\r\n                if (fn) {\r\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\r\n                }\r\n            }\r\n            args.aggregates = res;\r\n        }\r\n        var key = 'key';\r\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\r\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\r\n            var groups = pvt.groups;\r\n            for (var i = 0; i < groups.length; i++) {\r\n                var level = null;\r\n                if (!isNullOrUndefined(groupDs)) {\r\n                    groupDs = DataUtil.group(groupDs, groups[i]);\r\n                }\r\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\r\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\r\n            }\r\n            args.result = pData;\r\n        }\r\n        return args;\r\n    };\r\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\r\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\r\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\r\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\r\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\r\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\r\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\r\n        return req;\r\n    };\r\n    UrlAdaptor.prototype.addParams = function (options) {\r\n        var req = options.reqParams;\r\n        if (options.params.length) {\r\n            req.params = {};\r\n        }\r\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\r\n            var tmp = _a[_i];\r\n            if (req[tmp.key]) {\r\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\r\n            }\r\n            req[tmp.key] = tmp.value;\r\n            if (tmp.fn) {\r\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\r\n            }\r\n            req.params[tmp.key] = req[tmp.key];\r\n        }\r\n    };\r\n    return UrlAdaptor;\r\n}(Adaptor));\r\nexport { UrlAdaptor };\r\n/**\r\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\r\n *\r\n * @hidden\r\n */\r\nvar ODataAdaptor = /** @class */ (function (_super) {\r\n    __extends(ODataAdaptor, _super);\r\n    function ODataAdaptor(props) {\r\n        var _this = _super.call(this) || this;\r\n        // options replaced the default adaptor options\r\n        _this.options = extend({}, _this.options, {\r\n            requestType: 'get',\r\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\r\n            multipartAccept: 'multipart/mixed',\r\n            sortBy: '$orderby',\r\n            select: '$select',\r\n            skip: '$skip',\r\n            take: '$top',\r\n            count: '$inlinecount',\r\n            where: '$filter',\r\n            expand: '$expand',\r\n            batch: '$batch',\r\n            changeSet: '--changeset_',\r\n            batchPre: 'batch_',\r\n            contentId: 'Content-Id: ',\r\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\r\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\r\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\r\n            updateType: 'PUT'\r\n        });\r\n        extend(_this.options, props || {});\r\n        return _this;\r\n    }\r\n    ODataAdaptor.prototype.getModuleName = function () {\r\n        return 'ODataAdaptor';\r\n    };\r\n    /**\r\n     * Generate request string based on the filter criteria from query.\r\n     *\r\n     * @param {Predicate} pred\r\n     * @param {boolean} requiresCast?\r\n     * @param predicate\r\n     * @param query\r\n     * @param requiresCast\r\n     */\r\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\r\n        var returnValue = '';\r\n        var operator;\r\n        var guid;\r\n        var val = predicate.value;\r\n        var type = typeof val;\r\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\r\n        if (val instanceof Date) {\r\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\r\n        }\r\n        if (type === 'string') {\r\n            val = val.replace(/'/g, '\\'\\'');\r\n            if (predicate.ignoreCase) {\r\n                val = val.toLowerCase();\r\n            }\r\n            if (predicate.operator !== 'like') {\r\n                val = encodeURIComponent(val);\r\n            }\r\n            if (predicate.operator !== 'wildcard' && predicate.operator !== 'like') {\r\n                val = '\\'' + val + '\\'';\r\n            }\r\n            if (requiresCast) {\r\n                field = 'cast(' + field + ', \\'Edm.String\\')';\r\n            }\r\n            if (DataUtil.parse.isGuid(val)) {\r\n                guid = 'guid';\r\n            }\r\n            if (predicate.ignoreCase) {\r\n                if (!guid) {\r\n                    field = 'tolower(' + field + ')';\r\n                }\r\n                val = val.toLowerCase();\r\n            }\r\n        }\r\n        if (predicate.operator === 'isempty' || predicate.operator === 'isnull' || predicate.operator === 'isnotempty' ||\r\n            predicate.operator === 'isnotnull') {\r\n            operator = predicate.operator.indexOf('isnot') !== -1 ? DataUtil.odBiOperator['notequal'] : DataUtil.odBiOperator['equal'];\r\n            val = predicate.operator === 'isnull' || predicate.operator === 'isnotnull' ? null : '\\'\\'';\r\n        }\r\n        else {\r\n            operator = DataUtil.odBiOperator[predicate.operator];\r\n        }\r\n        if (operator) {\r\n            returnValue += field;\r\n            returnValue += operator;\r\n            if (guid) {\r\n                returnValue += guid;\r\n            }\r\n            return returnValue + val;\r\n        }\r\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\r\n            operator = DataUtil.odv4UniOperator[predicate.operator];\r\n        }\r\n        else {\r\n            operator = DataUtil.odUniOperator[predicate.operator];\r\n        }\r\n        if (operator === 'like') {\r\n            val = val;\r\n            if (val.indexOf('%') !== -1) {\r\n                if (val.charAt(0) === '%' && val.lastIndexOf('%') < 2) {\r\n                    val = val.substring(1, val.length);\r\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                        DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\r\n                }\r\n                else if (val.charAt(val.length - 1) === '%' && val.indexOf('%') > val.length - 3) {\r\n                    val = val.substring(0, val.length - 1);\r\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                        DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\r\n                }\r\n                else if (val.lastIndexOf('%') !== val.indexOf('%') && val.lastIndexOf('%') > val.indexOf('%') + 1) {\r\n                    val = val.substring(val.indexOf('%') + 1, val.lastIndexOf('%'));\r\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\r\n                }\r\n                else {\r\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\r\n                }\r\n            }\r\n            val = encodeURIComponent(val);\r\n            val = '\\'' + val + '\\'';\r\n        }\r\n        else if (operator === 'wildcard') {\r\n            val = val;\r\n            if (val.indexOf('*') !== -1) {\r\n                var splittedStringValue = val.split('*');\r\n                var splittedValue = void 0;\r\n                var count = 0;\r\n                if (val.indexOf('*') !== 0 && splittedStringValue[0].indexOf('%3f') === -1 &&\r\n                    splittedStringValue[0].indexOf('?') === -1) {\r\n                    splittedValue = splittedStringValue[0];\r\n                    splittedValue = '\\'' + splittedValue + '\\'';\r\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                        DataUtil.odv4UniOperator['startswith'] : DataUtil.odUniOperator['startswith'];\r\n                    returnValue += operator + '(';\r\n                    returnValue += field + ',';\r\n                    if (guid) {\r\n                        returnValue += guid;\r\n                    }\r\n                    returnValue += splittedValue + ')';\r\n                    count++;\r\n                }\r\n                if (val.lastIndexOf('*') !== val.length - 1 && splittedStringValue[splittedStringValue.length - 1].indexOf('%3f') === -1 &&\r\n                    splittedStringValue[splittedStringValue.length - 1].indexOf('?') === -1) {\r\n                    splittedValue = splittedStringValue[splittedStringValue.length - 1];\r\n                    splittedValue = '\\'' + splittedValue + '\\'';\r\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                        DataUtil.odv4UniOperator['endswith'] : DataUtil.odUniOperator['endswith'];\r\n                    if (count > 0) {\r\n                        returnValue += ' and ';\r\n                    }\r\n                    returnValue += operator + '(';\r\n                    returnValue += field + ',';\r\n                    if (guid) {\r\n                        returnValue += guid;\r\n                    }\r\n                    returnValue += splittedValue + ')';\r\n                    count++;\r\n                }\r\n                if (splittedStringValue.length > 2) {\r\n                    for (var i = 1; i < splittedStringValue.length - 1; i++) {\r\n                        if (splittedStringValue[i].indexOf('%3f') === -1 && splittedStringValue[i].indexOf('?') === -1) {\r\n                            splittedValue = splittedStringValue[i];\r\n                            splittedValue = '\\'' + splittedValue + '\\'';\r\n                            operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                                DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\r\n                            if (count > 0) {\r\n                                returnValue += ' and ';\r\n                            }\r\n                            if (operator === 'substringof' || operator === 'not substringof') {\r\n                                var temp = splittedValue;\r\n                                splittedValue = field;\r\n                                field = temp;\r\n                            }\r\n                            returnValue += operator + '(';\r\n                            returnValue += field + ',';\r\n                            if (guid) {\r\n                                returnValue += guid;\r\n                            }\r\n                            returnValue += splittedValue + ')';\r\n                            count++;\r\n                        }\r\n                    }\r\n                }\r\n                if (count === 0) {\r\n                    operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                        DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\r\n                    if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\r\n                        val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\r\n                    }\r\n                    val = '\\'' + val + '\\'';\r\n                }\r\n                else {\r\n                    operator = 'wildcard';\r\n                }\r\n            }\r\n            else {\r\n                operator = !isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor' ?\r\n                    DataUtil.odv4UniOperator['contains'] : DataUtil.odUniOperator['contains'];\r\n                if (val.indexOf('?') !== -1 || val.indexOf('%3f') !== -1) {\r\n                    val = val.indexOf('?') !== -1 ? val.split('?').join('') : val.split('%3f').join('');\r\n                }\r\n                val = '\\'' + val + '\\'';\r\n            }\r\n        }\r\n        if (operator === 'substringof' || operator === 'not substringof') {\r\n            var temp = val;\r\n            val = field;\r\n            field = temp;\r\n        }\r\n        if (operator !== 'wildcard') {\r\n            returnValue += operator + '(';\r\n            returnValue += field + ',';\r\n            if (guid) {\r\n                returnValue += guid;\r\n            }\r\n            returnValue += val + ')';\r\n        }\r\n        return returnValue;\r\n    };\r\n    ODataAdaptor.prototype.addParams = function (options) {\r\n        _super.prototype.addParams.call(this, options);\r\n        delete options.reqParams.params;\r\n    };\r\n    /**\r\n     * Generate request string based on the multiple filter criteria from query.\r\n     *\r\n     * @param {Predicate} pred\r\n     * @param {boolean} requiresCast?\r\n     * @param predicate\r\n     * @param query\r\n     * @param requiresCast\r\n     */\r\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\r\n        var res = [];\r\n        for (var i = 0; i < predicate.predicates.length; i++) {\r\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\r\n        }\r\n        return res.join(' ' + predicate.condition + ' ');\r\n    };\r\n    /**\r\n     * Generate query string based on the multiple filter criteria from query.\r\n     *\r\n     * @param {Predicate} filter\r\n     * @param {boolean} requiresCast?\r\n     * @param query\r\n     * @param requiresCast\r\n     */\r\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\r\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\r\n    };\r\n    /**\r\n     * Generate query string based on the multiple filter criteria from query.\r\n     *\r\n     * @param  {string[]} filters\r\n     */\r\n    ODataAdaptor.prototype.onWhere = function (filters) {\r\n        if (this.pvt.search) {\r\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\r\n        }\r\n        return filters.join(' and ');\r\n    };\r\n    /**\r\n     * Generate query string based on the multiple search criteria from query.\r\n     *\r\n     * @param e\r\n     * @param {string} operator\r\n     * @param {string} key\r\n     * @param {boolean} } ignoreCase\r\n     * @param e.fields\r\n     * @param e.operator\r\n     * @param e.key\r\n     * @param e.ignoreCase\r\n     */\r\n    ODataAdaptor.prototype.onEachSearch = function (e) {\r\n        if (e.fields && e.fields.length === 0) {\r\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\r\n        }\r\n        var filter = this.pvt.search || [];\r\n        for (var i = 0; i < e.fields.length; i++) {\r\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\r\n        }\r\n        this.pvt.search = filter;\r\n    };\r\n    /**\r\n     * Generate query string based on the search criteria from query.\r\n     *\r\n     * @param  {Object} e\r\n     */\r\n    ODataAdaptor.prototype.onSearch = function (e) {\r\n        this.pvt.search = Predicate.or(this.pvt.search);\r\n        return '';\r\n    };\r\n    /**\r\n     * Generate query string based on multiple sort criteria from query.\r\n     *\r\n     * @param  {QueryOptions} e\r\n     */\r\n    ODataAdaptor.prototype.onEachSort = function (e) {\r\n        var res = [];\r\n        if (e.name instanceof Array) {\r\n            for (var i = 0; i < e.name.length; i++) {\r\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\r\n            }\r\n        }\r\n        else {\r\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\r\n        }\r\n        return res.join(',');\r\n    };\r\n    /**\r\n     * Returns sort query string.\r\n     *\r\n     * @param  {string[]} e\r\n     */\r\n    ODataAdaptor.prototype.onSortBy = function (e) {\r\n        return e.reverse().join(',');\r\n    };\r\n    /**\r\n     * Adds the group query to the adaptor option.\r\n     *\r\n     * @param  {Object[]} e\r\n     * @returns string\r\n     */\r\n    ODataAdaptor.prototype.onGroup = function (e) {\r\n        this.pvt.groups = e;\r\n        return [];\r\n    };\r\n    /**\r\n     * Returns the select query string.\r\n     *\r\n     * @param  {string[]} e\r\n     */\r\n    ODataAdaptor.prototype.onSelect = function (e) {\r\n        for (var i = 0; i < e.length; i++) {\r\n            e[i] = ODataAdaptor.getField(e[i]);\r\n        }\r\n        return e.join(',');\r\n    };\r\n    /**\r\n     * Add the aggregate query to the adaptor option.\r\n     *\r\n     * @param  {Object[]} e\r\n     * @returns string\r\n     */\r\n    ODataAdaptor.prototype.onAggregates = function (e) {\r\n        this.pvt.aggregates = e;\r\n        return '';\r\n    };\r\n    /**\r\n     * Returns the query string which requests total count from the data source.\r\n     *\r\n     * @param  {boolean} e\r\n     * @returns string\r\n     */\r\n    ODataAdaptor.prototype.onCount = function (e) {\r\n        return e === true ? 'allpages' : '';\r\n    };\r\n    /**\r\n     * Method will trigger before send the request to server side.\r\n     * Used to set the custom header or modify the request options.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Request} request\r\n     * @param {Fetch} settings?\r\n     * @param settings\r\n     */\r\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\r\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\r\n            request.headers.set('Accept', this.options.multipartAccept);\r\n            request.headers.set('DataServiceVersion', '2.0');\r\n            //request.overrideMimeType('text/plain; charset=x-user-defined');\r\n        }\r\n        else {\r\n            request.headers.set('Accept', this.options.accept);\r\n        }\r\n        request.headers.set('DataServiceVersion', '2.0');\r\n        request.headers.set('MaxDataServiceVersion', '2.0');\r\n    };\r\n    /**\r\n     * Returns the data from the query processing.\r\n     *\r\n     * @param {DataResult} data\r\n     * @param {DataOptions} ds?\r\n     * @param {Query} query?\r\n     * @param {Request} xhr?\r\n     * @param {Fetch} request?\r\n     * @param {CrudOptions} changes?\r\n     * @param ds\r\n     * @param query\r\n     * @param xhr\r\n     * @param request\r\n     * @param changes\r\n     * @returns aggregateResult\r\n     */\r\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\r\n        var metaCheck = 'odata.metadata';\r\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\r\n            var dataUrls = data[metaCheck].split('/$metadata#');\r\n            this.rootUrl = dataUrls[0];\r\n            this.resourceTableName = dataUrls[1];\r\n        }\r\n        var pvtData = 'pvtData';\r\n        if (!isNullOrUndefined(data.d)) {\r\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\r\n            var metaData = '__metadata';\r\n            if (!isNullOrUndefined(dataCopy)) {\r\n                for (var i = 0; i < dataCopy.length; i++) {\r\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\r\n                        delete dataCopy[i][metaData];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var pvt = request && request[pvtData];\r\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\r\n        if (emptyAndBatch) {\r\n            return emptyAndBatch;\r\n        }\r\n        var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\r\n        var count = null;\r\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\r\n        if (query && query.isCountRequired) {\r\n            var oDataCount = '__count';\r\n            if (data[oDataCount] || data['odata.count']) {\r\n                count = data[oDataCount] || data['odata.count'];\r\n            }\r\n            if (data.d) {\r\n                data = data.d;\r\n            }\r\n            if (data[oDataCount] || data['odata.count']) {\r\n                count = data[oDataCount] || data['odata.count'];\r\n            }\r\n        }\r\n        if (version === 3 && data.value) {\r\n            data = data.value;\r\n        }\r\n        if (data.d) {\r\n            data = data.d;\r\n        }\r\n        if (version < 3 && data.results) {\r\n            data = data.results;\r\n        }\r\n        var args = {};\r\n        args.count = count;\r\n        args.result = data;\r\n        this.getAggregateResult(pvt, data, args, null, query);\r\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\r\n    };\r\n    /**\r\n     * Converts the request object to query string.\r\n     *\r\n     * @param {Object} req\r\n     * @param request\r\n     * @param {Query} query\r\n     * @param {DataManager} dm\r\n     * @returns tableName\r\n     */\r\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\r\n        var res = [];\r\n        var table = 'table';\r\n        var tableName = request[table] || '';\r\n        var format = '$format';\r\n        delete request[table];\r\n        if (dm.dataSource.requiresFormat) {\r\n            request[format] = 'json';\r\n        }\r\n        var keys = Object.keys(request);\r\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\r\n            var prop = keys_4[_i];\r\n            res.push(prop + '=' + request[prop]);\r\n        }\r\n        res = res.join('&');\r\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\r\n            return res;\r\n        }\r\n        return res.length ? tableName + '?' + res : tableName || '';\r\n    };\r\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\r\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\r\n            var prop = _a[_i];\r\n            if ((convertObj[prop] instanceof Date)) {\r\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\r\n            }\r\n        }\r\n        return convertObj;\r\n    };\r\n    /**\r\n     * Prepare and returns request body which is used to insert a new record in the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Object} data\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     */\r\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\r\n        return {\r\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\r\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\r\n        };\r\n    };\r\n    /**\r\n     * Prepare and return request body which is used to remove record from the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {number} value\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     */\r\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\r\n        var url;\r\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\r\n            url = \"('\" + value + \"')\";\r\n        }\r\n        else {\r\n            url = \"(\" + value + \")\";\r\n        }\r\n        return {\r\n            type: 'DELETE',\r\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\r\n        };\r\n    };\r\n    /**\r\n     * Updates existing record and saves the changes to the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {Object} value\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     * @param query\r\n     * @param original\r\n     * @returns this\r\n     */\r\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\r\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\r\n            value = this.compareAndRemove(value, original, keyField);\r\n        }\r\n        var url;\r\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\r\n            url = \"('\" + value[keyField] + \"')\";\r\n        }\r\n        else {\r\n            url = \"(\" + value[keyField] + \")\";\r\n        }\r\n        return {\r\n            type: this.options.updateType,\r\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\r\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\r\n            accept: this.options.accept\r\n        };\r\n    };\r\n    /**\r\n     * Prepare the request body based on the newly added, removed and updated records.\r\n     * The result is used by the batch request.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {CrudOptions} changes\r\n     * @param {RemoteArgs} e\r\n     * @param query\r\n     * @param original\r\n     * @returns {Object}\r\n     */\r\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\r\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\r\n        var url = (dm.dataSource.batchUrl || this.rootUrl) ?\r\n            (dm.dataSource.batchUrl || this.rootUrl) + '/' + this.options.batch :\r\n            (dm.dataSource.batchUrl || dm.dataSource.url).replace(/\\/*$/, '/' + this.options.batch);\r\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\r\n        var args = {\r\n            url: e.url,\r\n            key: e.key,\r\n            cid: 1,\r\n            cSet: DataUtil.getGuid(this.options.changeSet)\r\n        };\r\n        var req = '--' + initialGuid + '\\n';\r\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\r\n        this.pvt.changeSet = 0;\r\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\r\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\r\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\r\n        req += args.cSet + '--\\n';\r\n        req += '--' + initialGuid + '--';\r\n        return {\r\n            type: 'POST',\r\n            url: url,\r\n            dataType: 'json',\r\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\r\n            data: req\r\n        };\r\n    };\r\n    /**\r\n     * Generate the string content from the removed records.\r\n     * The result will be send during batch update.\r\n     *\r\n     * @param {Object[]} arr\r\n     * @param {RemoteArgs} e\r\n     * @param dm\r\n     * @returns this\r\n     */\r\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\r\n        if (!arr) {\r\n            return '';\r\n        }\r\n        var req = '';\r\n        var stat = {\r\n            'method': 'DELETE ',\r\n            'url': function (data, i, key) {\r\n                var url = DataUtil.getObject(key, data[i]);\r\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\r\n                    return '(' + url + ')';\r\n                }\r\n                else if (url instanceof Date) {\r\n                    var dateTime = data[i][key];\r\n                    return '(' + dateTime.toJSON() + ')';\r\n                }\r\n                else {\r\n                    return \"('\" + url + \"')\";\r\n                }\r\n            },\r\n            'data': function (data, i) { return ''; }\r\n        };\r\n        req = this.generateBodyContent(arr, e, stat, dm);\r\n        return req + '\\n';\r\n    };\r\n    /**\r\n     * Generate the string content from the inserted records.\r\n     * The result will be send during batch update.\r\n     *\r\n     * @param {Object[]} arr\r\n     * @param {RemoteArgs} e\r\n     * @param dm\r\n     */\r\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\r\n        if (!arr) {\r\n            return '';\r\n        }\r\n        var req = '';\r\n        var stat = {\r\n            'method': 'POST ',\r\n            'url': function (data, i, key) { return ''; },\r\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\r\n        };\r\n        req = this.generateBodyContent(arr, e, stat, dm);\r\n        return req;\r\n    };\r\n    /**\r\n     * Generate the string content from the updated records.\r\n     * The result will be send during batch update.\r\n     *\r\n     * @param {Object[]} arr\r\n     * @param {RemoteArgs} e\r\n     * @param dm\r\n     * @param org\r\n     */\r\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\r\n        var _this = this;\r\n        if (!arr) {\r\n            return '';\r\n        }\r\n        var req = '';\r\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\r\n        var stat = {\r\n            'method': this.options.updateType + ' ',\r\n            'url': function (data, i, key) {\r\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\r\n                    return '(' + data[i][key] + ')';\r\n                }\r\n                else if (data[i][key] instanceof Date) {\r\n                    var date = data[i][key];\r\n                    return '(' + date.toJSON() + ')';\r\n                }\r\n                else {\r\n                    return \"('\" + data[i][key] + \"')\";\r\n                }\r\n            },\r\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\r\n        };\r\n        req = this.generateBodyContent(arr, e, stat, dm);\r\n        return req;\r\n    };\r\n    ODataAdaptor.getField = function (prop) {\r\n        return prop.replace(/\\./g, '/');\r\n    };\r\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\r\n        var req = '';\r\n        for (var i = 0; i < arr.length; i++) {\r\n            req += '\\n' + e.cSet + '\\n';\r\n            req += this.options.changeSetContent + '\\n\\n';\r\n            req += stat.method;\r\n            if (stat.method === 'POST ') {\r\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\r\n            }\r\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\r\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\r\n            }\r\n            else if (stat.method === 'DELETE ') {\r\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\r\n            }\r\n            req += 'Accept: ' + this.options.accept + '\\n';\r\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\r\n            req += this.options.batchChangeSetContentType + '\\n';\r\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\r\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\r\n                delete arr[i]['@odata.etag'];\r\n            }\r\n            else {\r\n                req += '\\n';\r\n            }\r\n            req += stat.data(arr, i);\r\n        }\r\n        return req;\r\n    };\r\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\r\n        if (xhr && xhr.headers.get('Content-Type') && xhr.headers.get('Content-Type').indexOf('xml') !== -1) {\r\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\r\n        }\r\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\r\n            var guid = xhr.headers.get('Content-Type');\r\n            var cIdx = void 0;\r\n            var jsonObj = void 0;\r\n            var d = data + '';\r\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\r\n            d = d.split(guid);\r\n            if (d.length < 2) {\r\n                return {};\r\n            }\r\n            d = d[1];\r\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\r\n            if (exVal) {\r\n                d.replace(exVal[0], '');\r\n            }\r\n            var changeGuid = exVal ? exVal[1] : '';\r\n            d = d.split(changeGuid);\r\n            for (var i = d.length; i > -1; i--) {\r\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\r\n                    continue;\r\n                }\r\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\r\n                if (changes.addedRecords[cIdx]) {\r\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\r\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\r\n                }\r\n            }\r\n            return changes;\r\n        }\r\n        return null;\r\n    };\r\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\r\n        var _this = this;\r\n        if (isNullOrUndefined(original)) {\r\n            return data;\r\n        }\r\n        Object.keys(data).forEach(function (prop) {\r\n            if (prop !== key && prop !== '@odata.etag') {\r\n                if (DataUtil.isPlainObject(data[prop])) {\r\n                    _this.compareAndRemove(data[prop], original[prop]);\r\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\r\n                    if (final.length === 0) {\r\n                        delete data[prop];\r\n                    }\r\n                }\r\n                else if (data[prop] === original[prop]) {\r\n                    delete data[prop];\r\n                }\r\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\r\n                    delete data[prop];\r\n                }\r\n            }\r\n        });\r\n        return data;\r\n    };\r\n    return ODataAdaptor;\r\n}(UrlAdaptor));\r\nexport { ODataAdaptor };\r\n/**\r\n * The OData v4 is an improved version of OData protocols.\r\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\r\n *\r\n * @hidden\r\n */\r\nvar ODataV4Adaptor = /** @class */ (function (_super) {\r\n    __extends(ODataV4Adaptor, _super);\r\n    function ODataV4Adaptor(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        // options replaced the default adaptor options\r\n        _this.options = extend({}, _this.options, {\r\n            requestType: 'get',\r\n            accept: 'application/json, text/javascript, */*; q=0.01',\r\n            multipartAccept: 'multipart/mixed',\r\n            sortBy: '$orderby',\r\n            select: '$select',\r\n            skip: '$skip',\r\n            take: '$top',\r\n            count: '$count',\r\n            search: '$search',\r\n            where: '$filter',\r\n            expand: '$expand',\r\n            batch: '$batch',\r\n            changeSet: '--changeset_',\r\n            batchPre: 'batch_',\r\n            contentId: 'Content-Id: ',\r\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\r\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\r\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\r\n            updateType: 'PATCH',\r\n            localTime: false,\r\n            apply: '$apply'\r\n        });\r\n        extend(_this.options, props || {});\r\n        return _this;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ODataV4Adaptor.prototype.getModuleName = function () {\r\n        return 'ODataV4Adaptor';\r\n    };\r\n    /**\r\n     * Returns the query string which requests total count from the data source.\r\n     *\r\n     * @param  {boolean} e\r\n     * @returns string\r\n     */\r\n    ODataV4Adaptor.prototype.onCount = function (e) {\r\n        return e === true ? 'true' : '';\r\n    };\r\n    /**\r\n     * Generate request string based on the filter criteria from query.\r\n     *\r\n     * @param {Predicate} pred\r\n     * @param {boolean} requiresCast?\r\n     * @param predicate\r\n     * @param query\r\n     * @param requiresCast\r\n     */\r\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\r\n        var returnValue = '';\r\n        var val = predicate.value;\r\n        var isDate = val instanceof Date;\r\n        if (query instanceof Query) {\r\n            var queries = this.getQueryRequest(query);\r\n            for (var i = 0; i < queries.filters.length; i++) {\r\n                if (queries.filters[i].e.key === predicate.value) {\r\n                    requiresCast = true;\r\n                }\r\n            }\r\n        }\r\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\r\n        if (isDate) {\r\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\r\n        }\r\n        if (DataUtil.parse.isGuid(val)) {\r\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\r\n        }\r\n        return returnValue;\r\n    };\r\n    /**\r\n     * Generate query string based on the multiple search criteria from query.\r\n     *\r\n     * @param e\r\n     * @param {string} operator\r\n     * @param {string} key\r\n     * @param {boolean} } ignoreCase\r\n     * @param e.fields\r\n     * @param e.operator\r\n     * @param e.key\r\n     * @param e.ignoreCase\r\n     */\r\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\r\n        var search = this.pvt.searches || [];\r\n        search.push(e.key);\r\n        this.pvt.searches = search;\r\n    };\r\n    /**\r\n     *  Generate query string based on the search criteria from query.\r\n     *\r\n     * @param  {Object} e\r\n     */\r\n    ODataV4Adaptor.prototype.onSearch = function (e) {\r\n        return this.pvt.searches.join(' OR ');\r\n    };\r\n    /**\r\n     * Returns the expand query string.\r\n     *\r\n     * @param {string} e\r\n     * @param e.selects\r\n     * @param e.expands\r\n     */\r\n    ODataV4Adaptor.prototype.onExpand = function (e) {\r\n        var _this = this;\r\n        var selected = {};\r\n        var expanded = {};\r\n        var expands = e.expands.slice();\r\n        var exArr = [];\r\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\r\n        selects.forEach(function (select) {\r\n            var splits = select.split('.');\r\n            if (!(splits[0] in selected)) {\r\n                selected[splits[0]] = [];\r\n            }\r\n            if (splits.length === 2) {\r\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1) {\r\n                    if (selected[splits[0]][0].indexOf('$expand') !== -1 && selected[splits[0]][0].indexOf(';$select=') === -1) {\r\n                        selected[splits[0]][0] = selected[splits[0]][0] + ';' + '$select=' + splits[1];\r\n                    }\r\n                    else {\r\n                        selected[splits[0]][0] = selected[splits[0]][0] + ',' + splits[1];\r\n                    }\r\n                }\r\n                else {\r\n                    selected[splits[0]].push('$select=' + splits[1]);\r\n                }\r\n            }\r\n            else {\r\n                var sel = '$select=' + splits[splits.length - 1];\r\n                var exp = '';\r\n                var close_1 = '';\r\n                for (var i = 1; i < splits.length - 1; i++) {\r\n                    exp = exp + '$expand=' + splits[i] + '(';\r\n                    close_1 = close_1 + ')';\r\n                }\r\n                var combineVal = exp + sel + close_1;\r\n                if (selected[splits[0]].length && Object.keys(selected).indexOf(splits[0]) !== -1 &&\r\n                    _this.expandQueryIndex(selected[splits[0]], true)) {\r\n                    var idx = _this.expandQueryIndex(selected[splits[0]]);\r\n                    selected[splits[0]][idx] = selected[splits[0]][idx] + combineVal.replace('$expand=', ',');\r\n                }\r\n                else {\r\n                    selected[splits[0]].push(combineVal);\r\n                }\r\n            }\r\n        });\r\n        //Auto expand from select query\r\n        Object.keys(selected).forEach(function (expand) {\r\n            if ((expands.indexOf(expand) === -1)) {\r\n                expands.push(expand);\r\n            }\r\n        });\r\n        expands.forEach(function (expand) {\r\n            expanded[expand] = expand in selected ? expand + \"(\" + selected[expand].join(';') + \")\" : expand;\r\n        });\r\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\r\n        return exArr.join(',');\r\n    };\r\n    ODataV4Adaptor.prototype.expandQueryIndex = function (query, isExpand) {\r\n        for (var i = 0; i < query.length; i++) {\r\n            if (query[i].indexOf('$expand') !== -1) {\r\n                return isExpand ? true : i;\r\n            }\r\n        }\r\n        return isExpand ? false : 0;\r\n    };\r\n    /**\r\n     * Returns the groupby query string.\r\n     *\r\n     * @param {string} e\r\n     * @param distinctFields\r\n     */\r\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\r\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\r\n        return \"groupby((\" + fields + \"))\";\r\n    };\r\n    /**\r\n     * Returns the select query string.\r\n     *\r\n     * @param  {string[]} e\r\n     */\r\n    ODataV4Adaptor.prototype.onSelect = function (e) {\r\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\r\n    };\r\n    /**\r\n     * Method will trigger before send the request to server side.\r\n     * Used to set the custom header or modify the request options.\r\n     *\r\n     * @param  {DataManager} dm\r\n     * @param  {Request} request\r\n     * @param  {Fetch} settings\r\n     * @returns void\r\n     */\r\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\r\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\r\n            request.headers.set('Prefer', 'return=representation');\r\n        }\r\n        request.headers.set('Accept', this.options.accept);\r\n    };\r\n    /**\r\n     * Returns the data from the query processing.\r\n     *\r\n     * @param {DataResult} data\r\n     * @param {DataOptions} ds?\r\n     * @param {Query} query?\r\n     * @param {Request} xhr?\r\n     * @param {Fetch} request?\r\n     * @param {CrudOptions} changes?\r\n     * @param ds\r\n     * @param query\r\n     * @param xhr\r\n     * @param request\r\n     * @param changes\r\n     * @returns aggregateResult\r\n     */\r\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\r\n        var metaName = '@odata.context';\r\n        var metaV4Name = '@context';\r\n        if ((request && request.type === 'GET') && !this.rootUrl && (data[metaName] || data[metaV4Name])) {\r\n            var dataUrl = data[metaName] ? data[metaName].split('/$metadata#') : data[metaV4Name].split('/$metadata#');\r\n            this.rootUrl = dataUrl[0];\r\n            this.resourceTableName = dataUrl[1];\r\n        }\r\n        var pvtData = 'pvtData';\r\n        var pvt = request && request[pvtData];\r\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\r\n        if (emptyAndBatch) {\r\n            return emptyAndBatch;\r\n        }\r\n        var count = null;\r\n        var dataCount = '@odata.count';\r\n        var dataV4Count = '@count';\r\n        if (query && query.isCountRequired) {\r\n            if (dataCount in data) {\r\n                count = data[dataCount];\r\n            }\r\n            else if (dataV4Count in data) {\r\n                count = data[dataV4Count];\r\n            }\r\n        }\r\n        data = !isNullOrUndefined(data.value) ? data.value : data;\r\n        var args = {};\r\n        args.count = count;\r\n        args.result = data;\r\n        this.getAggregateResult(pvt, data, args, null, query);\r\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\r\n    };\r\n    return ODataV4Adaptor;\r\n}(ODataAdaptor));\r\nexport { ODataV4Adaptor };\r\n/**\r\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\r\n * The DataManager uses the WebApiAdaptor to consume Web API.\r\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n *\r\n * @hidden\r\n */\r\nvar WebApiAdaptor = /** @class */ (function (_super) {\r\n    __extends(WebApiAdaptor, _super);\r\n    function WebApiAdaptor() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebApiAdaptor.prototype.getModuleName = function () {\r\n        return 'WebApiAdaptor';\r\n    };\r\n    /**\r\n     * Prepare and returns request body which is used to insert a new record in the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Object} data\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     */\r\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\r\n        return {\r\n            type: 'POST',\r\n            url: dm.dataSource.url,\r\n            data: JSON.stringify(data)\r\n        };\r\n    };\r\n    /**\r\n     * Prepare and return request body which is used to remove record from the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {number} value\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     */\r\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\r\n        return {\r\n            type: 'DELETE',\r\n            url: dm.dataSource.url + '/' + value,\r\n            data: JSON.stringify(value)\r\n        };\r\n    };\r\n    /**\r\n     * Prepare and return request body which is used to update record.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {Object} value\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     */\r\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\r\n        return {\r\n            type: 'PUT',\r\n            url: dm.dataSource.url,\r\n            data: JSON.stringify(value)\r\n        };\r\n    };\r\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\r\n        var _this = this;\r\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\r\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\r\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\r\n        var req = [];\r\n        var _loop_1 = function (i, x) {\r\n            changes.addedRecords.forEach(function (j, d) {\r\n                var stat = {\r\n                    'method': 'POST ',\r\n                    'url': function (data, i, key) { return ''; },\r\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\r\n                };\r\n                req.push('--' + initialGuid);\r\n                req.push('Content-Type: application/http; msgtype=request', '');\r\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\r\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\r\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\r\n                req.push('Host: ' + location.host);\r\n                req.push('', j ? JSON.stringify(j) : '');\r\n            });\r\n        };\r\n        //insertion\r\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\r\n            _loop_1(i, x);\r\n        }\r\n        var _loop_2 = function (i, x) {\r\n            changes.changedRecords.forEach(function (j, d) {\r\n                var stat = {\r\n                    'method': _this.options.updateType + ' ',\r\n                    'url': function (data, i, key) { return ''; },\r\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\r\n                };\r\n                req.push('--' + initialGuid);\r\n                req.push('Content-Type: application/http; msgtype=request', '');\r\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\r\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\r\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\r\n                req.push('Host: ' + location.host);\r\n                req.push('', j ? JSON.stringify(j) : '');\r\n            });\r\n        };\r\n        //updation\r\n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\r\n            _loop_2(i, x);\r\n        }\r\n        var _loop_3 = function (i, x) {\r\n            changes.deletedRecords.forEach(function (j, d) {\r\n                var state = {\r\n                    'mtd': 'DELETE ',\r\n                    'url': function (data, i, key) {\r\n                        var url = DataUtil.getObject(key, data[i]);\r\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\r\n                            return '/' + url;\r\n                        }\r\n                        else if (url instanceof Date) {\r\n                            var datTime = data[i][key];\r\n                            return '/' + datTime.toJSON();\r\n                        }\r\n                        else {\r\n                            return \"/'\" + url + \"'\";\r\n                        }\r\n                    },\r\n                    'data': function (data, i) { return ''; }\r\n                };\r\n                req.push('--' + initialGuid);\r\n                req.push('Content-Type: application/http; msgtype=request', '');\r\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\r\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\r\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\r\n                req.push('Host: ' + location.host);\r\n                req.push('', j ? JSON.stringify(j) : '');\r\n            });\r\n        };\r\n        //deletion\r\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\r\n            _loop_3(i, x);\r\n        }\r\n        req.push('--' + initialGuid + '--', '');\r\n        return {\r\n            type: 'POST',\r\n            url: url,\r\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\r\n            data: req.join('\\r\\n')\r\n        };\r\n    };\r\n    /**\r\n     * Method will trigger before send the request to server side.\r\n     * Used to set the custom header or modify the request options.\r\n     *\r\n     * @param  {DataManager} dm\r\n     * @param  {Request} request\r\n     * @param  {Fetch} settings\r\n     * @returns void\r\n     */\r\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\r\n        request.headers.set('Accept', 'application/json, text/javascript, */*; q=0.01');\r\n    };\r\n    /**\r\n     * Returns the data from the query processing.\r\n     *\r\n     * @param {DataResult} data\r\n     * @param {DataOptions} ds?\r\n     * @param {Query} query?\r\n     * @param {Request} xhr?\r\n     * @param {Fetch} request?\r\n     * @param {CrudOptions} changes?\r\n     * @param ds\r\n     * @param query\r\n     * @param xhr\r\n     * @param request\r\n     * @param changes\r\n     * @returns aggregateResult\r\n     */\r\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\r\n        var pvtData = 'pvtData';\r\n        var pvt = request && request[pvtData];\r\n        var count = null;\r\n        var args = {};\r\n        if (request && request.type.toLowerCase() !== 'post') {\r\n            var versionCheck = xhr && request.fetchRequest.headers.get('DataServiceVersion');\r\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\r\n            if (query && query.isCountRequired) {\r\n                if (!DataUtil.isNull(data.Count)) {\r\n                    count = data.Count;\r\n                }\r\n            }\r\n            if (version < 3 && data.Items) {\r\n                data = data.Items;\r\n            }\r\n            args.count = count;\r\n            args.result = data;\r\n            this.getAggregateResult(pvt, data, args, null, query);\r\n        }\r\n        args.result = args.result || data;\r\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\r\n    };\r\n    return WebApiAdaptor;\r\n}(ODataAdaptor));\r\nexport { WebApiAdaptor };\r\n/**\r\n * WebMethodAdaptor can be used by DataManager to interact with web method.\r\n *\r\n * @hidden\r\n */\r\nvar WebMethodAdaptor = /** @class */ (function (_super) {\r\n    __extends(WebMethodAdaptor, _super);\r\n    function WebMethodAdaptor() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Prepare the request body based on the query.\r\n     * The query information can be accessed at the WebMethod using variable named `value`.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Query} query\r\n     * @param {Object[]} hierarchyFilters?\r\n     * @param hierarchyFilters\r\n     * @returns application\r\n     */\r\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\r\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\r\n        var getData = 'data';\r\n        var data = DataUtil.parse.parseJson(obj[getData]);\r\n        var result = {};\r\n        var value = 'value';\r\n        if (data.param) {\r\n            for (var i = 0; i < data.param.length; i++) {\r\n                var param = data.param[i];\r\n                var key = Object.keys(param)[0];\r\n                result[key] = param[key];\r\n            }\r\n        }\r\n        result[value] = data;\r\n        var pvtData = 'pvtData';\r\n        var url = 'url';\r\n        return {\r\n            data: JSON.stringify(result, DataUtil.parse.jsonDateReplacer),\r\n            url: obj[url],\r\n            pvtData: obj[pvtData],\r\n            type: 'POST',\r\n            contentType: 'application/json; charset=utf-8'\r\n        };\r\n    };\r\n    return WebMethodAdaptor;\r\n}(UrlAdaptor));\r\nexport { WebMethodAdaptor };\r\n/**\r\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\r\n * It interacts with server-side only for CRUD operations.\r\n *\r\n * @hidden\r\n */\r\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\r\n    __extends(RemoteSaveAdaptor, _super);\r\n    /**\r\n     * @hidden\r\n     */\r\n    function RemoteSaveAdaptor() {\r\n        var _this = _super.call(this) || this;\r\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\r\n        return _this;\r\n    }\r\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\r\n        this.pvt.position = position;\r\n        this.updateType = 'add';\r\n        return {\r\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\r\n            data: JSON.stringify(extend({}, {\r\n                value: data,\r\n                table: tableName,\r\n                action: 'insert'\r\n            }, DataUtil.getAddParams(this, dm, query)))\r\n        };\r\n    };\r\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\r\n        _super.prototype.remove.call(this, dm, keyField, val);\r\n        return {\r\n            type: 'POST',\r\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\r\n            data: JSON.stringify(extend({}, {\r\n                key: val,\r\n                keyColumn: keyField,\r\n                table: tableName,\r\n                action: 'remove'\r\n            }, DataUtil.getAddParams(this, dm, query)))\r\n        };\r\n    };\r\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\r\n        this.updateType = 'update';\r\n        this.updateKey = keyField;\r\n        return {\r\n            type: 'POST',\r\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\r\n            data: JSON.stringify(extend({}, {\r\n                value: val,\r\n                action: 'update',\r\n                keyColumn: keyField,\r\n                key: val[keyField],\r\n                table: tableName\r\n            }, DataUtil.getAddParams(this, dm, query)))\r\n        };\r\n    };\r\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\r\n        var i;\r\n        var newData = request ? JSON.parse(request.data) : data;\r\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\r\n        if (this.updateType === 'add') {\r\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\r\n        }\r\n        if (this.updateType === 'update') {\r\n            _super.prototype.update.call(this, ds, this.updateKey, data);\r\n        }\r\n        this.updateType = undefined;\r\n        if (data.added) {\r\n            for (i = 0; i < data.added.length; i++) {\r\n                _super.prototype.insert.call(this, ds, data.added[i]);\r\n            }\r\n        }\r\n        if (data.changed) {\r\n            for (i = 0; i < data.changed.length; i++) {\r\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\r\n            }\r\n        }\r\n        if (data.deleted) {\r\n            for (i = 0; i < data.deleted.length; i++) {\r\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\r\n            }\r\n        }\r\n        return data;\r\n    };\r\n    /**\r\n     * Prepare the request body based on the newly added, removed and updated records.\r\n     * Also perform the changes in the locally cached data to sync with the remote data.\r\n     * The result is used by the batch request.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {CrudOptions} changes\r\n     * @param {RemoteArgs} e\r\n     * @param query\r\n     * @param original\r\n     */\r\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\r\n        return {\r\n            type: 'POST',\r\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\r\n            contentType: 'application/json; charset=utf-8',\r\n            dataType: 'json',\r\n            data: JSON.stringify(extend({}, {\r\n                changed: changes.changedRecords,\r\n                added: changes.addedRecords,\r\n                deleted: changes.deletedRecords,\r\n                action: 'batch',\r\n                table: e.url,\r\n                key: e.key\r\n            }, DataUtil.getAddParams(this, dm, query)))\r\n        };\r\n    };\r\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\r\n        var urlParams = new UrlAdaptor();\r\n        urlParams.addParams(options);\r\n    };\r\n    return RemoteSaveAdaptor;\r\n}(JsonAdaptor));\r\nexport { RemoteSaveAdaptor };\r\n/**\r\n * Fetch Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\r\n *\r\n * @hidden\r\n */\r\nvar CustomDataAdaptor = /** @class */ (function (_super) {\r\n    __extends(CustomDataAdaptor, _super);\r\n    function CustomDataAdaptor(props) {\r\n        var _this = _super.call(this) || this;\r\n        // options replaced the default adaptor options\r\n        _this.options = extend({}, _this.options, {\r\n            getData: new Function(),\r\n            addRecord: new Function(),\r\n            updateRecord: new Function(),\r\n            deleteRecord: new Function(),\r\n            batchUpdate: new Function()\r\n        });\r\n        extend(_this.options, props || {});\r\n        return _this;\r\n    }\r\n    CustomDataAdaptor.prototype.getModuleName = function () {\r\n        return 'CustomDataAdaptor';\r\n    };\r\n    return CustomDataAdaptor;\r\n}(UrlAdaptor));\r\nexport { CustomDataAdaptor };\r\n/**\r\n * The GraphqlAdaptor that is extended from URL Adaptor, is used for retrieving data from the Graphql server.\r\n * It interacts with the Graphql server with all the DataManager Queries and performs CRUD operations.\r\n *\r\n * @hidden\r\n */\r\nvar GraphQLAdaptor = /** @class */ (function (_super) {\r\n    __extends(GraphQLAdaptor, _super);\r\n    function GraphQLAdaptor(options) {\r\n        var _this = _super.call(this) || this;\r\n        _this.opt = options;\r\n        _this.schema = _this.opt.response;\r\n        _this.query = _this.opt.query;\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n        // tslint:disable-next-line:no-empty\r\n        _this.getVariables = _this.opt.getVariables ? _this.opt.getVariables : function () { };\r\n        /* eslint-enable @typescript-eslint/no-empty-function */\r\n        _this.getQuery = function () { return _this.query; };\r\n        return _this;\r\n    }\r\n    GraphQLAdaptor.prototype.getModuleName = function () {\r\n        return 'GraphQLAdaptor';\r\n    };\r\n    /**\r\n     * Process the JSON data based on the provided queries.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Query} query?\r\n     * @param datamanager\r\n     * @param query\r\n     */\r\n    GraphQLAdaptor.prototype.processQuery = function (datamanager, query) {\r\n        var urlQuery = _super.prototype.processQuery.apply(this, arguments);\r\n        var dm = JSON.parse(urlQuery.data);\r\n        // constructing GraphQL parameters\r\n        var keys = ['skip', 'take', 'sorted', 'table', 'select', 'where',\r\n            'search', 'requiresCounts', 'aggregates', 'params'];\r\n        var temp = {};\r\n        var str = 'searchwhereparams';\r\n        keys.filter(function (e) {\r\n            temp[e] = str.indexOf(e) > -1 ? JSON.stringify(dm[e]) : dm[e];\r\n        });\r\n        var vars = this.getVariables() || {};\r\n        // tslint:disable-next-line:no-string-literal\r\n        vars['datamanager'] = temp;\r\n        var data = JSON.stringify({\r\n            query: this.getQuery(),\r\n            variables: vars\r\n        });\r\n        urlQuery.data = data;\r\n        return urlQuery;\r\n    };\r\n    /**\r\n     * Returns the data from the query processing.\r\n     * It will also cache the data for later usage.\r\n     *\r\n     * @param {DataResult} data\r\n     * @param {DataManager} ds?\r\n     * @param {Query} query?\r\n     * @param {Request} xhr?\r\n     * @param {Object} request?\r\n     * @param resData\r\n     * @param ds\r\n     * @param query\r\n     * @param xhr\r\n     * @param request\r\n     * @returns DataResult\r\n     */\r\n    GraphQLAdaptor.prototype.processResponse = function (resData, ds, query, xhr, request) {\r\n        var res = resData;\r\n        var count;\r\n        var aggregates;\r\n        var result = getValue(this.schema.result, res.data);\r\n        if (this.schema.count) {\r\n            count = getValue(this.schema.count, res.data);\r\n        }\r\n        if (this.schema.aggregates) {\r\n            aggregates = getValue(this.schema.aggregates, res.data);\r\n            aggregates = !isNullOrUndefined(aggregates) ? DataUtil.parse.parseJson(aggregates) : aggregates;\r\n        }\r\n        var pvt = request.pvtData || {};\r\n        var args = { result: result, aggregates: aggregates };\r\n        var data = args;\r\n        if (pvt && pvt.groups && pvt.groups.length) {\r\n            this.getAggregateResult(pvt, data, args, null, query);\r\n        }\r\n        return !isNullOrUndefined(count) ? { result: args.result, count: count, aggregates: aggregates } : args.result;\r\n    };\r\n    /**\r\n     * Prepare and returns request body which is used to insert a new record in the table.\r\n     */\r\n    GraphQLAdaptor.prototype.insert = function () {\r\n        var inserted = _super.prototype.insert.apply(this, arguments);\r\n        return this.generateCrudData(inserted, 'insert');\r\n    };\r\n    /**\r\n     * Prepare and returns request body which is used to update a new record in the table.\r\n     */\r\n    GraphQLAdaptor.prototype.update = function () {\r\n        var inserted = _super.prototype.update.apply(this, arguments);\r\n        return this.generateCrudData(inserted, 'update');\r\n    };\r\n    /**\r\n     * Prepare and returns request body which is used to remove a new record in the table.\r\n     */\r\n    GraphQLAdaptor.prototype.remove = function () {\r\n        var inserted = _super.prototype.remove.apply(this, arguments);\r\n        return this.generateCrudData(inserted, 'remove');\r\n    };\r\n    /**\r\n     * Prepare the request body based on the newly added, removed and updated records.\r\n     * The result is used by the batch request.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {CrudOptions} changes\r\n     * @param {Object} e\r\n     * @param e.key\r\n     * @param {Query} query\r\n     * @param {Object} original\r\n     */\r\n    GraphQLAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\r\n        var batch = _super.prototype.batchRequest.apply(this, arguments);\r\n        // tslint:disable-next-line:typedef\r\n        var bData = JSON.parse(batch.data);\r\n        bData.key = e.key;\r\n        batch.data = JSON.stringify(bData);\r\n        return this.generateCrudData(batch, 'batch');\r\n    };\r\n    GraphQLAdaptor.prototype.generateCrudData = function (crudData, action) {\r\n        var parsed = JSON.parse(crudData.data);\r\n        crudData.data = JSON.stringify({\r\n            query: this.opt.getMutation(action),\r\n            variables: parsed\r\n        });\r\n        return crudData;\r\n    };\r\n    return GraphQLAdaptor;\r\n}(UrlAdaptor));\r\nexport { GraphQLAdaptor };\r\n/**\r\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\r\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\r\n *\r\n * @hidden\r\n */\r\nvar CacheAdaptor = /** @class */ (function (_super) {\r\n    __extends(CacheAdaptor, _super);\r\n    /**\r\n     * Constructor for CacheAdaptor class.\r\n     *\r\n     * @param {CacheAdaptor} adaptor?\r\n     * @param {number} timeStamp?\r\n     * @param {number} pageSize?\r\n     * @param adaptor\r\n     * @param timeStamp\r\n     * @param pageSize\r\n     * @hidden\r\n     */\r\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\r\n        var _this = _super.call(this) || this;\r\n        _this.isCrudAction = false;\r\n        _this.isInsertAction = false;\r\n        if (!isNullOrUndefined(adaptor)) {\r\n            _this.cacheAdaptor = adaptor;\r\n        }\r\n        _this.pageSize = pageSize;\r\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\r\n        var obj = { keys: [], results: [] };\r\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\r\n        var guid = _this.guidId;\r\n        if (!isNullOrUndefined(timeStamp)) {\r\n            setInterval(function () {\r\n                var data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\r\n                var forDel = [];\r\n                for (var i = 0; i < data.results.length; i++) {\r\n                    var currentTime = +new Date();\r\n                    var requestTime = +new Date(data.results[i].timeStamp);\r\n                    data.results[i].timeStamp = currentTime - requestTime;\r\n                    if (currentTime - requestTime > timeStamp) {\r\n                        forDel.push(i);\r\n                    }\r\n                }\r\n                for (var i = 0; i < forDel.length; i++) {\r\n                    data.results.splice(forDel[i], 1);\r\n                    data.keys.splice(forDel[i], 1);\r\n                }\r\n                window.localStorage.removeItem(guid);\r\n                window.localStorage.setItem(guid, JSON.stringify(data));\r\n            }, timeStamp);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * It will generate the key based on the URL when we send a request to server.\r\n     *\r\n     * @param {string} url\r\n     * @param {Query} query?\r\n     * @param query\r\n     * @hidden\r\n     */\r\n    CacheAdaptor.prototype.generateKey = function (url, query) {\r\n        var queries = this.getQueryRequest(query);\r\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\r\n        var key = url;\r\n        var page = 'onPage';\r\n        if (page in singles) {\r\n            key += singles[page].pageIndex;\r\n        }\r\n        queries.sorts.forEach(function (obj) {\r\n            key += obj.e.direction + obj.e.fieldName;\r\n        });\r\n        queries.groups.forEach(function (obj) {\r\n            key += obj.e.fieldName;\r\n        });\r\n        queries.searches.forEach(function (obj) {\r\n            key += obj.e.searchKey;\r\n        });\r\n        for (var filter = 0; filter < queries.filters.length; filter++) {\r\n            var currentFilter = queries.filters[filter];\r\n            if (currentFilter.e.isComplex) {\r\n                var newQuery = query.clone();\r\n                newQuery.queries = [];\r\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\r\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\r\n                }\r\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\r\n            }\r\n            else {\r\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\r\n            }\r\n        }\r\n        return key;\r\n    };\r\n    /**\r\n     * Process the query to generate request body.\r\n     * If the data is already cached, it will return the cached data.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Query} query?\r\n     * @param {Object[]} hierarchyFilters?\r\n     * @param query\r\n     * @param hierarchyFilters\r\n     */\r\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\r\n        var key = this.generateKey(dm.dataSource.url, query);\r\n        var cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\r\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\r\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\r\n            return data;\r\n        }\r\n        this.isCrudAction = null;\r\n        this.isInsertAction = null;\r\n        /* eslint-disable prefer-spread */\r\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\r\n        /* eslint-enable prefer-spread */\r\n    };\r\n    /**\r\n     * Returns the data from the query processing.\r\n     * It will also cache the data for later usage.\r\n     *\r\n     * @param {DataResult} data\r\n     * @param {DataManager} ds?\r\n     * @param {Query} query?\r\n     * @param {Request} xhr?\r\n     * @param {Fetch} request?\r\n     * @param {CrudOptions} changes?\r\n     * @param ds\r\n     * @param query\r\n     * @param xhr\r\n     * @param request\r\n     * @param changes\r\n     */\r\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\r\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\r\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\r\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\r\n        }\r\n        /* eslint-disable prefer-spread */\r\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\r\n        /* eslint-enable prefer-spread */\r\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\r\n        var obj = {};\r\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\r\n        var index = obj.keys.indexOf(key);\r\n        if (index !== -1) {\r\n            obj.results.splice(index, 1);\r\n            obj.keys.splice(index, 1);\r\n        }\r\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\r\n        while (obj.results.length > this.pageSize) {\r\n            obj.results.splice(0, 1);\r\n            obj.keys.splice(0, 1);\r\n        }\r\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\r\n        return data;\r\n    };\r\n    /**\r\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Request} request\r\n     * @param {Fetch} settings?\r\n     * @param settings\r\n     */\r\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\r\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\r\n            && settings.type.toLowerCase() === 'post') {\r\n            request.headers.set('Accept', this.cacheAdaptor.options.multipartAccept);\r\n        }\r\n        if (!dm.dataSource.crossDomain) {\r\n            request.headers.set('Accept', this.cacheAdaptor.options.accept);\r\n        }\r\n    };\r\n    /**\r\n     * Updates existing record and saves the changes to the table.\r\n     *\r\n     * @param  {DataManager} dm\r\n     * @param  {string} keyField\r\n     * @param  {Object} value\r\n     * @param  {string} tableName\r\n     */\r\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\r\n        this.isCrudAction = true;\r\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\r\n    };\r\n    /**\r\n     * Prepare and returns request body which is used to insert a new record in the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {Object} data\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     */\r\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\r\n        this.isInsertAction = true;\r\n        return this.cacheAdaptor.insert(dm, data, tableName);\r\n    };\r\n    /**\r\n     * Prepare and return request body which is used to remove record from the table.\r\n     *\r\n     * @param {DataManager} dm\r\n     * @param {string} keyField\r\n     * @param {Object} value\r\n     * @param {string} tableName?\r\n     * @param tableName\r\n     */\r\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\r\n        this.isCrudAction = true;\r\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\r\n    };\r\n    /**\r\n     * Prepare the request body based on the newly added, removed and updated records.\r\n     * The result is used by the batch request.\r\n     *\r\n     * @param  {DataManager} dm\r\n     * @param  {CrudOptions} changes\r\n     * @param  {RemoteArgs} e\r\n     */\r\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\r\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\r\n    };\r\n    return CacheAdaptor;\r\n}(UrlAdaptor));\r\nexport { CacheAdaptor };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}