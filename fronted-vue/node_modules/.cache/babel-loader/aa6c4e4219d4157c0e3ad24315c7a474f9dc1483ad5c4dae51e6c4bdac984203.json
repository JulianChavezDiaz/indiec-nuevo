{"ast":null,"code":"/**\r\n * PdfBrushes.ts class for EJ2-PDF\r\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\r\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\r\n * ellipses, pies, polygons, and paths.\r\n * @private\r\n */\nvar PdfBrushes = /** @class */function () {\n  function PdfBrushes() {}\n  Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n    //Static Properties\n    /**\r\n     * Gets the AliceBlue brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.AliceBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.AliceBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n    /**\r\n     * Gets the antique white brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n        brush = this.sBrushes.getValue(KnownColor.AntiqueWhite);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.AntiqueWhite);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Aqua\", {\n    /**\r\n     * Gets the Aqua default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n        brush = this.sBrushes.getValue(KnownColor.Aqua);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Aqua);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n    /**\r\n     * Gets the Aquamarine default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n        brush = this.sBrushes.getValue(KnownColor.Aquamarine);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Aquamarine);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Azure\", {\n    /**\r\n     * Gets the Azure default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Azure)) {\n        brush = this.sBrushes.getValue(KnownColor.Azure);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Azure);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Beige\", {\n    /**\r\n     * Gets the Beige default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Beige)) {\n        brush = this.sBrushes.getValue(KnownColor.Beige);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Beige);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Bisque\", {\n    /**\r\n     * Gets the Bisque default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n        brush = this.sBrushes.getValue(KnownColor.Bisque);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Bisque);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Black\", {\n    /**\r\n     * Gets the Black default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Black)) {\n        brush = this.sBrushes.getValue(KnownColor.Black);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Black);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n    /**\r\n     * Gets the BlanchedAlmond default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n        brush = this.sBrushes.getValue(KnownColor.BlanchedAlmond);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.BlanchedAlmond);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Blue\", {\n    /**\r\n     * Gets the Blue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Blue)) {\n        brush = this.sBrushes.getValue(KnownColor.Blue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Blue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n    /**\r\n     * Gets the BlueViolet default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n        brush = this.sBrushes.getValue(KnownColor.BlueViolet);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.BlueViolet);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Brown\", {\n    /**\r\n     * Gets the Brown default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Brown)) {\n        brush = this.sBrushes.getValue(KnownColor.Brown);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Brown);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n    /**\r\n     * Gets the BurlyWood default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n        brush = this.sBrushes.getValue(KnownColor.BurlyWood);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.BurlyWood);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n    /**\r\n     * Gets the CadetBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.CadetBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.CadetBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n    /**\r\n     * Gets the Chartreuse default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n        brush = this.sBrushes.getValue(KnownColor.Chartreuse);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Chartreuse);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Chocolate\", {\n    /**\r\n     * Gets the Chocolate default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n        brush = this.sBrushes.getValue(KnownColor.Chocolate);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Chocolate);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Coral\", {\n    /**\r\n     * Gets the Coral default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Coral)) {\n        brush = this.sBrushes.getValue(KnownColor.Coral);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Coral);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n    /**\r\n     * Gets the CornflowerBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.CornflowerBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.CornflowerBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n    /**\r\n     * Gets the Corn silk default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n        brush = this.sBrushes.getValue(KnownColor.Cornsilk);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Cornsilk);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Crimson\", {\n    /**\r\n     *  Gets the Crimson default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n        brush = this.sBrushes.getValue(KnownColor.Crimson);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Crimson);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Cyan\", {\n    /**\r\n     * Gets the Cyan default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n        brush = this.sBrushes.getValue(KnownColor.Cyan);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Cyan);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n    /**\r\n     * Gets the DarkBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n    /**\r\n     * Gets the DarkCyan default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkCyan);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkCyan);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n    /**\r\n     * Gets the DarkGoldenrod default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkGoldenrod);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkGoldenrod);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkGray\", {\n    /**\r\n     * Gets the DarkGray default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkGray);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkGray);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n    /**\r\n     * Gets the DarkGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n    /**\r\n     * Gets the DarkKhaki default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkKhaki);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkKhaki);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n    /**\r\n     * Gets the DarkMagenta default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkMagenta);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkMagenta);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n    /**\r\n     * Gets the DarkOliveGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkOliveGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkOliveGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n    /**\r\n     * Gets the DarkOrange default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkOrange);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkOrange);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n    /**\r\n     * Gets the DarkOrchid default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkOrchid);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkOrchid);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkRed\", {\n    /**\r\n     * Gets the DarkRed default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkRed);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkRed);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n    /**\r\n     * Gets the DarkSalmon default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkSalmon);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkSalmon);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n    /**\r\n     * Gets the DarkSeaGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkSeaGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkSeaGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n    /**\r\n     * Gets the DarkSlateBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkSlateBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkSlateBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n    /**\r\n     * Gets the DarkSlateGray default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkSlateGray);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkSlateGray);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n    /**\r\n     * Gets the DarkTurquoise default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkTurquoise);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkTurquoise);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n    /**\r\n     * Gets the DarkViolet default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n        brush = this.sBrushes.getValue(KnownColor.DarkViolet);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DarkViolet);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DeepPink\", {\n    /**\r\n     * Gets the DeepPink default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n        brush = this.sBrushes.getValue(KnownColor.DeepPink);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DeepPink);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n    /**\r\n     * Gets the DeepSkyBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.DeepSkyBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DeepSkyBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DimGray\", {\n    /**\r\n     * Gets the DimGray default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n        brush = this.sBrushes.getValue(KnownColor.DimGray);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DimGray);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n    /**\r\n     * Gets the DodgerBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.DodgerBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.DodgerBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Firebrick\", {\n    /**\r\n     * Gets the Firebrick default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n        brush = this.sBrushes.getValue(KnownColor.Firebrick);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Firebrick);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n    /**\r\n     * Gets the FloralWhite default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n        brush = this.sBrushes.getValue(KnownColor.FloralWhite);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.FloralWhite);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n    /**\r\n     * Gets the ForestGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.ForestGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.ForestGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n    /**\r\n     * Gets the Fuchsia default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n        brush = this.sBrushes.getValue(KnownColor.Fuchsia);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Fuchsia);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n    /**\r\n     * Gets the Gainsborough default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n        brush = this.sBrushes.getValue(KnownColor.Gainsboro);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Gainsboro);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n    /**\r\n     * Gets the GhostWhite default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n        brush = this.sBrushes.getValue(KnownColor.GhostWhite);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.GhostWhite);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Gold\", {\n    /**\r\n     * Gets the Gold default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Gold)) {\n        brush = this.sBrushes.getValue(KnownColor.Gold);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Gold);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n    /**\r\n     * Gets the Goldenrod default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n        brush = this.sBrushes.getValue(KnownColor.Goldenrod);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Goldenrod);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Gray\", {\n    /**\r\n     * Gets the Gray default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Gray)) {\n        brush = this.sBrushes.getValue(KnownColor.Gray);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Gray);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Green\", {\n    /**\r\n     * Gets the Green default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Green)) {\n        brush = this.sBrushes.getValue(KnownColor.Green);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Green);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n    /**\r\n     * Gets the GreenYellow default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n        brush = this.sBrushes.getValue(KnownColor.GreenYellow);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.GreenYellow);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Honeydew\", {\n    /**\r\n     * Gets the Honeydew default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n        brush = this.sBrushes.getValue(KnownColor.Honeydew);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Honeydew);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"HotPink\", {\n    /**\r\n     * Gets the HotPink default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n        brush = this.sBrushes.getValue(KnownColor.HotPink);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.HotPink);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"IndianRed\", {\n    /**\r\n     * Gets the IndianRed default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n        brush = this.sBrushes.getValue(KnownColor.IndianRed);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.IndianRed);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Indigo\", {\n    /**\r\n     * Gets the Indigo default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n        brush = this.sBrushes.getValue(KnownColor.Indigo);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Indigo);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Ivory\", {\n    /**\r\n     * Gets the Ivory default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n        brush = this.sBrushes.getValue(KnownColor.Ivory);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Ivory);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Khaki\", {\n    /**\r\n     * Gets the Khaki default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n        brush = this.sBrushes.getValue(KnownColor.Khaki);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Khaki);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Lavender\", {\n    /**\r\n     * Gets the Lavender default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n        brush = this.sBrushes.getValue(KnownColor.Lavender);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Lavender);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n    /**\r\n     * Gets the LavenderBlush default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n        brush = this.sBrushes.getValue(KnownColor.LavenderBlush);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LavenderBlush);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n    /**\r\n     * Gets the LawnGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.LawnGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LawnGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n    /**\r\n     * Gets the LemonChiffon default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n        brush = this.sBrushes.getValue(KnownColor.LemonChiffon);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LemonChiffon);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightBlue\", {\n    /**\r\n     * Gets the LightBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.LightBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightCoral\", {\n    /**\r\n     * Gets the LightCoral default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n        brush = this.sBrushes.getValue(KnownColor.LightCoral);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightCoral);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightCyan\", {\n    /**\r\n     * Gets the LightCyan default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n        brush = this.sBrushes.getValue(KnownColor.LightCyan);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightCyan);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n    /**\r\n     * Gets the LightGoldenrodYellow default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n        brush = this.sBrushes.getValue(KnownColor.LightGoldenrodYellow);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightGray\", {\n    /**\r\n     * Gets the LightGray default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n        brush = this.sBrushes.getValue(KnownColor.LightGray);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightGray);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightGreen\", {\n    /**\r\n     * Gets the LightGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.LightGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightPink\", {\n    /**\r\n     * Gets the LightPink default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n        brush = this.sBrushes.getValue(KnownColor.LightPink);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightPink);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n    /**\r\n     * Gets the LightSalmon default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n        brush = this.sBrushes.getValue(KnownColor.LightSalmon);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightSalmon);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n    /**\r\n     * Gets the LightSeaGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.LightSeaGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightSeaGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n    /**\r\n     * Gets the LightSkyBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.LightSkyBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightSkyBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n    /**\r\n     * Gets the LightSlateGray default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n        brush = this.sBrushes.getValue(KnownColor.LightSlateGray);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightSlateGray);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n    /**\r\n     * Gets the LightSteelBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.LightSteelBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightSteelBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LightYellow\", {\n    /**\r\n     * Gets the LightYellow default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n        brush = this.sBrushes.getValue(KnownColor.LightYellow);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LightYellow);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Lime\", {\n    /**\r\n     * Gets the Lime default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Lime)) {\n        brush = this.sBrushes.getValue(KnownColor.Lime);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Lime);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n    /**\r\n     * Gets the LimeGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.LimeGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.LimeGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Linen\", {\n    /**\r\n     * Gets the Linen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Linen)) {\n        brush = this.sBrushes.getValue(KnownColor.Linen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Linen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Magenta\", {\n    /**\r\n     * Gets the Magenta default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n        brush = this.sBrushes.getValue(KnownColor.Magenta);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Magenta);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Maroon\", {\n    /**\r\n     * Gets the Maroon default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n        brush = this.sBrushes.getValue(KnownColor.Maroon);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Maroon);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n    /**\r\n     * Gets the MediumAquamarine default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumAquamarine);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumAquamarine);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n    /**\r\n     * Gets the MediumBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n    /**\r\n     * Gets the MediumOrchid default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumOrchid);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumOrchid);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n    /**\r\n     * Gets the MediumPurple default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumPurple);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumPurple);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n    /**\r\n     * Gets the MediumSeaGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumSeaGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumSeaGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n    /**\r\n     * Gets the MediumSlateBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumSlateBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumSlateBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n    /**\r\n     * Gets the MediumSpringGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumSpringGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumSpringGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n    /**\r\n     * Gets the MediumTurquoise default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumTurquoise);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumTurquoise);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n    /**\r\n     * Gets the MediumVioletRed default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n        brush = this.sBrushes.getValue(KnownColor.MediumVioletRed);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MediumVioletRed);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n    /**\r\n     * Gets the MidnightBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.MidnightBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MidnightBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MintCream\", {\n    /**\r\n     * Gets the MintCream default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n        brush = this.sBrushes.getValue(KnownColor.MintCream);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MintCream);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"MistyRose\", {\n    /**\r\n     * Gets the MistyRose default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n        brush = this.sBrushes.getValue(KnownColor.MistyRose);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.MistyRose);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Moccasin\", {\n    /**\r\n     * Gets the Moccasin default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n        brush = this.sBrushes.getValue(KnownColor.Moccasin);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Moccasin);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n    /**\r\n     * Gets the NavajoWhite default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n        brush = this.sBrushes.getValue(KnownColor.NavajoWhite);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.NavajoWhite);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Navy\", {\n    /**\r\n     * Gets the Navy default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Navy)) {\n        brush = this.sBrushes.getValue(KnownColor.Navy);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Navy);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"OldLace\", {\n    /**\r\n     * Gets the OldLace default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n        brush = this.sBrushes.getValue(KnownColor.OldLace);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.OldLace);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Olive\", {\n    /**\r\n     * Gets the Olive default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Olive)) {\n        brush = this.sBrushes.getValue(KnownColor.Olive);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Olive);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n    /**\r\n     * Gets the OliveDrab default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n        brush = this.sBrushes.getValue(KnownColor.OliveDrab);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.OliveDrab);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Orange\", {\n    /**\r\n     * Gets the Orange default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Orange)) {\n        brush = this.sBrushes.getValue(KnownColor.Orange);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Orange);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n    /**\r\n     * Gets the OrangeRed default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n        brush = this.sBrushes.getValue(KnownColor.OrangeRed);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.OrangeRed);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Orchid\", {\n    /**\r\n     * Gets the Orchid default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n        brush = this.sBrushes.getValue(KnownColor.Orchid);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Orchid);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n    /**\r\n     * Gets the PaleGoldenrod default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n        brush = this.sBrushes.getValue(KnownColor.PaleGoldenrod);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.PaleGoldenrod);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n    /**\r\n     * Gets the PaleGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.PaleGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.PaleGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n    /**\r\n     * Gets the PaleTurquoise default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n        brush = this.sBrushes.getValue(KnownColor.PaleTurquoise);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.PaleTurquoise);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n    /**\r\n     * Gets the PaleVioletRed default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n        brush = this.sBrushes.getValue(KnownColor.PaleVioletRed);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.PaleVioletRed);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n    /**\r\n     * Gets the PapayaWhip default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n        brush = this.sBrushes.getValue(KnownColor.PapayaWhip);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.PapayaWhip);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n    /**\r\n     * Gets the PeachPuff default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n        brush = this.sBrushes.getValue(KnownColor.PeachPuff);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.PeachPuff);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Peru\", {\n    /**\r\n     * Gets the Peru default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Peru)) {\n        brush = this.sBrushes.getValue(KnownColor.Peru);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Peru);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Pink\", {\n    /**\r\n     * Gets the Pink default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Pink)) {\n        brush = this.sBrushes.getValue(KnownColor.Pink);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Pink);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Plum\", {\n    /**\r\n     * Gets the Plum default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Plum)) {\n        brush = this.sBrushes.getValue(KnownColor.Plum);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Plum);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n    /**\r\n     * Gets the PowderBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.PowderBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.PowderBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Purple\", {\n    /**\r\n     * Gets the Purple default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Purple)) {\n        brush = this.sBrushes.getValue(KnownColor.Purple);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Purple);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Red\", {\n    /**\r\n     * Gets the Red default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Red)) {\n        brush = this.sBrushes.getValue(KnownColor.Red);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Red);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n    /**\r\n     * Gets the RosyBrown default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n        brush = this.sBrushes.getValue(KnownColor.RosyBrown);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.RosyBrown);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n    /**\r\n     * Gets the RoyalBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.RoyalBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.RoyalBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n    /**\r\n     * Gets the SaddleBrown default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n        brush = this.sBrushes.getValue(KnownColor.SaddleBrown);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SaddleBrown);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Salmon\", {\n    /**\r\n     * Gets the Salmon default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n        brush = this.sBrushes.getValue(KnownColor.Salmon);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Salmon);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n    /**\r\n     * Gets the SandyBrown default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n        brush = this.sBrushes.getValue(KnownColor.SandyBrown);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SandyBrown);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n    /**\r\n     * Gets the SeaGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.SeaGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SeaGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SeaShell\", {\n    /**\r\n     * Gets the SeaShell default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n        brush = this.sBrushes.getValue(KnownColor.SeaShell);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SeaShell);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Sienna\", {\n    /**\r\n     * Gets the Sienna default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n        brush = this.sBrushes.getValue(KnownColor.Sienna);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Sienna);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Silver\", {\n    /**\r\n     * Gets the Silver default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Silver)) {\n        brush = this.sBrushes.getValue(KnownColor.Silver);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Silver);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n    /**\r\n     * Gets the SkyBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.SkyBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SkyBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n    /**\r\n     * Gets the SlateBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.SlateBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SlateBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SlateGray\", {\n    /**\r\n     * Gets the SlateGray default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n        brush = this.sBrushes.getValue(KnownColor.SlateGray);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SlateGray);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Snow\", {\n    /**\r\n     * Gets the Snow default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Snow)) {\n        brush = this.sBrushes.getValue(KnownColor.Snow);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Snow);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n    /**\r\n     * Gets the SpringGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.SpringGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SpringGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n    /**\r\n     * Gets the SteelBlue default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n        brush = this.sBrushes.getValue(KnownColor.SteelBlue);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.SteelBlue);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Tan\", {\n    /**\r\n     * Gets the Tan default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Tan)) {\n        brush = this.sBrushes.getValue(KnownColor.Tan);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Tan);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Teal\", {\n    /**\r\n     * Gets the Teal default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Teal)) {\n        brush = this.sBrushes.getValue(KnownColor.Teal);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Teal);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Thistle\", {\n    /**\r\n     * Gets the Thistle default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n        brush = this.sBrushes.getValue(KnownColor.Thistle);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Thistle);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Tomato\", {\n    /**\r\n     * Gets the Tomato default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n        brush = this.sBrushes.getValue(KnownColor.Tomato);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Tomato);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Transparent\", {\n    /**\r\n     * Gets the Transparent default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n        brush = this.sBrushes.getValue(KnownColor.Transparent);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Transparent);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Turquoise\", {\n    /**\r\n     * Gets the Turquoise default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n        brush = this.sBrushes.getValue(KnownColor.Turquoise);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Turquoise);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Violet\", {\n    /**\r\n     * Gets the Violet default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Violet)) {\n        brush = this.sBrushes.getValue(KnownColor.Violet);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Violet);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Wheat\", {\n    /**\r\n     * Gets the Wheat default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n        brush = this.sBrushes.getValue(KnownColor.Wheat);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Wheat);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"White\", {\n    /**\r\n     * Gets the White default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.White)) {\n        brush = this.sBrushes.getValue(KnownColor.White);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.White);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n    /**\r\n     * Gets the WhiteSmoke default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n        brush = this.sBrushes.getValue(KnownColor.WhiteSmoke);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.WhiteSmoke);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"Yellow\", {\n    /**\r\n     * Gets the Yellow default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n        brush = this.sBrushes.getValue(KnownColor.Yellow);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.Yellow);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n    /**\r\n     * Gets the YellowGreen default brush.\r\n     * @public\r\n     */\n    get: function () {\n      var brush = null;\n      if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n        brush = this.sBrushes.getValue(KnownColor.YellowGreen);\n      }\n      if (brush == null) {\n        brush = this.getBrush(KnownColor.YellowGreen);\n      }\n      return brush;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Get the brush.\r\n   */\n  PdfBrushes.getBrush = function (colorName) {\n    var pdfColor = this.getColorValue(colorName);\n    var brush = new PdfSolidBrush(pdfColor);\n    this.sBrushes.setValue(colorName, brush);\n    return brush;\n  };\n  /**\r\n   * Get the color value.\r\n   * @param colorName The KnownColor name.\r\n   */\n  /* tslint:disable */\n  PdfBrushes.getColorValue = function (colorName) {\n    var color = new PdfColor();\n    switch (colorName) {\n      case KnownColor.Transparent:\n        color = new PdfColor(0, 255, 255, 255);\n        break;\n      case KnownColor.AliceBlue:\n        color = new PdfColor(255, 240, 248, 255);\n        break;\n      case KnownColor.AntiqueWhite:\n        color = new PdfColor(255, 250, 235, 215);\n        break;\n      case KnownColor.Aqua:\n        color = new PdfColor(255, 0, 255, 255);\n        break;\n      case KnownColor.Aquamarine:\n        color = new PdfColor(255, 127, 255, 212);\n        break;\n      case KnownColor.Azure:\n        color = new PdfColor(255, 240, 255, 255);\n        break;\n      case KnownColor.Beige:\n        color = new PdfColor(255, 245, 245, 220);\n        break;\n      case KnownColor.Bisque:\n        color = new PdfColor(255, 255, 228, 196);\n        break;\n      case KnownColor.Black:\n        color = new PdfColor(255, 0, 0, 0);\n        break;\n      case KnownColor.BlanchedAlmond:\n        color = new PdfColor(255, 255, 235, 205);\n        break;\n      case KnownColor.Blue:\n        color = new PdfColor(255, 0, 0, 255);\n        break;\n      case KnownColor.BlueViolet:\n        color = new PdfColor(255, 138, 43, 226);\n        break;\n      case KnownColor.Brown:\n        color = new PdfColor(255, 165, 42, 42);\n        break;\n      case KnownColor.BurlyWood:\n        color = new PdfColor(255, 222, 184, 135);\n        break;\n      case KnownColor.CadetBlue:\n        color = new PdfColor(255, 95, 158, 160);\n        break;\n      case KnownColor.Chartreuse:\n        color = new PdfColor(255, 127, 255, 0);\n        break;\n      case KnownColor.Chocolate:\n        color = new PdfColor(255, 210, 105, 30);\n        break;\n      case KnownColor.Coral:\n        color = new PdfColor(255, 255, 127, 80);\n        break;\n      case KnownColor.CornflowerBlue:\n        color = new PdfColor(255, 100, 149, 237);\n        break;\n      case KnownColor.Cornsilk:\n        color = new PdfColor(255, 255, 248, 220);\n        break;\n      case KnownColor.Crimson:\n        color = new PdfColor(255, 220, 20, 60);\n        break;\n      case KnownColor.Cyan:\n        color = new PdfColor(255, 0, 255, 255);\n        break;\n      case KnownColor.DarkBlue:\n        color = new PdfColor(255, 0, 0, 139);\n        break;\n      case KnownColor.DarkCyan:\n        color = new PdfColor(255, 0, 139, 139);\n        break;\n      case KnownColor.DarkGoldenrod:\n        color = new PdfColor(255, 184, 134, 11);\n        break;\n      case KnownColor.DarkGray:\n        color = new PdfColor(255, 169, 169, 169);\n        break;\n      case KnownColor.DarkGreen:\n        color = new PdfColor(255, 0, 100, 0);\n        break;\n      case KnownColor.DarkKhaki:\n        color = new PdfColor(255, 189, 183, 107);\n        break;\n      case KnownColor.DarkMagenta:\n        color = new PdfColor(255, 139, 0, 139);\n        break;\n      case KnownColor.DarkOliveGreen:\n        color = new PdfColor(255, 85, 107, 47);\n        break;\n      case KnownColor.DarkOrange:\n        color = new PdfColor(255, 255, 140, 0);\n        break;\n      case KnownColor.DarkOrchid:\n        color = new PdfColor(255, 153, 50, 204);\n        break;\n      case KnownColor.DarkRed:\n        color = new PdfColor(255, 139, 0, 0);\n        break;\n      case KnownColor.DarkSalmon:\n        color = new PdfColor(255, 233, 150, 122);\n        break;\n      case KnownColor.DarkSeaGreen:\n        color = new PdfColor(255, 143, 188, 139);\n        break;\n      case KnownColor.DarkSlateBlue:\n        color = new PdfColor(255, 72, 61, 139);\n        break;\n      case KnownColor.DarkSlateGray:\n        color = new PdfColor(255, 47, 79, 79);\n        break;\n      case KnownColor.DarkTurquoise:\n        color = new PdfColor(255, 0, 206, 209);\n        break;\n      case KnownColor.DarkViolet:\n        color = new PdfColor(255, 148, 0, 211);\n        break;\n      case KnownColor.DeepPink:\n        color = new PdfColor(255, 255, 20, 147);\n        break;\n      case KnownColor.DeepSkyBlue:\n        color = new PdfColor(255, 0, 191, 255);\n        break;\n      case KnownColor.DimGray:\n        color = new PdfColor(255, 105, 105, 105);\n        break;\n      case KnownColor.DodgerBlue:\n        color = new PdfColor(255, 30, 144, 255);\n        break;\n      case KnownColor.Firebrick:\n        color = new PdfColor(255, 178, 34, 34);\n        break;\n      case KnownColor.FloralWhite:\n        color = new PdfColor(255, 255, 250, 240);\n        break;\n      case KnownColor.ForestGreen:\n        color = new PdfColor(255, 34, 139, 34);\n        break;\n      case KnownColor.Fuchsia:\n        color = new PdfColor(255, 255, 0, 255);\n        break;\n      case KnownColor.Gainsboro:\n        color = new PdfColor(255, 220, 220, 220);\n        break;\n      case KnownColor.GhostWhite:\n        color = new PdfColor(255, 248, 248, 255);\n        break;\n      case KnownColor.Gold:\n        color = new PdfColor(255, 255, 215, 0);\n        break;\n      case KnownColor.Goldenrod:\n        color = new PdfColor(255, 218, 165, 32);\n        break;\n      case KnownColor.Gray:\n        color = new PdfColor(255, 128, 128, 128);\n        break;\n      case KnownColor.Green:\n        color = new PdfColor(255, 0, 128, 0);\n        break;\n      case KnownColor.GreenYellow:\n        color = new PdfColor(255, 173, 255, 47);\n        break;\n      case KnownColor.Honeydew:\n        color = new PdfColor(255, 240, 255, 240);\n        break;\n      case KnownColor.HotPink:\n        color = new PdfColor(255, 255, 105, 180);\n        break;\n      case KnownColor.IndianRed:\n        color = new PdfColor(255, 205, 92, 92);\n        break;\n      case KnownColor.Indigo:\n        color = new PdfColor(255, 75, 0, 130);\n        break;\n      case KnownColor.Ivory:\n        color = new PdfColor(255, 255, 255, 240);\n        break;\n      case KnownColor.Khaki:\n        color = new PdfColor(255, 240, 230, 140);\n        break;\n      case KnownColor.Lavender:\n        color = new PdfColor(255, 230, 230, 250);\n        break;\n      case KnownColor.LavenderBlush:\n        color = new PdfColor(255, 255, 240, 245);\n        break;\n      case KnownColor.LawnGreen:\n        color = new PdfColor(255, 124, 252, 0);\n        break;\n      case KnownColor.LemonChiffon:\n        color = new PdfColor(255, 255, 250, 205);\n        break;\n      case KnownColor.LightBlue:\n        color = new PdfColor(255, 173, 216, 230);\n        break;\n      case KnownColor.LightCoral:\n        color = new PdfColor(255, 240, 128, 128);\n        break;\n      case KnownColor.LightCyan:\n        color = new PdfColor(255, 224, 255, 255);\n        break;\n      case KnownColor.LightGoldenrodYellow:\n        color = new PdfColor(255, 250, 250, 210);\n        break;\n      case KnownColor.LightGreen:\n        color = new PdfColor(255, 144, 238, 144);\n        break;\n      case KnownColor.LightGray:\n        color = new PdfColor(255, 211, 211, 211);\n        break;\n      case KnownColor.LightPink:\n        color = new PdfColor(255, 255, 182, 193);\n        break;\n      case KnownColor.LightSalmon:\n        color = new PdfColor(255, 255, 160, 122);\n        break;\n      case KnownColor.LightSeaGreen:\n        color = new PdfColor(255, 32, 178, 170);\n        break;\n      case KnownColor.LightSkyBlue:\n        color = new PdfColor(255, 135, 206, 250);\n        break;\n      case KnownColor.LightSlateGray:\n        color = new PdfColor(255, 119, 136, 153);\n        break;\n      case KnownColor.LightSteelBlue:\n        color = new PdfColor(255, 176, 196, 222);\n        break;\n      case KnownColor.LightYellow:\n        color = new PdfColor(255, 255, 255, 224);\n        break;\n      case KnownColor.Lime:\n        color = new PdfColor(255, 0, 255, 0);\n        break;\n      case KnownColor.LimeGreen:\n        color = new PdfColor(255, 50, 205, 50);\n        break;\n      case KnownColor.Linen:\n        color = new PdfColor(255, 250, 240, 230);\n        break;\n      case KnownColor.Magenta:\n        color = new PdfColor(255, 255, 0, 255);\n        break;\n      case KnownColor.Maroon:\n        color = new PdfColor(255, 128, 0, 0);\n        break;\n      case KnownColor.MediumAquamarine:\n        color = new PdfColor(255, 102, 205, 170);\n        break;\n      case KnownColor.MediumBlue:\n        color = new PdfColor(255, 0, 0, 205);\n        break;\n      case KnownColor.MediumOrchid:\n        color = new PdfColor(255, 186, 85, 211);\n        break;\n      case KnownColor.MediumPurple:\n        color = new PdfColor(255, 147, 112, 219);\n        break;\n      case KnownColor.MediumSeaGreen:\n        color = new PdfColor(255, 60, 179, 113);\n        break;\n      case KnownColor.MediumSlateBlue:\n        color = new PdfColor(255, 123, 104, 238);\n        break;\n      case KnownColor.MediumSpringGreen:\n        color = new PdfColor(255, 0, 250, 154);\n        break;\n      case KnownColor.MediumTurquoise:\n        color = new PdfColor(255, 72, 209, 204);\n        break;\n      case KnownColor.MediumVioletRed:\n        color = new PdfColor(255, 199, 21, 133);\n        break;\n      case KnownColor.MidnightBlue:\n        color = new PdfColor(255, 25, 25, 112);\n        break;\n      case KnownColor.MintCream:\n        color = new PdfColor(255, 245, 255, 250);\n        break;\n      case KnownColor.MistyRose:\n        color = new PdfColor(255, 255, 228, 225);\n        break;\n      case KnownColor.Moccasin:\n        color = new PdfColor(255, 255, 228, 181);\n        break;\n      case KnownColor.NavajoWhite:\n        color = new PdfColor(255, 255, 222, 173);\n        break;\n      case KnownColor.Navy:\n        color = new PdfColor(255, 0, 0, 128);\n        break;\n      case KnownColor.OldLace:\n        color = new PdfColor(255, 253, 245, 230);\n        break;\n      case KnownColor.Olive:\n        color = new PdfColor(255, 128, 128, 0);\n        break;\n      case KnownColor.OliveDrab:\n        color = new PdfColor(255, 107, 142, 35);\n        break;\n      case KnownColor.Orange:\n        color = new PdfColor(255, 255, 165, 0);\n        break;\n      case KnownColor.OrangeRed:\n        color = new PdfColor(255, 255, 69, 0);\n        break;\n      case KnownColor.Orchid:\n        color = new PdfColor(255, 218, 112, 214);\n        break;\n      case KnownColor.PaleGoldenrod:\n        color = new PdfColor(255, 238, 232, 170);\n        break;\n      case KnownColor.PaleGreen:\n        color = new PdfColor(255, 152, 251, 152);\n        break;\n      case KnownColor.PaleTurquoise:\n        color = new PdfColor(255, 175, 238, 238);\n        break;\n      case KnownColor.PaleVioletRed:\n        color = new PdfColor(255, 219, 112, 147);\n        break;\n      case KnownColor.PapayaWhip:\n        color = new PdfColor(255, 255, 239, 213);\n        break;\n      case KnownColor.PeachPuff:\n        color = new PdfColor(255, 255, 218, 185);\n        break;\n      case KnownColor.Peru:\n        color = new PdfColor(255, 205, 133, 63);\n        break;\n      case KnownColor.Pink:\n        color = new PdfColor(255, 255, 192, 203);\n        break;\n      case KnownColor.Plum:\n        color = new PdfColor(255, 221, 160, 221);\n        break;\n      case KnownColor.PowderBlue:\n        color = new PdfColor(255, 176, 224, 230);\n        break;\n      case KnownColor.Purple:\n        color = new PdfColor(255, 128, 0, 128);\n        break;\n      case KnownColor.Red:\n        color = new PdfColor(255, 255, 0, 0);\n        break;\n      case KnownColor.RosyBrown:\n        color = new PdfColor(255, 188, 143, 143);\n        break;\n      case KnownColor.RoyalBlue:\n        color = new PdfColor(255, 65, 105, 225);\n        break;\n      case KnownColor.SaddleBrown:\n        color = new PdfColor(255, 139, 69, 19);\n        break;\n      case KnownColor.Salmon:\n        color = new PdfColor(255, 250, 128, 114);\n        break;\n      case KnownColor.SandyBrown:\n        color = new PdfColor(255, 244, 164, 96);\n        break;\n      case KnownColor.SeaGreen:\n        color = new PdfColor(255, 46, 139, 87);\n        break;\n      case KnownColor.SeaShell:\n        color = new PdfColor(255, 255, 245, 238);\n        break;\n      case KnownColor.Sienna:\n        color = new PdfColor(255, 160, 82, 45);\n        break;\n      case KnownColor.Silver:\n        color = new PdfColor(255, 192, 192, 192);\n        break;\n      case KnownColor.SkyBlue:\n        color = new PdfColor(255, 135, 206, 235);\n        break;\n      case KnownColor.SlateBlue:\n        color = new PdfColor(255, 106, 90, 205);\n        break;\n      case KnownColor.SlateGray:\n        color = new PdfColor(255, 112, 128, 144);\n        break;\n      case KnownColor.Snow:\n        color = new PdfColor(255, 255, 250, 250);\n        break;\n      case KnownColor.SpringGreen:\n        color = new PdfColor(255, 0, 255, 127);\n        break;\n      case KnownColor.SteelBlue:\n        color = new PdfColor(255, 70, 130, 180);\n        break;\n      case KnownColor.Tan:\n        color = new PdfColor(255, 210, 180, 140);\n        break;\n      case KnownColor.Teal:\n        color = new PdfColor(255, 0, 128, 128);\n        break;\n      case KnownColor.Thistle:\n        color = new PdfColor(255, 216, 191, 216);\n        break;\n      case KnownColor.Tomato:\n        color = new PdfColor(255, 255, 99, 71);\n        break;\n      case KnownColor.Turquoise:\n        color = new PdfColor(255, 64, 224, 208);\n        break;\n      case KnownColor.Violet:\n        color = new PdfColor(255, 238, 130, 238);\n        break;\n      case KnownColor.Wheat:\n        color = new PdfColor(255, 245, 222, 179);\n        break;\n      case KnownColor.White:\n        color = new PdfColor(255, 255, 255, 255);\n        break;\n      case KnownColor.WhiteSmoke:\n        color = new PdfColor(255, 245, 245, 245);\n        break;\n      case KnownColor.Yellow:\n        color = new PdfColor(255, 255, 255, 0);\n        break;\n      case KnownColor.YellowGreen:\n        color = new PdfColor(255, 154, 205, 50);\n        break;\n    }\n    return color;\n  };\n  //Static Fields\n  /**\r\n   * Local variable to store the brushes.\r\n   */\n  PdfBrushes.sBrushes = new Dictionary();\n  return PdfBrushes;\n}();\nexport { PdfBrushes };","map":{"version":3,"names":["PdfColor","Dictionary","KnownColor","PdfSolidBrush","PdfBrushes","Object","defineProperty","get","brush","sBrushes","containsKey","AliceBlue","getValue","getBrush","enumerable","configurable","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","pdfColor","getColorValue","setValue","color"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brushes.js"],"sourcesContent":["/**\r\n * PdfBrushes.ts class for EJ2-PDF\r\n */\r\nimport { PdfColor } from './../pdf-color';\r\nimport { Dictionary } from './../../collections/dictionary';\r\nimport { KnownColor } from './enum';\r\nimport { PdfSolidBrush } from './pdf-solid-brush';\r\n/**\r\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\r\n * ellipses, pies, polygons, and paths.\r\n * @private\r\n */\r\nvar PdfBrushes = /** @class */ (function () {\r\n    function PdfBrushes() {\r\n    }\r\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\r\n        //Static Properties\r\n        /**\r\n         * Gets the AliceBlue brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.AliceBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\r\n        /**\r\n         * Gets the antique white brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.AntiqueWhite);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\r\n        /**\r\n         * Gets the Aqua default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Aqua);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\r\n        /**\r\n         * Gets the Aquamarine default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Aquamarine);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Azure\", {\r\n        /**\r\n         * Gets the Azure default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Azure);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Beige\", {\r\n        /**\r\n         * Gets the Beige default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Beige);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\r\n        /**\r\n         * Gets the Bisque default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Bisque);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Black\", {\r\n        /**\r\n         * Gets the Black default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Black));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Black);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\r\n        /**\r\n         * Gets the BlanchedAlmond default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Blue\", {\r\n        /**\r\n         * Gets the Blue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Blue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\r\n        /**\r\n         * Gets the BlueViolet default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.BlueViolet);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Brown\", {\r\n        /**\r\n         * Gets the Brown default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Brown);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\r\n        /**\r\n         * Gets the BurlyWood default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.BurlyWood);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\r\n        /**\r\n         * Gets the CadetBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.CadetBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\r\n        /**\r\n         * Gets the Chartreuse default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Chartreuse);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\r\n        /**\r\n         * Gets the Chocolate default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Chocolate);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Coral\", {\r\n        /**\r\n         * Gets the Coral default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Coral);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\r\n        /**\r\n         * Gets the CornflowerBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.CornflowerBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\r\n        /**\r\n         * Gets the Corn silk default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Cornsilk);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\r\n        /**\r\n         *  Gets the Crimson default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Crimson);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\r\n        /**\r\n         * Gets the Cyan default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Cyan);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\r\n        /**\r\n         * Gets the DarkBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\r\n        /**\r\n         * Gets the DarkCyan default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkCyan);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\r\n        /**\r\n         * Gets the DarkGoldenrod default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\r\n        /**\r\n         * Gets the DarkGray default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkGray);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\r\n        /**\r\n         * Gets the DarkGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\r\n        /**\r\n         * Gets the DarkKhaki default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkKhaki);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\r\n        /**\r\n         * Gets the DarkMagenta default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkMagenta);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\r\n        /**\r\n         * Gets the DarkOliveGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\r\n        /**\r\n         * Gets the DarkOrange default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkOrange);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\r\n        /**\r\n         * Gets the DarkOrchid default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkOrchid);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\r\n        /**\r\n         * Gets the DarkRed default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkRed);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\r\n        /**\r\n         * Gets the DarkSalmon default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkSalmon);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\r\n        /**\r\n         * Gets the DarkSeaGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\r\n        /**\r\n         * Gets the DarkSlateBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\r\n        /**\r\n         * Gets the DarkSlateGray default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkSlateGray);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\r\n        /**\r\n         * Gets the DarkTurquoise default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkTurquoise);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\r\n        /**\r\n         * Gets the DarkViolet default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DarkViolet);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\r\n        /**\r\n         * Gets the DeepPink default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DeepPink);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\r\n        /**\r\n         * Gets the DeepSkyBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\r\n        /**\r\n         * Gets the DimGray default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DimGray);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\r\n        /**\r\n         * Gets the DodgerBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.DodgerBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\r\n        /**\r\n         * Gets the Firebrick default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Firebrick);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\r\n        /**\r\n         * Gets the FloralWhite default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.FloralWhite);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\r\n        /**\r\n         * Gets the ForestGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.ForestGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\r\n        /**\r\n         * Gets the Fuchsia default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Fuchsia);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\r\n        /**\r\n         * Gets the Gainsborough default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Gainsboro);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\r\n        /**\r\n         * Gets the GhostWhite default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.GhostWhite);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Gold\", {\r\n        /**\r\n         * Gets the Gold default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Gold);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\r\n        /**\r\n         * Gets the Goldenrod default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Goldenrod);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Gray\", {\r\n        /**\r\n         * Gets the Gray default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Gray);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Green\", {\r\n        /**\r\n         * Gets the Green default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Green));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Green);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\r\n        /**\r\n         * Gets the GreenYellow default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.GreenYellow);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\r\n        /**\r\n         * Gets the Honeydew default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Honeydew);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\r\n        /**\r\n         * Gets the HotPink default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.HotPink);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\r\n        /**\r\n         * Gets the IndianRed default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.IndianRed);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\r\n        /**\r\n         * Gets the Indigo default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Indigo);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\r\n        /**\r\n         * Gets the Ivory default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Ivory);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\r\n        /**\r\n         * Gets the Khaki default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Khaki);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\r\n        /**\r\n         * Gets the Lavender default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Lavender);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\r\n        /**\r\n         * Gets the LavenderBlush default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LavenderBlush);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\r\n        /**\r\n         * Gets the LawnGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LawnGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\r\n        /**\r\n         * Gets the LemonChiffon default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LemonChiffon);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\r\n        /**\r\n         * Gets the LightBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\r\n        /**\r\n         * Gets the LightCoral default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightCoral);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\r\n        /**\r\n         * Gets the LightCyan default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightCyan);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\r\n        /**\r\n         * Gets the LightGoldenrodYellow default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\r\n        /**\r\n         * Gets the LightGray default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightGray);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\r\n        /**\r\n         * Gets the LightGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\r\n        /**\r\n         * Gets the LightPink default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightPink);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\r\n        /**\r\n         * Gets the LightSalmon default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightSalmon);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\r\n        /**\r\n         * Gets the LightSeaGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightSeaGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\r\n        /**\r\n         * Gets the LightSkyBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightSkyBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\r\n        /**\r\n         * Gets the LightSlateGray default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightSlateGray);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\r\n        /**\r\n         * Gets the LightSteelBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightSteelBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\r\n        /**\r\n         * Gets the LightYellow default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LightYellow);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Lime\", {\r\n        /**\r\n         * Gets the Lime default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Lime);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\r\n        /**\r\n         * Gets the LimeGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.LimeGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Linen\", {\r\n        /**\r\n         * Gets the Linen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Linen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\r\n        /**\r\n         * Gets the Magenta default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Magenta);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\r\n        /**\r\n         * Gets the Maroon default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Maroon);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\r\n        /**\r\n         * Gets the MediumAquamarine default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumAquamarine);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\r\n        /**\r\n         * Gets the MediumBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\r\n        /**\r\n         * Gets the MediumOrchid default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumOrchid);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\r\n        /**\r\n         * Gets the MediumPurple default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumPurple);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\r\n        /**\r\n         * Gets the MediumSeaGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\r\n        /**\r\n         * Gets the MediumSlateBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\r\n        /**\r\n         * Gets the MediumSpringGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\r\n        /**\r\n         * Gets the MediumTurquoise default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumTurquoise);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\r\n        /**\r\n         * Gets the MediumVioletRed default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MediumVioletRed);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\r\n        /**\r\n         * Gets the MidnightBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MidnightBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\r\n        /**\r\n         * Gets the MintCream default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MintCream);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\r\n        /**\r\n         * Gets the MistyRose default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.MistyRose);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\r\n        /**\r\n         * Gets the Moccasin default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Moccasin);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\r\n        /**\r\n         * Gets the NavajoWhite default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.NavajoWhite);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Navy\", {\r\n        /**\r\n         * Gets the Navy default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Navy);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\r\n        /**\r\n         * Gets the OldLace default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.OldLace);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Olive\", {\r\n        /**\r\n         * Gets the Olive default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Olive);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\r\n        /**\r\n         * Gets the OliveDrab default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.OliveDrab);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Orange\", {\r\n        /**\r\n         * Gets the Orange default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Orange);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\r\n        /**\r\n         * Gets the OrangeRed default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.OrangeRed);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\r\n        /**\r\n         * Gets the Orchid default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Orchid);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\r\n        /**\r\n         * Gets the PaleGoldenrod default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\r\n        /**\r\n         * Gets the PaleGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.PaleGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\r\n        /**\r\n         * Gets the PaleTurquoise default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.PaleTurquoise);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\r\n        /**\r\n         * Gets the PaleVioletRed default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.PaleVioletRed);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\r\n        /**\r\n         * Gets the PapayaWhip default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.PapayaWhip);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\r\n        /**\r\n         * Gets the PeachPuff default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.PeachPuff);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Peru\", {\r\n        /**\r\n         * Gets the Peru default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Peru);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Pink\", {\r\n        /**\r\n         * Gets the Pink default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Pink);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Plum\", {\r\n        /**\r\n         * Gets the Plum default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Plum);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\r\n        /**\r\n         * Gets the PowderBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.PowderBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Purple\", {\r\n        /**\r\n         * Gets the Purple default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Purple);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Red\", {\r\n        /**\r\n         * Gets the Red default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Red));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Red);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\r\n        /**\r\n         * Gets the RosyBrown default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.RosyBrown);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\r\n        /**\r\n         * Gets the RoyalBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.RoyalBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\r\n        /**\r\n         * Gets the SaddleBrown default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SaddleBrown);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\r\n        /**\r\n         * Gets the Salmon default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Salmon);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\r\n        /**\r\n         * Gets the SandyBrown default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SandyBrown);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\r\n        /**\r\n         * Gets the SeaGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SeaGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\r\n        /**\r\n         * Gets the SeaShell default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SeaShell);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\r\n        /**\r\n         * Gets the Sienna default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Sienna);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Silver\", {\r\n        /**\r\n         * Gets the Silver default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Silver);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\r\n        /**\r\n         * Gets the SkyBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SkyBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\r\n        /**\r\n         * Gets the SlateBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SlateBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\r\n        /**\r\n         * Gets the SlateGray default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SlateGray);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Snow\", {\r\n        /**\r\n         * Gets the Snow default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Snow);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\r\n        /**\r\n         * Gets the SpringGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SpringGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\r\n        /**\r\n         * Gets the SteelBlue default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.SteelBlue);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Tan\", {\r\n        /**\r\n         * Gets the Tan default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Tan);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Teal\", {\r\n        /**\r\n         * Gets the Teal default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Teal);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\r\n        /**\r\n         * Gets the Thistle default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Thistle);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\r\n        /**\r\n         * Gets the Tomato default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Tomato);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\r\n        /**\r\n         * Gets the Transparent default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Transparent);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\r\n        /**\r\n         * Gets the Turquoise default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Turquoise);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Violet\", {\r\n        /**\r\n         * Gets the Violet default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Violet);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\r\n        /**\r\n         * Gets the Wheat default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Wheat);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"White\", {\r\n        /**\r\n         * Gets the White default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.White)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.White));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.White);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\r\n        /**\r\n         * Gets the WhiteSmoke default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.WhiteSmoke);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\r\n        /**\r\n         * Gets the Yellow default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.Yellow);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\r\n        /**\r\n         * Gets the YellowGreen default brush.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            var brush = null;\r\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\r\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\r\n            }\r\n            if ((brush == null)) {\r\n                brush = this.getBrush(KnownColor.YellowGreen);\r\n            }\r\n            return brush;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get the brush.\r\n     */\r\n    PdfBrushes.getBrush = function (colorName) {\r\n        var pdfColor = this.getColorValue(colorName);\r\n        var brush = new PdfSolidBrush(pdfColor);\r\n        this.sBrushes.setValue(colorName, brush);\r\n        return brush;\r\n    };\r\n    /**\r\n     * Get the color value.\r\n     * @param colorName The KnownColor name.\r\n     */\r\n    /* tslint:disable */\r\n    PdfBrushes.getColorValue = function (colorName) {\r\n        var color = new PdfColor();\r\n        switch (colorName) {\r\n            case KnownColor.Transparent:\r\n                color = new PdfColor(0, 255, 255, 255);\r\n                break;\r\n            case KnownColor.AliceBlue:\r\n                color = new PdfColor(255, 240, 248, 255);\r\n                break;\r\n            case KnownColor.AntiqueWhite:\r\n                color = new PdfColor(255, 250, 235, 215);\r\n                break;\r\n            case KnownColor.Aqua:\r\n                color = new PdfColor(255, 0, 255, 255);\r\n                break;\r\n            case KnownColor.Aquamarine:\r\n                color = new PdfColor(255, 127, 255, 212);\r\n                break;\r\n            case KnownColor.Azure:\r\n                color = new PdfColor(255, 240, 255, 255);\r\n                break;\r\n            case KnownColor.Beige:\r\n                color = new PdfColor(255, 245, 245, 220);\r\n                break;\r\n            case KnownColor.Bisque:\r\n                color = new PdfColor(255, 255, 228, 196);\r\n                break;\r\n            case KnownColor.Black:\r\n                color = new PdfColor(255, 0, 0, 0);\r\n                break;\r\n            case KnownColor.BlanchedAlmond:\r\n                color = new PdfColor(255, 255, 235, 205);\r\n                break;\r\n            case KnownColor.Blue:\r\n                color = new PdfColor(255, 0, 0, 255);\r\n                break;\r\n            case KnownColor.BlueViolet:\r\n                color = new PdfColor(255, 138, 43, 226);\r\n                break;\r\n            case KnownColor.Brown:\r\n                color = new PdfColor(255, 165, 42, 42);\r\n                break;\r\n            case KnownColor.BurlyWood:\r\n                color = new PdfColor(255, 222, 184, 135);\r\n                break;\r\n            case KnownColor.CadetBlue:\r\n                color = new PdfColor(255, 95, 158, 160);\r\n                break;\r\n            case KnownColor.Chartreuse:\r\n                color = new PdfColor(255, 127, 255, 0);\r\n                break;\r\n            case KnownColor.Chocolate:\r\n                color = new PdfColor(255, 210, 105, 30);\r\n                break;\r\n            case KnownColor.Coral:\r\n                color = new PdfColor(255, 255, 127, 80);\r\n                break;\r\n            case KnownColor.CornflowerBlue:\r\n                color = new PdfColor(255, 100, 149, 237);\r\n                break;\r\n            case KnownColor.Cornsilk:\r\n                color = new PdfColor(255, 255, 248, 220);\r\n                break;\r\n            case KnownColor.Crimson:\r\n                color = new PdfColor(255, 220, 20, 60);\r\n                break;\r\n            case KnownColor.Cyan:\r\n                color = new PdfColor(255, 0, 255, 255);\r\n                break;\r\n            case KnownColor.DarkBlue:\r\n                color = new PdfColor(255, 0, 0, 139);\r\n                break;\r\n            case KnownColor.DarkCyan:\r\n                color = new PdfColor(255, 0, 139, 139);\r\n                break;\r\n            case KnownColor.DarkGoldenrod:\r\n                color = new PdfColor(255, 184, 134, 11);\r\n                break;\r\n            case KnownColor.DarkGray:\r\n                color = new PdfColor(255, 169, 169, 169);\r\n                break;\r\n            case KnownColor.DarkGreen:\r\n                color = new PdfColor(255, 0, 100, 0);\r\n                break;\r\n            case KnownColor.DarkKhaki:\r\n                color = new PdfColor(255, 189, 183, 107);\r\n                break;\r\n            case KnownColor.DarkMagenta:\r\n                color = new PdfColor(255, 139, 0, 139);\r\n                break;\r\n            case KnownColor.DarkOliveGreen:\r\n                color = new PdfColor(255, 85, 107, 47);\r\n                break;\r\n            case KnownColor.DarkOrange:\r\n                color = new PdfColor(255, 255, 140, 0);\r\n                break;\r\n            case KnownColor.DarkOrchid:\r\n                color = new PdfColor(255, 153, 50, 204);\r\n                break;\r\n            case KnownColor.DarkRed:\r\n                color = new PdfColor(255, 139, 0, 0);\r\n                break;\r\n            case KnownColor.DarkSalmon:\r\n                color = new PdfColor(255, 233, 150, 122);\r\n                break;\r\n            case KnownColor.DarkSeaGreen:\r\n                color = new PdfColor(255, 143, 188, 139);\r\n                break;\r\n            case KnownColor.DarkSlateBlue:\r\n                color = new PdfColor(255, 72, 61, 139);\r\n                break;\r\n            case KnownColor.DarkSlateGray:\r\n                color = new PdfColor(255, 47, 79, 79);\r\n                break;\r\n            case KnownColor.DarkTurquoise:\r\n                color = new PdfColor(255, 0, 206, 209);\r\n                break;\r\n            case KnownColor.DarkViolet:\r\n                color = new PdfColor(255, 148, 0, 211);\r\n                break;\r\n            case KnownColor.DeepPink:\r\n                color = new PdfColor(255, 255, 20, 147);\r\n                break;\r\n            case KnownColor.DeepSkyBlue:\r\n                color = new PdfColor(255, 0, 191, 255);\r\n                break;\r\n            case KnownColor.DimGray:\r\n                color = new PdfColor(255, 105, 105, 105);\r\n                break;\r\n            case KnownColor.DodgerBlue:\r\n                color = new PdfColor(255, 30, 144, 255);\r\n                break;\r\n            case KnownColor.Firebrick:\r\n                color = new PdfColor(255, 178, 34, 34);\r\n                break;\r\n            case KnownColor.FloralWhite:\r\n                color = new PdfColor(255, 255, 250, 240);\r\n                break;\r\n            case KnownColor.ForestGreen:\r\n                color = new PdfColor(255, 34, 139, 34);\r\n                break;\r\n            case KnownColor.Fuchsia:\r\n                color = new PdfColor(255, 255, 0, 255);\r\n                break;\r\n            case KnownColor.Gainsboro:\r\n                color = new PdfColor(255, 220, 220, 220);\r\n                break;\r\n            case KnownColor.GhostWhite:\r\n                color = new PdfColor(255, 248, 248, 255);\r\n                break;\r\n            case KnownColor.Gold:\r\n                color = new PdfColor(255, 255, 215, 0);\r\n                break;\r\n            case KnownColor.Goldenrod:\r\n                color = new PdfColor(255, 218, 165, 32);\r\n                break;\r\n            case KnownColor.Gray:\r\n                color = new PdfColor(255, 128, 128, 128);\r\n                break;\r\n            case KnownColor.Green:\r\n                color = new PdfColor(255, 0, 128, 0);\r\n                break;\r\n            case KnownColor.GreenYellow:\r\n                color = new PdfColor(255, 173, 255, 47);\r\n                break;\r\n            case KnownColor.Honeydew:\r\n                color = new PdfColor(255, 240, 255, 240);\r\n                break;\r\n            case KnownColor.HotPink:\r\n                color = new PdfColor(255, 255, 105, 180);\r\n                break;\r\n            case KnownColor.IndianRed:\r\n                color = new PdfColor(255, 205, 92, 92);\r\n                break;\r\n            case KnownColor.Indigo:\r\n                color = new PdfColor(255, 75, 0, 130);\r\n                break;\r\n            case KnownColor.Ivory:\r\n                color = new PdfColor(255, 255, 255, 240);\r\n                break;\r\n            case KnownColor.Khaki:\r\n                color = new PdfColor(255, 240, 230, 140);\r\n                break;\r\n            case KnownColor.Lavender:\r\n                color = new PdfColor(255, 230, 230, 250);\r\n                break;\r\n            case KnownColor.LavenderBlush:\r\n                color = new PdfColor(255, 255, 240, 245);\r\n                break;\r\n            case KnownColor.LawnGreen:\r\n                color = new PdfColor(255, 124, 252, 0);\r\n                break;\r\n            case KnownColor.LemonChiffon:\r\n                color = new PdfColor(255, 255, 250, 205);\r\n                break;\r\n            case KnownColor.LightBlue:\r\n                color = new PdfColor(255, 173, 216, 230);\r\n                break;\r\n            case KnownColor.LightCoral:\r\n                color = new PdfColor(255, 240, 128, 128);\r\n                break;\r\n            case KnownColor.LightCyan:\r\n                color = new PdfColor(255, 224, 255, 255);\r\n                break;\r\n            case KnownColor.LightGoldenrodYellow:\r\n                color = new PdfColor(255, 250, 250, 210);\r\n                break;\r\n            case KnownColor.LightGreen:\r\n                color = new PdfColor(255, 144, 238, 144);\r\n                break;\r\n            case KnownColor.LightGray:\r\n                color = new PdfColor(255, 211, 211, 211);\r\n                break;\r\n            case KnownColor.LightPink:\r\n                color = new PdfColor(255, 255, 182, 193);\r\n                break;\r\n            case KnownColor.LightSalmon:\r\n                color = new PdfColor(255, 255, 160, 122);\r\n                break;\r\n            case KnownColor.LightSeaGreen:\r\n                color = new PdfColor(255, 32, 178, 170);\r\n                break;\r\n            case KnownColor.LightSkyBlue:\r\n                color = new PdfColor(255, 135, 206, 250);\r\n                break;\r\n            case KnownColor.LightSlateGray:\r\n                color = new PdfColor(255, 119, 136, 153);\r\n                break;\r\n            case KnownColor.LightSteelBlue:\r\n                color = new PdfColor(255, 176, 196, 222);\r\n                break;\r\n            case KnownColor.LightYellow:\r\n                color = new PdfColor(255, 255, 255, 224);\r\n                break;\r\n            case KnownColor.Lime:\r\n                color = new PdfColor(255, 0, 255, 0);\r\n                break;\r\n            case KnownColor.LimeGreen:\r\n                color = new PdfColor(255, 50, 205, 50);\r\n                break;\r\n            case KnownColor.Linen:\r\n                color = new PdfColor(255, 250, 240, 230);\r\n                break;\r\n            case KnownColor.Magenta:\r\n                color = new PdfColor(255, 255, 0, 255);\r\n                break;\r\n            case KnownColor.Maroon:\r\n                color = new PdfColor(255, 128, 0, 0);\r\n                break;\r\n            case KnownColor.MediumAquamarine:\r\n                color = new PdfColor(255, 102, 205, 170);\r\n                break;\r\n            case KnownColor.MediumBlue:\r\n                color = new PdfColor(255, 0, 0, 205);\r\n                break;\r\n            case KnownColor.MediumOrchid:\r\n                color = new PdfColor(255, 186, 85, 211);\r\n                break;\r\n            case KnownColor.MediumPurple:\r\n                color = new PdfColor(255, 147, 112, 219);\r\n                break;\r\n            case KnownColor.MediumSeaGreen:\r\n                color = new PdfColor(255, 60, 179, 113);\r\n                break;\r\n            case KnownColor.MediumSlateBlue:\r\n                color = new PdfColor(255, 123, 104, 238);\r\n                break;\r\n            case KnownColor.MediumSpringGreen:\r\n                color = new PdfColor(255, 0, 250, 154);\r\n                break;\r\n            case KnownColor.MediumTurquoise:\r\n                color = new PdfColor(255, 72, 209, 204);\r\n                break;\r\n            case KnownColor.MediumVioletRed:\r\n                color = new PdfColor(255, 199, 21, 133);\r\n                break;\r\n            case KnownColor.MidnightBlue:\r\n                color = new PdfColor(255, 25, 25, 112);\r\n                break;\r\n            case KnownColor.MintCream:\r\n                color = new PdfColor(255, 245, 255, 250);\r\n                break;\r\n            case KnownColor.MistyRose:\r\n                color = new PdfColor(255, 255, 228, 225);\r\n                break;\r\n            case KnownColor.Moccasin:\r\n                color = new PdfColor(255, 255, 228, 181);\r\n                break;\r\n            case KnownColor.NavajoWhite:\r\n                color = new PdfColor(255, 255, 222, 173);\r\n                break;\r\n            case KnownColor.Navy:\r\n                color = new PdfColor(255, 0, 0, 128);\r\n                break;\r\n            case KnownColor.OldLace:\r\n                color = new PdfColor(255, 253, 245, 230);\r\n                break;\r\n            case KnownColor.Olive:\r\n                color = new PdfColor(255, 128, 128, 0);\r\n                break;\r\n            case KnownColor.OliveDrab:\r\n                color = new PdfColor(255, 107, 142, 35);\r\n                break;\r\n            case KnownColor.Orange:\r\n                color = new PdfColor(255, 255, 165, 0);\r\n                break;\r\n            case KnownColor.OrangeRed:\r\n                color = new PdfColor(255, 255, 69, 0);\r\n                break;\r\n            case KnownColor.Orchid:\r\n                color = new PdfColor(255, 218, 112, 214);\r\n                break;\r\n            case KnownColor.PaleGoldenrod:\r\n                color = new PdfColor(255, 238, 232, 170);\r\n                break;\r\n            case KnownColor.PaleGreen:\r\n                color = new PdfColor(255, 152, 251, 152);\r\n                break;\r\n            case KnownColor.PaleTurquoise:\r\n                color = new PdfColor(255, 175, 238, 238);\r\n                break;\r\n            case KnownColor.PaleVioletRed:\r\n                color = new PdfColor(255, 219, 112, 147);\r\n                break;\r\n            case KnownColor.PapayaWhip:\r\n                color = new PdfColor(255, 255, 239, 213);\r\n                break;\r\n            case KnownColor.PeachPuff:\r\n                color = new PdfColor(255, 255, 218, 185);\r\n                break;\r\n            case KnownColor.Peru:\r\n                color = new PdfColor(255, 205, 133, 63);\r\n                break;\r\n            case KnownColor.Pink:\r\n                color = new PdfColor(255, 255, 192, 203);\r\n                break;\r\n            case KnownColor.Plum:\r\n                color = new PdfColor(255, 221, 160, 221);\r\n                break;\r\n            case KnownColor.PowderBlue:\r\n                color = new PdfColor(255, 176, 224, 230);\r\n                break;\r\n            case KnownColor.Purple:\r\n                color = new PdfColor(255, 128, 0, 128);\r\n                break;\r\n            case KnownColor.Red:\r\n                color = new PdfColor(255, 255, 0, 0);\r\n                break;\r\n            case KnownColor.RosyBrown:\r\n                color = new PdfColor(255, 188, 143, 143);\r\n                break;\r\n            case KnownColor.RoyalBlue:\r\n                color = new PdfColor(255, 65, 105, 225);\r\n                break;\r\n            case KnownColor.SaddleBrown:\r\n                color = new PdfColor(255, 139, 69, 19);\r\n                break;\r\n            case KnownColor.Salmon:\r\n                color = new PdfColor(255, 250, 128, 114);\r\n                break;\r\n            case KnownColor.SandyBrown:\r\n                color = new PdfColor(255, 244, 164, 96);\r\n                break;\r\n            case KnownColor.SeaGreen:\r\n                color = new PdfColor(255, 46, 139, 87);\r\n                break;\r\n            case KnownColor.SeaShell:\r\n                color = new PdfColor(255, 255, 245, 238);\r\n                break;\r\n            case KnownColor.Sienna:\r\n                color = new PdfColor(255, 160, 82, 45);\r\n                break;\r\n            case KnownColor.Silver:\r\n                color = new PdfColor(255, 192, 192, 192);\r\n                break;\r\n            case KnownColor.SkyBlue:\r\n                color = new PdfColor(255, 135, 206, 235);\r\n                break;\r\n            case KnownColor.SlateBlue:\r\n                color = new PdfColor(255, 106, 90, 205);\r\n                break;\r\n            case KnownColor.SlateGray:\r\n                color = new PdfColor(255, 112, 128, 144);\r\n                break;\r\n            case KnownColor.Snow:\r\n                color = new PdfColor(255, 255, 250, 250);\r\n                break;\r\n            case KnownColor.SpringGreen:\r\n                color = new PdfColor(255, 0, 255, 127);\r\n                break;\r\n            case KnownColor.SteelBlue:\r\n                color = new PdfColor(255, 70, 130, 180);\r\n                break;\r\n            case KnownColor.Tan:\r\n                color = new PdfColor(255, 210, 180, 140);\r\n                break;\r\n            case KnownColor.Teal:\r\n                color = new PdfColor(255, 0, 128, 128);\r\n                break;\r\n            case KnownColor.Thistle:\r\n                color = new PdfColor(255, 216, 191, 216);\r\n                break;\r\n            case KnownColor.Tomato:\r\n                color = new PdfColor(255, 255, 99, 71);\r\n                break;\r\n            case KnownColor.Turquoise:\r\n                color = new PdfColor(255, 64, 224, 208);\r\n                break;\r\n            case KnownColor.Violet:\r\n                color = new PdfColor(255, 238, 130, 238);\r\n                break;\r\n            case KnownColor.Wheat:\r\n                color = new PdfColor(255, 245, 222, 179);\r\n                break;\r\n            case KnownColor.White:\r\n                color = new PdfColor(255, 255, 255, 255);\r\n                break;\r\n            case KnownColor.WhiteSmoke:\r\n                color = new PdfColor(255, 245, 245, 245);\r\n                break;\r\n            case KnownColor.Yellow:\r\n                color = new PdfColor(255, 255, 255, 0);\r\n                break;\r\n            case KnownColor.YellowGreen:\r\n                color = new PdfColor(255, 154, 205, 50);\r\n                break;\r\n        }\r\n        return color;\r\n    };\r\n    //Static Fields\r\n    /**\r\n     * Local variable to store the brushes.\r\n     */\r\n    PdfBrushes.sBrushes = new Dictionary();\r\n    return PdfBrushes;\r\n}());\r\nexport { PdfBrushes };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}