{"ast":null,"code":"/**\r\n * Used to `write a string` into output file.\r\n * @private\r\n */\nvar PdfWriter = /** @class */function () {\n  /**\r\n   * Initialize an instance of `PdfWriter` class.\r\n   * @private\r\n   */\n  function PdfWriter(stream) {\n    this.streamWriter = stream;\n  }\n  Object.defineProperty(PdfWriter.prototype, \"document\", {\n    //properties\n    /**\r\n     * Gets and Sets the `document`.\r\n     * @private\r\n     */\n    get: function () {\n      return this.pdfDocument;\n    },\n    set: function (value) {\n      this.pdfDocument = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWriter.prototype, \"position\", {\n    /**\r\n     * Gets the `position`.\r\n     * @private\r\n     */\n    get: function () {\n      return this.streamWriter.buffer.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWriter.prototype, \"length\", {\n    /**\r\n     * Gets  the `length` of the stream'.\r\n     * @private\r\n     */\n    get: function () {\n      return this.streamWriter.buffer.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWriter.prototype, \"stream\", {\n    /**\r\n     * Gets the `stream`.\r\n     * @private\r\n     */\n    get: function () {\n      var result = this.streamWriter;\n      return result;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  //public Methods\n  /**\r\n   * `Writes the specified data`.\r\n   * @private\r\n   */\n  PdfWriter.prototype.write = function (overload) {\n    var data = [];\n    var tempOverload = overload;\n    this.streamWriter.write(tempOverload);\n  };\n  return PdfWriter;\n}();\nexport { PdfWriter };","map":{"version":3,"names":["PdfWriter","stream","streamWriter","Object","defineProperty","prototype","get","pdfDocument","set","value","enumerable","configurable","buffer","size","result","write","overload","data","tempOverload"],"sources":["C:/Users/wiliam/Desktop/indiec-nuevo/fronted-vue/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js"],"sourcesContent":["/**\r\n * Used to `write a string` into output file.\r\n * @private\r\n */\r\nvar PdfWriter = /** @class */ (function () {\r\n    /**\r\n     * Initialize an instance of `PdfWriter` class.\r\n     * @private\r\n     */\r\n    function PdfWriter(stream) {\r\n        this.streamWriter = stream;\r\n    }\r\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\r\n        //properties\r\n        /**\r\n         * Gets and Sets the `document`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.pdfDocument;\r\n        },\r\n        set: function (value) {\r\n            this.pdfDocument = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\r\n        /**\r\n         * Gets the `position`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.streamWriter.buffer.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\r\n        /**\r\n         * Gets  the `length` of the stream'.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.streamWriter.buffer.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\r\n        /**\r\n         * Gets the `stream`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            var result = this.streamWriter;\r\n            return result;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //public Methods\r\n    /**\r\n     * `Writes the specified data`.\r\n     * @private\r\n     */\r\n    PdfWriter.prototype.write = function (overload) {\r\n        var data = [];\r\n        var tempOverload = overload;\r\n        this.streamWriter.write(tempOverload);\r\n    };\r\n    return PdfWriter;\r\n}());\r\nexport { PdfWriter };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,aAAe,YAAY;EACvC;AACJ;AACA;AACA;EACI,SAASA,SAASA,CAACC,MAAM,EAAE;IACvB,IAAI,CAACC,YAAY,GAAGD,MAAM;EAC9B;EACAE,MAAM,CAACC,cAAc,CAACJ,SAAS,CAACK,SAAS,EAAE,UAAU,EAAE;IACnD;IACA;AACR;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACC,WAAW;IAC3B,CAAC;IACDC,GAAG,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAClB,IAAI,CAACF,WAAW,GAAGE,KAAK;IAC5B,CAAC;IACDC,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFR,MAAM,CAACC,cAAc,CAACJ,SAAS,CAACK,SAAS,EAAE,UAAU,EAAE;IACnD;AACR;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACJ,YAAY,CAACU,MAAM,CAACC,IAAI;IACxC,CAAC;IACDH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFR,MAAM,CAACC,cAAc,CAACJ,SAAS,CAACK,SAAS,EAAE,QAAQ,EAAE;IACjD;AACR;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,OAAO,IAAI,CAACJ,YAAY,CAACU,MAAM,CAACC,IAAI;IACxC,CAAC;IACDH,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFR,MAAM,CAACC,cAAc,CAACJ,SAAS,CAACK,SAAS,EAAE,QAAQ,EAAE;IACjD;AACR;AACA;AACA;IACQC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACb,IAAIQ,MAAM,GAAG,IAAI,CAACZ,YAAY;MAC9B,OAAOY,MAAM;IACjB,CAAC;IACDJ,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;EACA;AACJ;AACA;AACA;EACIX,SAAS,CAACK,SAAS,CAACU,KAAK,GAAG,UAAUC,QAAQ,EAAE;IAC5C,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIC,YAAY,GAAGF,QAAQ;IAC3B,IAAI,CAACd,YAAY,CAACa,KAAK,CAACG,YAAY,CAAC;EACzC,CAAC;EACD,OAAOlB,SAAS;AACpB,CAAC,CAAC,CAAE;AACJ,SAASA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}